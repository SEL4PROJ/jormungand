9d6b81d96fb21c8c08e3f1fd649ce37bdafb5f92 3015 0
unsat
((set-logic AUFLIA)
(declare-fun ?v0!19 () B_Vertex$)
(declare-fun ?v1!18 () B_Vertex$)
(declare-fun ?v0!20 () B_Vertex$)
(declare-fun ?v0!17 () B_Vertex$)
(declare-fun ?v1!16 () B_Vertex$)
(declare-fun ?v0!15 () B_Vertex$)
(declare-fun ?v0!14 () B_Vertex$)
(declare-fun ?v0!13 () B_Vertex$)
(declare-fun ?v0!12 () B_Vertex$)
(declare-fun ?v0!11 () B_Vertex$)
(declare-fun ?v1!10 () B_Vertex$)
(declare-fun ?v1!9 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!8 () B_Vertex$)
(declare-fun ?v1!7 (B_Vertex$) B_Vertex$)
(declare-fun ?v1!6 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!5 () B_Vertex$)
(declare-fun ?v0!4 () B_Vertex$)
(declare-fun ?v1!3 () B_Vertex$)
(declare-fun ?v0!2 () B_Vertex$)
(declare-fun ?v1!1 () B_Vertex$)
(declare-fun ?v0!0 () B_Vertex$)
(proof
(let ((?x1893 (v_b_SP_G_2$ ?v0!19)))
(let ((?x1894 (* (- 1) ?x1893)))
(let ((?x1892 (v_b_SP_G_2$ ?v1!18)))
(let ((?x1884 (pair$ ?v1!18 ?v0!19)))
(let ((?x1885 (b_G$ ?x1884)))
(let (($x1896 (>= (+ ?x1885 ?x1892 ?x1894) 0)))
(let (($x1888 (<= (+ b_Infinity$ (* (- 1) ?x1885)) 0)))
(let (($x1883 (fun_app$ v_b_Visited_G_2$ ?v1!18)))
(let (($x2791 (not $x1883)))
(let (($x2806 (or $x2791 $x1888 $x1896)))
(let (($x2811 (not $x2806)))
(let (($x3729 (forall ((?v1 B_Vertex$) )(! (let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x2242 (= (+ ?x273 ?x1912 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(or (>= (+ ?x273 ?x1912) 0) $x300 (not $x2242)))))))) :pattern ( (v_b_SP_G_2$ ?v1) ) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!20) ) :qid k!42))
))
(let (($x3734 (not $x3729)))
(let (($x1914 (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0)))
(let (($x1909 (= ?v0!20 b_Source$)))
(let (($x3720 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1282 (>= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(or $x300 $x922 $x1282))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!42))
))
(let (($x3725 (not $x3720)))
(let (($x3737 (or $x3725 $x1909 $x1914 $x3734)))
(let ((?x4393 (fun_app$c v_b_SP_G_1$ ?v0!20)))
(let ((?x4418 (* (- 1) ?x4393)))
(let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x4419 (+ ?x1911 ?x4418)))
(let (($x5977 (>= ?x4419 0)))
(let (($x4400 (= ?x1911 ?x4393)))
(let ((?x4434 (pair$ v_b_v_G_1$ ?v0!20)))
(let ((?x4435 (b_G$ ?x4434)))
(let ((?x4436 (* (- 1) ?x4435)))
(let ((?x3104 (v_b_SP_G_2$ v_b_v_G_1$)))
(let ((?x3105 (* (- 1) ?x3104)))
(let ((?x4546 (+ ?x1911 ?x3105 ?x4436)))
(let (($x4569 (<= ?x4546 0)))
(let (($x3740 (not $x3737)))
(let ((@x4391 (hypothesis $x3740)))
(let ((@x3222 (def-axiom (or $x3737 $x3720))))
(let (($x4161 (>= ?x3104 0)))
(let (($x3703 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(>= ?x273 0)) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!42))
))
(let (($x3743 (or $x2811 $x3740)))
(let (($x3746 (not $x3743)))
(let (($x3712 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1262 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x2768 (not (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x291 $x2768 $x1262)))) :pattern ( (v_b_SP_G_2$ ?v1) (v_b_SP_G_2$ ?v0) ) :qid k!42))
))
(let (($x3717 (not $x3712)))
(let (($x3749 (or $x3717 $x3746)))
(let (($x3752 (not $x3749)))
(let (($x1869 (>= (+ (v_b_SP_G_2$ ?v1!16) (* (- 1) (v_b_SP_G_2$ ?v0!17))) 0)))
(let (($x1862 (fun_app$ v_b_Visited_G_2$ ?v0!17)))
(let (($x2745 (not $x1862)))
(let (($x1860 (fun_app$ v_b_Visited_G_2$ ?v1!16)))
(let (($x2760 (or $x1860 $x2745 $x1869)))
(let (($x2765 (not $x2760)))
(let (($x3755 (or $x2765 $x3752)))
(let (($x3758 (not $x3755)))
(let (($x3708 (not $x3703)))
(let (($x3761 (or $x3708 $x3758)))
(let (($x3764 (not $x3761)))
(let ((?x1846 (v_b_SP_G_2$ ?v0!15)))
(let (($x1847 (>= ?x1846 0)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x3904 (>= ?x257 0)))
(let (($x3556 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(>= ?x174 0)) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :qid k!42))
))
(let (($x1848 (not $x1847)))
(let (($x3767 (or $x1848 $x3764)))
(let (($x3770 (not $x3767)))
(let ((?x296 (v_b_SP_G_2$ b_Source$)))
(let (($x297 (= ?x296 0)))
(let (($x773 (not $x297)))
(let (($x3773 (or $x773 $x3770)))
(let (($x3776 (not $x3773)))
(let (($x3779 (or $x773 $x3776)))
(let (($x3782 (not $x3779)))
(let (($x3695 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x300 (not $x291)))
(or $x300 $x278)))))) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :qid k!42))
))
(let (($x3700 (not $x3695)))
(let (($x3785 (or $x3700 $x3782)))
(let (($x3788 (not $x3785)))
(let ((?x1827 (fun_app$c v_b_SP_G_1$ ?v0!14)))
(let ((?x1826 (v_b_SP_G_2$ ?v0!14)))
(let (($x1828 (= ?x1826 ?x1827)))
(let (($x1829 (or (not (fun_app$ v_b_Visited_G_2$ ?v0!14)) $x1828)))
(let (($x1830 (not $x1829)))
(let (($x3791 (or $x1830 $x3788)))
(let (($x3794 (not $x3791)))
(let (($x3686 (forall ((?v0 B_Vertex$) )(! (>= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!42))
))
(let (($x3691 (not $x3686)))
(let (($x3797 (or $x3691 $x3794)))
(let (($x3800 (not $x3797)))
(let ((?x1809 (v_b_SP_G_2$ ?v0!13)))
(let ((?x1810 (* (- 1) ?x1809)))
(let ((?x1808 (fun_app$c v_b_SP_G_1$ ?v0!13)))
(let ((?x1811 (+ ?x1808 ?x1810)))
(let (($x1812 (>= ?x1811 0)))
(let (($x1813 (not $x1812)))
(let (($x3803 (or $x1813 $x3800)))
(let (($x3806 (not $x3803)))
(let (($x3678 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1173 (* (- 1) ?x257)))
(let (($x1175 (<= (+ ?x174 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2717 (or $x1169 $x1175)))
(let (($x2718 (not $x2717)))
(or $x2718 $x278)))))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!42))
))
(let (($x3683 (not $x3678)))
(let (($x3670 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(let ((?x1186 (* (- 1) ?x273)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1185 (= (+ ?x257 ?x268 ?x1186) 0)))
(let (($x1175 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x257) (* (- 1) ?x268)) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) ?x268)) 0)))
(or $x1169 $x1175 $x1185)))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :qid k!42))
))
(let (($x3675 (not $x3670)))
(let ((?x263 (fun_upd$ v_b_Visited_G_1$)))
(let ((?x264 (fun_app$b ?x263 v_b_v_G_1$)))
(let ((?x265 (fun_app$a ?x264 true)))
(let (($x266 (= v_b_Visited_G_2$ ?x265)))
(let (($x2935 (not $x266)))
(let (($x3660 (forall ((?v0 B_Vertex$) )(! (let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1173 (* (- 1) ?x257)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x178 (>= (+ ?x174 ?x1173) 0)))))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :qid k!42))
))
(let (($x3665 (not $x3660)))
(let ((?x1173 (* (- 1) ?x257)))
(let ((?x1212 (+ b_Infinity$ ?x1173)))
(let (($x1213 (<= ?x1212 0)))
(let (($x255 (fun_app$ v_b_Visited_G_1$ v_b_v_G_1$)))
(let ((?x1775 (fun_app$c v_b_SP_G_1$ ?v0!12)))
(let ((?x1776 (* (- 1) ?x1775)))
(let ((?x1777 (+ b_Infinity$ ?x1776)))
(let (($x1778 (<= ?x1777 0)))
(let (($x1773 (fun_app$ v_b_Visited_G_1$ ?v0!12)))
(let (($x3809 (or $x1773 $x1778 $x255 $x1213 $x3665 $x2935 $x3675 $x3683 $x3806)))
(let (($x3812 (not $x3809)))
(let ((?x245 (fun_app$c v_b_SP_G_3$ b_Source$)))
(let (($x246 (= ?x245 0)))
(let (($x3622 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1140 (>= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(or $x1099 $x922 $x1140)))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!42))
))
(let (($x3627 (not $x3622)))
(let (($x3630 (or $x3627 $x246)))
(let (($x3633 (not $x3630)))
(let ((?x1734 (fun_app$c v_b_SP_G_3$ ?v0!11)))
(let ((?x1735 (* (- 1) ?x1734)))
(let ((?x1726 (pair$ ?v1!10 ?v0!11)))
(let ((?x1727 (b_G$ ?x1726)))
(let ((?x1721 (fun_app$c v_b_SP_G_3$ ?v1!10)))
(let ((?x2206 (+ ?x1721 ?x1727 ?x1735)))
(let (($x2209 (>= ?x2206 0)))
(let (($x1730 (<= (+ b_Infinity$ (* (- 1) ?x1727)) 0)))
(let (($x1724 (<= (+ b_Infinity$ (* (- 1) ?x1721)) 0)))
(let (($x2645 (or $x1724 $x1730 $x2209)))
(let (($x2650 (not $x2645)))
(let (($x3636 (or $x2650 $x3633)))
(let (($x3639 (not $x3636)))
(let (($x3614 (forall ((?v0 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2191 (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2192 (= ?x2191 0)))
(let (($x2176 (<= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2617 (not (or $x2176 (not $x2192)))))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x1099 $x2617)))))))) :pattern ( (fun_app$c v_b_SP_G_3$ ?v0) ) :qid k!42))
))
(let (($x3619 (not $x3614)))
(let (($x3642 (or $x3619 $x3639)))
(let (($x3645 (not $x3642)))
(let (($x3600 (forall ((?v1 B_Vertex$) )(! (let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2148 (= (+ ?x230 ?x1662 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x230 ?x1662) 0) (not $x2148)))))) :pattern ( (fun_app$c v_b_SP_G_3$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!8) ) :qid k!42))
))
(let (($x3605 (not $x3600)))
(let (($x1664 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!8))) 0)))
(let (($x1659 (= ?v0!8 b_Source$)))
(let (($x3608 (or $x1659 $x1664 $x3605)))
(let (($x3611 (not $x3608)))
(let (($x3648 (or $x3611 $x3645)))
(let (($x3651 (not $x3648)))
(let (($x220 (= v_b_oldSP_G_1$ v_b_oldSP_G_0$)))
(let (($x2709 (not $x220)))
(let (($x217 (= v_b_SP_G_3$ v_b_SP_G_1$)))
(let (($x2708 (not $x217)))
(let (($x215 (= v_b_v_G_2$ v_b_v_G_0$)))
(let (($x2707 (not $x215)))
(let (($x212 (= v_b_Visited_G_3$ v_b_Visited_G_1$)))
(let (($x2706 (not $x212)))
(let (($x3590 (forall ((?v0 B_Vertex$) )(! (let (($x1002 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x178 $x1002))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :qid k!42))
))
(let (($x3595 (not $x3590)))
(let (($x3654 (or $x3595 $x2706 $x2707 $x2708 $x2709 $x3651)))
(let (($x3657 (not $x3654)))
(let (($x3815 (or $x3657 $x3812)))
(let (($x3818 (not $x3815)))
(let (($x3581 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2128 (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2129 (= ?x2128 0)))
(let (($x2113 (<= (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2551 (not (or $x2113 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2129)))))
(let (($x1002 (<= (+ b_Infinity$ (* (- 1) ?x174)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x1002 $x2551)))))))) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :qid k!42))
))
(let (($x3586 (not $x3581)))
(let (($x3573 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x990 (>= (+ ?x155 ?x174 ?x991) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x179 (not $x178)))
(or $x179 $x922 $x990))))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!42))
))
(let (($x3578 (not $x3573)))
(let (($x3565 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1015 (>= (+ ?x174 ?x991) 0)))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x2492 (not $x180)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x178 $x2492 $x1015)))))))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v1) (fun_app$ v_b_Visited_G_1$ ?v0) ) :qid k!42))
))
(let (($x3570 (not $x3565)))
(let (($x3561 (not $x3556)))
(let ((?x172 (fun_app$c v_b_SP_G_1$ b_Source$)))
(let (($x173 (= ?x172 0)))
(let (($x2952 (not $x173)))
(let (($x3547 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(let ((?x2090 (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2091 (= ?x2090 0)))
(let (($x2075 (<= (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2478 (not (or $x2075 (not (v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2091)))))
(let (($x947 (<= (+ b_Infinity$ (* (- 1) ?x128)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x947 $x2478)))))))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!42))
))
(let (($x3552 (not $x3547)))
(let (($x3821 (or $x3552 $x2952 $x3561 $x3570 $x3578 $x3586 $x3818)))
(let (($x3824 (not $x3821)))
(let (($x3533 (forall ((?v1 B_Vertex$) )(! (let ((?x1540 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1541 (* (- 1) ?x1540)))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(or (>= (+ ?x128 ?x1541) 0) $x137 (not (= (+ ?x128 ?x1541 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))) :pattern ( (v_b_SP_G_0$ ?v1) ) :pattern ( (v_b_Visited_G_0$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!5) ) :qid k!42))
))
(let (($x3538 (not $x3533)))
(let ((?x1540 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1541 (* (- 1) ?x1540)))
(let ((?x1542 (+ b_Infinity$ ?x1541)))
(let (($x1543 (<= ?x1542 0)))
(let (($x1538 (= ?v0!5 b_Source$)))
(let (($x3541 (or $x1538 $x1543 $x3538)))
(let (($x1539 (not $x1538)))
(let ((@x6246 (unit-resolution (def-axiom (or $x3541 $x1539)) (hypothesis (not $x3541)) $x1539)))
(let (($x5625 (= b_Infinity$ ?x1540)))
(let (($x6457 (not $x5625)))
(let (($x1544 (not $x1543)))
(let ((@x6514 (unit-resolution (def-axiom (or $x3541 $x1544)) (hypothesis (not $x3541)) $x1544)))
(let ((@x5778 (symm (commutativity (= $x5625 (= ?x1540 b_Infinity$))) (= (= ?x1540 b_Infinity$) $x5625))))
(let (($x5616 (= ?x1540 b_Infinity$)))
(let (($x3493 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(or $x127 (= (v_b_SP_G_0$ ?v0) b_Infinity$))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!42))
))
(let (($x360 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(or $x127 (= (v_b_SP_G_0$ ?v0) b_Infinity$))) :qid k!42))
))
(let (($x127 (= ?0 b_Source$)))
(let (($x357 (or $x127 (= (v_b_SP_G_0$ ?0) b_Infinity$))))
(let (($x138 (forall ((?v0 B_Vertex$) )(! (let (($x136 (v_b_Visited_G_0$ ?v0)))
(not $x136)) :qid k!42))
))
(let (($x354 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(or $x132 (= (v_b_SP_G_0$ ?v0) 0)))) :qid k!42))
))
(let (($x890 (and $x354 $x360 $x138)))
(let (($x1329 (forall ((?v0 B_Vertex$) )(! (let (($x1323 (exists ((?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1306 (= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1262 (>= (+ ?x273 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x1309 (not $x1262)))
(and $x1309 $x291 $x1306))))))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1300 (and $x132 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))))
(or (not $x1300) $x1323))))) :qid k!42))
))
(let (($x1289 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1282 (>= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x923 (not $x922)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1276 (and $x291 $x923)))
(let (($x1279 (not $x1276)))
(or $x1279 $x1282))))))))) :qid k!42))
))
(let (($x1292 (not $x1289)))
(let (($x1332 (or $x1292 $x1329)))
(let (($x1335 (and $x1289 $x1332)))
(let (($x1270 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1262 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(let (($x302 (and $x300 (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x664 (not $x302)))
(or $x664 $x1262)))))) :qid k!42))
))
(let (($x1273 (not $x1270)))
(let (($x1338 (or $x1273 $x1335)))
(let (($x1341 (and $x1270 $x1338)))
(let (($x1256 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(>= ?x273 0)) :qid k!42))
))
(let (($x1259 (not $x1256)))
(let (($x1344 (or $x1259 $x1341)))
(let (($x1347 (and $x1256 $x1344)))
(let (($x1350 (or $x773 $x1347)))
(let (($x1353 (and $x297 $x1350)))
(let (($x652 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x300 (not $x291)))
(or $x300 $x278)))))) :qid k!42))
))
(let (($x785 (not $x652)))
(let (($x1356 (or $x785 $x1353)))
(let (($x1359 (and $x652 $x1356)))
(let (($x1247 (forall ((?v0 B_Vertex$) )(! (>= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0) :qid k!42))
))
(let (($x1250 (not $x1247)))
(let (($x1362 (or $x1250 $x1359)))
(let (($x1365 (and $x1247 $x1362)))
(let (($x1199 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1173 (* (- 1) ?x257)))
(let (($x1175 (<= (+ ?x174 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1179 (and (not $x1169) (not $x1175))))
(or $x1179 $x278))))))))) :qid k!42))
))
(let (($x1193 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(let ((?x1186 (* (- 1) ?x273)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1185 (= (+ ?x257 ?x268 ?x1186) 0)))
(let (($x1175 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x257) (* (- 1) ?x268)) 0)))
(let (($x1179 (and (not (<= (+ b_Infinity$ (* (- 1) ?x268)) 0)) (not $x1175))))
(let (($x1182 (not $x1179)))
(or $x1182 $x1185))))))))) :qid k!42))
))
(let (($x1209 (forall ((?v0 B_Vertex$) )(! (let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1173 (* (- 1) ?x257)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x178 (>= (+ ?x174 ?x1173) 0)))))) :qid k!42))
))
(let (($x1214 (not $x1213)))
(let (($x256 (not $x255)))
(let (($x1080 (exists ((?v0 B_Vertex$) )(! (let (($x1002 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1003 (not $x1002)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x179 (not $x178)))
(and $x179 $x1003))))) :qid k!42))
))
(let (($x1235 (and $x1080 $x256 $x1214 $x1209 $x266 $x1193 $x1199)))
(let (($x1240 (not $x1235)))
(let (($x1368 (or $x1240 $x1365)))
(let (($x1146 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1140 (>= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x923 (not $x922)))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(let (($x1100 (not $x1099)))
(let (($x1134 (and $x1100 $x923)))
(let (($x1137 (not $x1134)))
(or $x1137 $x1140)))))))))) :qid k!42))
))
(let (($x1149 (not $x1146)))
(let (($x1152 (or $x1149 $x246)))
(let (($x1155 (and $x1146 $x1152)))
(let (($x1128 (forall ((?v0 B_Vertex$) )(! (let (($x1122 (exists ((?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(and (not (>= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)) (= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))) :qid k!42))
))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x1100 (not $x1099)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1103 (and $x132 $x1100)))
(let (($x1106 (not $x1103)))
(or $x1106 $x1122)))))))) :qid k!42))
))
(let (($x1131 (not $x1128)))
(let (($x1158 (or $x1131 $x1155)))
(let (($x1161 (and $x1128 $x1158)))
(let (($x1083 (not $x1080)))
(let (($x1089 (and $x1083 $x212 $x215 $x217 $x220)))
(let (($x1094 (not $x1089)))
(let (($x1164 (or $x1094 $x1161)))
(let (($x1371 (and $x1164 $x1368)))
(let (($x1037 (forall ((?v0 B_Vertex$) )(! (let (($x1031 (exists ((?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1012 (= (+ ?x155 ?x174 ?x991) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x1015 (>= (+ ?x174 ?x991) 0)))
(let (($x1017 (not $x1015)))
(and $x1017 $x178 $x1012))))))))) :qid k!42))
))
(let (($x1002 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1003 (not $x1002)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1006 (and $x132 $x1003)))
(let (($x1009 (not $x1006)))
(or $x1009 $x1031)))))))) :qid k!42))
))
(let (($x997 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x990 (>= (+ ?x155 ?x174 ?x991) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x923 (not $x922)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x983 (and $x178 $x923)))
(let (($x986 (not $x983)))
(or $x986 $x990))))))))))) :qid k!42))
))
(let (($x1045 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1015 (>= (+ ?x174 ?x991) 0)))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x179 (not $x178)))
(let (($x181 (and $x179 $x180)))
(let (($x403 (not $x181)))
(or $x403 $x1015)))))))))) :qid k!42))
))
(let (($x1051 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(>= ?x174 0)) :qid k!42))
))
(let (($x980 (forall ((?v0 B_Vertex$) )(! (let (($x974 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x957 (= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x155) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x907 (>= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x960 (not $x907)))
(and $x960 $x136 $x957))))))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x951 (and $x132 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))))
(let (($x954 (not $x951)))
(or $x954 $x974)))))) :qid k!42))
))
(let (($x1069 (and $x980 $x173 $x1051 $x1045 $x997 $x1037)))
(let (($x1074 (not $x1069)))
(let (($x1374 (or $x1074 $x1371)))
(let (($x1377 (and $x980 $x1374)))
(let (($x939 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x933 (>= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x155) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x923 (not $x922)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x926 (and $x136 $x923)))
(let (($x929 (not $x926)))
(or $x929 $x933))))))))) :qid k!42))
))
(let (($x942 (not $x939)))
(let (($x1380 (or $x942 $x1377)))
(let (($x1383 (and $x939 $x1380)))
(let (($x914 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x907 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x148 (v_b_Visited_G_0$ ?v0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(let (($x149 (and $x137 $x148)))
(let (($x382 (not $x149)))
(or $x382 $x907))))))) :qid k!42))
))
(let (($x917 (not $x914)))
(let (($x1386 (or $x917 $x1383)))
(let (($x1389 (and $x914 $x1386)))
(let (($x899 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(>= ?x128 0)) :qid k!42))
))
(let (($x902 (not $x899)))
(let (($x1392 (or $x902 $x1389)))
(let (($x1395 (and $x899 $x1392)))
(let ((?x144 (v_b_SP_G_0$ b_Source$)))
(let (($x145 (= ?x144 0)))
(let (($x869 (not $x145)))
(let (($x1398 (or $x869 $x1395)))
(let (($x1401 (and $x145 $x1398)))
(let (($x1407 (not (or (not $x890) $x1401))))
(let (($x320 (forall ((?v0 B_Vertex$) )(! (let (($x318 (exists ((?v1 B_Vertex$) )(! (let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x316 (and $x291 (= (v_b_SP_G_2$ ?v0) (+ (v_b_SP_G_2$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x314 (< ?x273 ?x303)))
(and $x314 $x316)))))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x313 (and $x132 (< (v_b_SP_G_2$ ?v0) b_Infinity$))))
(=> $x313 $x318))))) :qid k!42))
))
(let (($x321 (and $x320 false)))
(let (($x322 (=> $x321 true)))
(let (($x323 (and $x320 $x322)))
(let (($x311 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x308 (+ ?x273 ?x155)))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x307 (and $x291 $x156)))
(=> $x307 (<= ?x303 ?x308))))))))) :qid k!42))
))
(let (($x324 (=> $x311 $x323)))
(let (($x306 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let (($x304 (<= ?x303 ?x273)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(let (($x302 (and $x300 (fun_app$ v_b_Visited_G_2$ ?v0))))
(=> $x302 $x304))))))) :qid k!42))
))
(let (($x326 (=> $x306 (and $x311 $x324))))
(let (($x299 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(<= 0 ?x273)) :qid k!42))
))
(let (($x328 (=> $x299 (and $x306 $x326))))
(let (($x330 (=> $x297 (and $x299 $x328))))
(let (($x293 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v0)))
(=> $x291 $x278))))) :qid k!42))
))
(let (($x295 (and $x293 (and true true))))
(let (($x332 (=> $x295 (and $x297 $x330))))
(let (($x290 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(<= ?x273 ?x174))) :qid k!42))
))
(let (($x334 (=> $x290 (and $x293 $x332))))
(let (($x280 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x270 (+ ?x257 ?x268)))
(let (($x272 (and (< ?x268 b_Infinity$) (< ?x270 ?x174))))
(let (($x277 (not $x272)))
(=> $x277 $x278))))))))) :qid k!42))
))
(let (($x276 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x270 (+ ?x257 ?x268)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x274 (= ?x273 ?x270)))
(let (($x272 (and (< ?x268 b_Infinity$) (< ?x270 (fun_app$c v_b_SP_G_1$ ?v0)))))
(=> $x272 $x274))))))) :qid k!42))
))
(let (($x261 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x259 (<= ?x257 ?x174)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x179 (not $x178)))
(=> $x179 $x259)))))) :qid k!42))
))
(let (($x258 (< ?x257 b_Infinity$)))
(let (($x209 (exists ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x191 (< ?x174 b_Infinity$)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x179 (not $x178)))
(and $x179 $x191))))) :qid k!42))
))
(let (($x286 (and $x209 (and $x256 (and $x258 (and $x261 (and $x266 (and $x276 $x280))))))))
(let (($x287 (and true $x286)))
(let (($x288 (and true $x287)))
(let (($x336 (=> $x288 (and $x290 $x334))))
(let (($x248 (and $x246 (=> $x246 true))))
(let (($x244 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x235 (+ ?x230 ?x155)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x231 (< ?x230 b_Infinity$)))
(let (($x241 (and $x231 $x156)))
(=> $x241 (<= ?x233 ?x235))))))))) :qid k!42))
))
(let (($x249 (=> $x244 $x248)))
(let (($x240 (forall ((?v0 B_Vertex$) )(! (let (($x238 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x235 (+ ?x230 ?x155)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x234 (< ?x230 ?x233)))
(and $x234 (= ?x233 ?x235))))))) :qid k!42))
))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x231 (< ?x230 b_Infinity$)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x232 (and $x132 $x231)))
(=> $x232 $x238))))))) :qid k!42))
))
(let (($x251 (=> $x240 (and $x244 $x249))))
(let (($x225 (and true (and $x212 (and $x215 (and $x217 (and $x220 true)))))))
(let (($x226 (and true $x225)))
(let (($x210 (not $x209)))
(let (($x228 (and true (and $x210 $x226))))
(let (($x229 (and true $x228)))
(let (($x253 (=> $x229 (and $x240 $x251))))
(let (($x199 (forall ((?v0 B_Vertex$) )(! (let (($x197 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x187 (+ ?x174 ?x155)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x193 (< ?x174 ?x182)))
(and $x193 (and $x178 (= ?x182 ?x187))))))))) :qid k!42))
))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x191 (< ?x174 b_Infinity$)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x192 (and $x132 $x191)))
(=> $x192 $x197))))))) :qid k!42))
))
(let (($x200 (and $x199 true)))
(let (($x190 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x187 (+ ?x174 ?x155)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x186 (and $x178 $x156)))
(=> $x186 (<= ?x182 ?x187))))))))) :qid k!42))
))
(let (($x185 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x183 (<= ?x182 ?x174)))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x179 (not $x178)))
(let (($x181 (and $x179 $x180)))
(=> $x181 $x183)))))))) :qid k!42))
))
(let (($x176 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(<= 0 ?x174)) :qid k!42))
))
(let (($x205 (and true (and $x173 (and $x176 (and $x185 (and $x190 $x200)))))))
(let (($x206 (and true $x205)))
(let (($x170 (forall ((?v0 B_Vertex$) )(! (let (($x168 (exists ((?v1 B_Vertex$) )(! (let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x166 (and $x136 (= (v_b_SP_G_0$ ?v0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?v0)) $x166))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x163 (and $x132 (< (v_b_SP_G_0$ ?v0) b_Infinity$))))
(=> $x163 $x168))))) :qid k!42))
))
(let (($x338 (=> (and $x170 $x206) (and $x253 $x336))))
(let (($x161 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x150 (v_b_SP_G_0$ ?v0)))
(let (($x159 (<= ?x150 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x157 (and $x136 $x156)))
(=> $x157 $x159))))))) :qid k!42))
))
(let (($x340 (=> $x161 (and $x170 $x338))))
(let (($x153 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v1)))
(let ((?x150 (v_b_SP_G_0$ ?v0)))
(let (($x151 (<= ?x150 ?x128)))
(let (($x148 (v_b_Visited_G_0$ ?v0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(let (($x149 (and $x137 $x148)))
(=> $x149 $x151)))))))) :qid k!42))
))
(let (($x342 (=> $x153 (and $x161 $x340))))
(let (($x147 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(<= 0 ?x128)) :qid k!42))
))
(let (($x344 (=> $x147 (and $x153 $x342))))
(let (($x346 (=> $x145 (and $x147 $x344))))
(let (($x135 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(=> $x132 (= (v_b_SP_G_0$ ?v0) b_Infinity$)))) :qid k!42))
))
(let (($x131 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(=> $x127 (= (v_b_SP_G_0$ ?v0) 0))) :qid k!42))
))
(let (($x142 (and true (and $x131 (and $x135 (and $x138 true))))))
(let (($x143 (and true $x142)))
(let (($x348 (=> $x143 (and $x145 $x346))))
(let (($x349 (not $x348)))
(let (($x710 (forall ((?v0 B_Vertex$) )(! (let (($x698 (exists ((?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x671 (+ ?x155 ?x273)))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let (($x689 (= ?x303 ?x671)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x692 (and $x291 $x689)))
(let (($x314 (< ?x273 ?x303)))
(and $x314 $x692))))))))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x313 (and $x132 (< (v_b_SP_G_2$ ?v0) b_Infinity$))))
(or (not $x313) $x698))))) :qid k!42))
))
(let (($x686 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x671 (+ ?x155 ?x273)))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let (($x674 (<= ?x303 ?x671)))
(or (not (and (fun_app$ v_b_Visited_G_2$ ?v1) (< ?x155 b_Infinity$))) $x674)))))) :qid k!42))
))
(let (($x738 (or (not $x686) $x710)))
(let (($x743 (and $x686 $x738)))
(let (($x668 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x303 (v_b_SP_G_2$ ?v0)))
(let (($x304 (<= ?x303 ?x273)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(let (($x302 (and $x300 (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x664 (not $x302)))
(or $x664 $x304)))))))) :qid k!42))
))
(let (($x750 (or (not $x668) $x743)))
(let (($x755 (and $x668 $x750)))
(let (($x762 (or (not $x299) $x755)))
(let (($x767 (and $x299 $x762)))
(let (($x774 (or $x773 $x767)))
(let (($x779 (and $x297 $x774)))
(let (($x786 (or $x785 $x779)))
(let (($x791 (and $x652 $x786)))
(let (($x798 (or (not $x290) $x791)))
(let (($x803 (and $x290 $x798)))
(let (($x617 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x270 (+ ?x257 ?x268)))
(let (($x272 (and (< ?x268 b_Infinity$) (< ?x270 ?x174))))
(or $x272 $x278)))))))) :qid k!42))
))
(let (($x611 (forall ((?v0 B_Vertex$) )(! (let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x270 (+ ?x257 ?x268)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x274 (= ?x273 ?x270)))
(let (($x272 (and (< ?x268 b_Infinity$) (< ?x270 (fun_app$c v_b_SP_G_1$ ?v0)))))
(let (($x277 (not $x272)))
(or $x277 $x274)))))))) :qid k!42))
))
(let (($x620 (and $x611 $x617)))
(let (($x623 (and $x266 $x620)))
(let (($x605 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x259 (<= ?x257 ?x174)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x178 $x259))))) :qid k!42))
))
(let (($x626 (and $x605 $x623)))
(let (($x629 (and $x258 $x626)))
(let (($x632 (and $x256 $x629)))
(let (($x635 (and $x209 $x632)))
(let (($x810 (or (not $x635) $x803)))
(let (($x557 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x521 (+ ?x155 ?x230)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x545 (<= ?x233 ?x521)))
(or (not (and (< ?x230 b_Infinity$) (< ?x155 b_Infinity$))) $x545)))))) :qid k!42))
))
(let (($x573 (or (not $x557) $x246)))
(let (($x578 (and $x557 $x573)))
(let (($x542 (forall ((?v0 B_Vertex$) )(! (let (($x530 (exists ((?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x521 (+ ?x155 ?x230)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x524 (= ?x233 ?x521)))
(let (($x234 (< ?x230 ?x233)))
(and $x234 $x524))))))) :qid k!42))
))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x231 (< ?x230 b_Infinity$)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x232 (and $x132 $x231)))
(or (not $x232) $x530))))))) :qid k!42))
))
(let (($x585 (or (not $x542) $x578)))
(let (($x590 (and $x542 $x585)))
(let (($x597 (or (not (and $x210 (and $x212 (and $x215 (and $x217 $x220))))) $x590)))
(let (($x815 (and $x597 $x810)))
(let (($x449 (forall ((?v0 B_Vertex$) )(! (let (($x437 (exists ((?v1 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x410 (+ ?x155 ?x174)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x428 (= ?x182 ?x410)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x431 (and $x178 $x428)))
(let (($x193 (< ?x174 ?x182)))
(and $x193 $x431))))))))) :qid k!42))
))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x191 (< ?x174 b_Infinity$)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x192 (and $x132 $x191)))
(or (not $x192) $x437))))))) :qid k!42))
))
(let (($x425 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x410 (+ ?x155 ?x174)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x413 (<= ?x182 ?x410)))
(or (not (and (fun_app$ v_b_Visited_G_1$ ?v1) (< ?x155 b_Infinity$))) $x413)))))) :qid k!42))
))
(let (($x459 (and $x425 $x449)))
(let (($x407 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x183 (<= ?x182 ?x174)))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x179 (not $x178)))
(let (($x181 (and $x179 $x180)))
(let (($x403 (not $x181)))
(or $x403 $x183))))))))) :qid k!42))
))
(let (($x462 (and $x407 $x459)))
(let (($x465 (and $x176 $x462)))
(let (($x468 (and $x173 $x465)))
(let (($x400 (forall ((?v0 B_Vertex$) )(! (let (($x168 (exists ((?v1 B_Vertex$) )(! (let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x166 (and $x136 (= (v_b_SP_G_0$ ?v0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?v0)) $x166))) :qid k!42))
))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x163 (and $x132 (< (v_b_SP_G_0$ ?v0) b_Infinity$))))
(or (not $x163) $x168))))) :qid k!42))
))
(let (($x482 (and $x400 $x468)))
(let (($x822 (or (not $x482) $x815)))
(let (($x827 (and $x400 $x822)))
(let (($x393 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x150 (v_b_SP_G_0$ ?v0)))
(let (($x159 (<= ?x150 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x157 (and $x136 $x156)))
(or (not $x157) $x159))))))) :qid k!42))
))
(let (($x834 (or (not $x393) $x827)))
(let (($x839 (and $x393 $x834)))
(let (($x386 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v1)))
(let ((?x150 (v_b_SP_G_0$ ?v0)))
(let (($x151 (<= ?x150 ?x128)))
(let (($x148 (v_b_Visited_G_0$ ?v0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(let (($x149 (and $x137 $x148)))
(let (($x382 (not $x149)))
(or $x382 $x151))))))))) :qid k!42))
))
(let (($x846 (or (not $x386) $x839)))
(let (($x851 (and $x386 $x846)))
(let (($x858 (or (not $x147) $x851)))
(let (($x863 (and $x147 $x858)))
(let (($x870 (or $x869 $x863)))
(let (($x875 (and $x145 $x870)))
(let (($x882 (or (not (and $x354 (and $x360 $x138))) $x875)))
(let (($x1323 (exists ((?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let (($x1306 (= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?0))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1262 (>= (+ ?x273 (* (- 1) (v_b_SP_G_2$ ?0))) 0)))
(let (($x1309 (not $x1262)))
(and $x1309 $x291 $x1306))))))) :qid k!42))
))
(let (($x132 (not $x127)))
(let (($x1300 (and $x132 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?0))) 0)))))
(let (($x698 (exists ((?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x671 (+ ?x155 ?x273)))
(let ((?x303 (v_b_SP_G_2$ ?0)))
(let (($x689 (= ?x303 ?x671)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x692 (and $x291 $x689)))
(let (($x314 (< ?x273 ?x303)))
(and $x314 $x692))))))))) :qid k!42))
))
(let (($x705 (or (not (and $x132 (< (v_b_SP_G_2$ ?0) b_Infinity$))) $x698)))
(let ((?x273 (v_b_SP_G_2$ ?0)))
(let ((?x155 (b_G$ (pair$ ?0 ?1))))
(let (($x1306 (= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?1))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?0)))
(let (($x1262 (>= (+ ?x273 (* (- 1) (v_b_SP_G_2$ ?1))) 0)))
(let (($x1309 (not $x1262)))
(let (($x1318 (and $x1309 $x291 $x1306)))
(let ((?x671 (+ ?x155 ?x273)))
(let ((?x303 (v_b_SP_G_2$ ?1)))
(let (($x689 (= ?x303 ?x671)))
(let (($x692 (and $x291 $x689)))
(let (($x314 (< ?x273 ?x303)))
(let (($x695 (and $x314 $x692)))
(let ((@x1317 (monotonicity (rewrite (= $x314 $x1309)) (monotonicity (rewrite (= $x689 $x1306)) (= $x692 (and $x291 $x1306))) (= $x695 (and $x1309 (and $x291 $x1306))))))
(let ((@x1322 (trans @x1317 (rewrite (= (and $x1309 (and $x291 $x1306)) $x1318)) (= $x695 $x1318))))
(let (($x1298 (= (< ?x273 b_Infinity$) (not (<= (+ b_Infinity$ (* (- 1) ?x273)) 0)))))
(let ((@x1302 (monotonicity (rewrite $x1298) (= (and $x132 (< ?x273 b_Infinity$)) $x1300))))
(let ((@x1305 (monotonicity @x1302 (= (not (and $x132 (< ?x273 b_Infinity$))) (not $x1300)))))
(let ((@x1328 (monotonicity @x1305 (quant-intro @x1322 (= $x698 $x1323)) (= $x705 (or (not $x1300) $x1323)))))
(let (($x1282 (>= (+ ?x155 ?x273 (* (- 1) ?x303)) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x923 (not $x922)))
(let (($x1276 (and $x291 $x923)))
(let (($x1279 (not $x1276)))
(let (($x1286 (or $x1279 $x1282)))
(let (($x674 (<= ?x303 ?x671)))
(let (($x681 (or (not (and $x291 (< ?x155 b_Infinity$))) $x674)))
(let ((@x925 (rewrite (= (< ?x155 b_Infinity$) $x923))))
(let ((@x1281 (monotonicity (monotonicity @x925 (= (and $x291 (< ?x155 b_Infinity$)) $x1276)) (= (not (and $x291 (< ?x155 b_Infinity$))) $x1279))))
(let ((@x1291 (quant-intro (monotonicity @x1281 (rewrite (= $x674 $x1282)) (= $x681 $x1286)) (= $x686 $x1289))))
(let ((@x1334 (monotonicity (monotonicity @x1291 (= (not $x686) $x1292)) (quant-intro @x1328 (= $x710 $x1329)) (= $x738 $x1332))))
(let (($x300 (not $x291)))
(let (($x302 (and $x300 (fun_app$ v_b_Visited_G_2$ ?1))))
(let (($x664 (not $x302)))
(let (($x1267 (or $x664 $x1262)))
(let (($x304 (<= ?x303 ?x273)))
(let (($x665 (or $x664 $x304)))
(let ((@x1272 (quant-intro (monotonicity (rewrite (= $x304 $x1262)) (= $x665 $x1267)) (= $x668 $x1270))))
(let ((@x1340 (monotonicity (monotonicity @x1272 (= (not $x668) $x1273)) (monotonicity @x1291 @x1334 (= $x743 $x1335)) (= $x750 $x1338))))
(let ((@x1258 (quant-intro (rewrite (= (<= 0 ?x273) (>= ?x273 0))) (= $x299 $x1256))))
(let ((@x1346 (monotonicity (monotonicity @x1258 (= (not $x299) $x1259)) (monotonicity @x1272 @x1340 (= $x755 $x1341)) (= $x762 $x1344))))
(let ((@x1352 (monotonicity (monotonicity @x1258 @x1346 (= $x767 $x1347)) (= $x774 $x1350))))
(let ((@x1361 (monotonicity (monotonicity (monotonicity @x1352 (= $x779 $x1353)) (= $x786 $x1356)) (= $x791 $x1359))))
(let (($x1243 (>= (+ (fun_app$c v_b_SP_G_1$ ?0) (* (- 1) ?x273)) 0)))
(let ((@x1249 (quant-intro (rewrite (= (<= ?x273 (fun_app$c v_b_SP_G_1$ ?0)) $x1243)) (= $x290 $x1247))))
(let ((@x1364 (monotonicity (monotonicity @x1249 (= (not $x290) $x1250)) @x1361 (= $x798 $x1362))))
(let (($x1232 (and $x1080 (and $x256 (and $x1214 (and $x1209 (and $x266 (and $x1193 $x1199))))))))
(let (($x1230 (= $x632 (and $x256 (and $x1214 (and $x1209 (and $x266 (and $x1193 $x1199))))))))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x278 (= ?x273 ?x174)))
(let (($x1175 (<= (+ ?x174 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?0)))) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?0)))) 0)))
(let (($x1179 (and (not $x1169) (not $x1175))))
(let (($x1196 (or $x1179 $x278)))
(let (($x272 (and (< (b_G$ (pair$ v_b_v_G_1$ ?0)) b_Infinity$) (< (+ ?x257 (b_G$ (pair$ v_b_v_G_1$ ?0))) ?x174))))
(let (($x614 (or $x272 $x278)))
(let ((@x1178 (rewrite (= (< (+ ?x257 (b_G$ (pair$ v_b_v_G_1$ ?0))) ?x174) (not $x1175)))))
(let ((@x1172 (rewrite (= (< (b_G$ (pair$ v_b_v_G_1$ ?0)) b_Infinity$) (not $x1169)))))
(let ((@x1198 (monotonicity (monotonicity @x1172 @x1178 (= $x272 $x1179)) (= $x614 $x1196))))
(let (($x1185 (= (+ ?x257 (b_G$ (pair$ v_b_v_G_1$ ?0)) (* (- 1) ?x273)) 0)))
(let (($x1182 (not $x1179)))
(let (($x1190 (or $x1182 $x1185)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?0))))
(let ((?x270 (+ ?x257 ?x268)))
(let (($x274 (= ?x273 ?x270)))
(let (($x277 (not $x272)))
(let (($x608 (or $x277 $x274)))
(let ((@x1184 (monotonicity (monotonicity @x1172 @x1178 (= $x272 $x1179)) (= $x277 $x1182))))
(let ((@x1195 (quant-intro (monotonicity @x1184 (rewrite (= $x274 $x1185)) (= $x608 $x1190)) (= $x611 $x1193))))
(let ((@x1219 (monotonicity @x1195 (quant-intro @x1198 (= $x617 $x1199)) (= $x620 (and $x1193 $x1199)))))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?0)))
(let (($x1206 (or $x178 (>= (+ ?x174 ?x1173) 0))))
(let (($x259 (<= ?x257 ?x174)))
(let (($x602 (or $x178 $x259)))
(let ((@x1208 (monotonicity (rewrite (= $x259 (>= (+ ?x174 ?x1173) 0))) (= $x602 $x1206))))
(let ((@x1225 (monotonicity (quant-intro @x1208 (= $x605 $x1209)) (monotonicity @x1219 (= $x623 (and $x266 (and $x1193 $x1199)))) (= $x626 (and $x1209 (and $x266 (and $x1193 $x1199)))))))
(let ((@x1228 (monotonicity (rewrite (= $x258 $x1214)) @x1225 (= $x629 (and $x1214 (and $x1209 (and $x266 (and $x1193 $x1199))))))))
(let (($x1002 (<= (+ b_Infinity$ (* (- 1) ?x174)) 0)))
(let (($x1003 (not $x1002)))
(let (($x179 (not $x178)))
(let (($x1077 (and $x179 $x1003)))
(let ((@x1079 (monotonicity (rewrite (= (< ?x174 b_Infinity$) $x1003)) (= (and $x179 (< ?x174 b_Infinity$)) $x1077))))
(let ((@x1234 (monotonicity (quant-intro @x1079 (= $x209 $x1080)) (monotonicity @x1228 $x1230) (= $x635 $x1232))))
(let ((@x1242 (monotonicity (trans @x1234 (rewrite (= $x1232 $x1235)) (= $x635 $x1235)) (= (not $x635) $x1240))))
(let ((@x1370 (monotonicity @x1242 (monotonicity @x1249 @x1364 (= $x803 $x1365)) (= $x810 $x1368))))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x1140 (>= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?1))) 0)))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(let (($x1100 (not $x1099)))
(let (($x1134 (and $x1100 $x923)))
(let (($x1137 (not $x1134)))
(let (($x1143 (or $x1137 $x1140)))
(let ((?x521 (+ ?x155 ?x230)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?1)))
(let (($x545 (<= ?x233 ?x521)))
(let (($x552 (or (not (and (< ?x230 b_Infinity$) (< ?x155 b_Infinity$))) $x545)))
(let ((@x1136 (monotonicity (rewrite (= (< ?x230 b_Infinity$) $x1100)) @x925 (= (and (< ?x230 b_Infinity$) (< ?x155 b_Infinity$)) $x1134))))
(let ((@x1139 (monotonicity @x1136 (= (not (and (< ?x230 b_Infinity$) (< ?x155 b_Infinity$))) $x1137))))
(let ((@x1148 (quant-intro (monotonicity @x1139 (rewrite (= $x545 $x1140)) (= $x552 $x1143)) (= $x557 $x1146))))
(let ((@x1154 (monotonicity (monotonicity @x1148 (= (not $x557) $x1149)) (= $x573 $x1152))))
(let (($x1122 (exists ((?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(and (not (>= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?0))) 0)) (= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?0))) 0)))) :qid k!42))
))
(let (($x1103 (and $x132 $x1100)))
(let (($x1106 (not $x1103)))
(let (($x1125 (or $x1106 $x1122)))
(let (($x530 (exists ((?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x521 (+ ?x155 ?x230)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x524 (= ?x233 ?x521)))
(let (($x234 (< ?x230 ?x233)))
(and $x234 $x524))))))) :qid k!42))
))
(let (($x537 (or (not (and $x132 (< ?x230 b_Infinity$))) $x530)))
(let (($x1119 (and (not (>= (+ ?x230 (* (- 1) ?x233)) 0)) (= (+ ?x155 ?x230 (* (- 1) ?x233)) 0))))
(let (($x524 (= ?x233 ?x521)))
(let (($x234 (< ?x230 ?x233)))
(let (($x527 (and $x234 $x524)))
(let ((@x1121 (monotonicity (rewrite (= $x234 (not (>= (+ ?x230 (* (- 1) ?x233)) 0)))) (rewrite (= $x524 (= (+ ?x155 ?x230 (* (- 1) ?x233)) 0))) (= $x527 $x1119))))
(let ((@x1105 (monotonicity (rewrite (= (< ?x230 b_Infinity$) $x1100)) (= (and $x132 (< ?x230 b_Infinity$)) $x1103))))
(let ((@x1127 (monotonicity (monotonicity @x1105 (= (not (and $x132 (< ?x230 b_Infinity$))) $x1106)) (quant-intro @x1121 (= $x530 $x1122)) (= $x537 $x1125))))
(let ((@x1133 (monotonicity (quant-intro @x1127 (= $x542 $x1128)) (= (not $x542) $x1131))))
(let ((@x1160 (monotonicity @x1133 (monotonicity @x1148 @x1154 (= $x578 $x1155)) (= $x585 $x1158))))
(let ((@x1091 (rewrite (= (and $x1083 (and $x212 (and $x215 (and $x217 $x220)))) $x1089))))
(let (($x493 (and $x212 (and $x215 (and $x217 $x220)))))
(let (($x507 (and $x210 $x493)))
(let ((@x1088 (monotonicity (monotonicity (quant-intro @x1079 (= $x209 $x1080)) (= $x210 $x1083)) (= $x507 (and $x1083 $x493)))))
(let ((@x1096 (monotonicity (trans @x1088 @x1091 (= $x507 $x1089)) (= (not $x507) $x1094))))
(let ((@x1166 (monotonicity @x1096 (monotonicity (quant-intro @x1127 (= $x542 $x1128)) @x1160 (= $x590 $x1161)) (= $x597 $x1164))))
(let (($x1070 (= (and $x980 (and $x173 (and $x1051 (and $x1045 (and $x997 $x1037))))) $x1069)))
(let (($x1067 (= $x482 (and $x980 (and $x173 (and $x1051 (and $x1045 (and $x997 $x1037))))))))
(let (($x1031 (exists ((?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let (($x1012 (= (+ ?x155 ?x174 ?x991) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x1015 (>= (+ ?x174 ?x991) 0)))
(let (($x1017 (not $x1015)))
(and $x1017 $x178 $x1012))))))))) :qid k!42))
))
(let (($x1006 (and $x132 $x1003)))
(let (($x1009 (not $x1006)))
(let (($x1034 (or $x1009 $x1031)))
(let (($x437 (exists ((?v1 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x410 (+ ?x155 ?x174)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x428 (= ?x182 ?x410)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x431 (and $x178 $x428)))
(let (($x193 (< ?x174 ?x182)))
(and $x193 $x431))))))))) :qid k!42))
))
(let (($x444 (or (not (and $x132 (< ?x174 b_Infinity$))) $x437)))
(let (($x1012 (= (+ ?x155 ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ ?1))) 0)))
(let (($x1015 (>= (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ ?1))) 0)))
(let (($x1017 (not $x1015)))
(let (($x1026 (and $x1017 $x178 $x1012)))
(let ((?x410 (+ ?x155 ?x174)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?1)))
(let (($x428 (= ?x182 ?x410)))
(let (($x431 (and $x178 $x428)))
(let (($x193 (< ?x174 ?x182)))
(let (($x434 (and $x193 $x431)))
(let ((@x1025 (monotonicity (rewrite (= $x193 $x1017)) (monotonicity (rewrite (= $x428 $x1012)) (= $x431 (and $x178 $x1012))) (= $x434 (and $x1017 (and $x178 $x1012))))))
(let ((@x1030 (trans @x1025 (rewrite (= (and $x1017 (and $x178 $x1012)) $x1026)) (= $x434 $x1026))))
(let ((@x1008 (monotonicity (rewrite (= (< ?x174 b_Infinity$) $x1003)) (= (and $x132 (< ?x174 b_Infinity$)) $x1006))))
(let ((@x1036 (monotonicity (monotonicity @x1008 (= (not (and $x132 (< ?x174 b_Infinity$))) $x1009)) (quant-intro @x1030 (= $x437 $x1031)) (= $x444 $x1034))))
(let (($x990 (>= (+ ?x155 ?x174 (* (- 1) ?x182)) 0)))
(let (($x983 (and $x178 $x923)))
(let (($x986 (not $x983)))
(let (($x994 (or $x986 $x990)))
(let (($x413 (<= ?x182 ?x410)))
(let (($x420 (or (not (and $x178 (< ?x155 b_Infinity$))) $x413)))
(let ((@x988 (monotonicity (monotonicity @x925 (= (and $x178 (< ?x155 b_Infinity$)) $x983)) (= (not (and $x178 (< ?x155 b_Infinity$))) $x986))))
(let ((@x999 (quant-intro (monotonicity @x988 (rewrite (= $x413 $x990)) (= $x420 $x994)) (= $x425 $x997))))
(let ((@x1056 (monotonicity @x999 (quant-intro @x1036 (= $x449 $x1037)) (= $x459 (and $x997 $x1037)))))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?1)))
(let (($x181 (and $x179 $x180)))
(let (($x403 (not $x181)))
(let (($x1042 (or $x403 $x1015)))
(let (($x183 (<= ?x182 ?x174)))
(let (($x404 (or $x403 $x183)))
(let ((@x1047 (quant-intro (monotonicity (rewrite (= $x183 $x1015)) (= $x404 $x1042)) (= $x407 $x1045))))
(let ((@x1053 (quant-intro (rewrite (= (<= 0 ?x174) (>= ?x174 0))) (= $x176 $x1051))))
(let ((@x1062 (monotonicity @x1053 (monotonicity @x1047 @x1056 (= $x462 (and $x1045 (and $x997 $x1037)))) (= $x465 (and $x1051 (and $x1045 (and $x997 $x1037)))))))
(let ((@x1065 (monotonicity @x1062 (= $x468 (and $x173 (and $x1051 (and $x1045 (and $x997 $x1037))))))))
(let (($x974 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x957 (= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?0)) ?x155) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x907 (>= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?0))) 0)))
(let (($x960 (not $x907)))
(and $x960 $x136 $x957))))))) :qid k!42))
))
(let (($x951 (and $x132 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?0))) 0)))))
(let (($x954 (not $x951)))
(let (($x977 (or $x954 $x974)))
(let (($x168 (exists ((?v1 B_Vertex$) )(! (let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x166 (and $x136 (= (v_b_SP_G_0$ ?0) (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?0)))))))
(and (< (v_b_SP_G_0$ ?v1) (v_b_SP_G_0$ ?0)) $x166))) :qid k!42))
))
(let (($x397 (or (not (and $x132 (< (v_b_SP_G_0$ ?0) b_Infinity$))) $x168)))
(let (($x957 (= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1)) ?x155) 0)))
(let (($x136 (v_b_Visited_G_0$ ?0)))
(let (($x907 (>= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1))) 0)))
(let (($x960 (not $x907)))
(let (($x969 (and $x960 $x136 $x957)))
(let (($x167 (and (< (v_b_SP_G_0$ ?0) (v_b_SP_G_0$ ?1)) (and $x136 (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x155))))))
(let (($x964 (= (and $x136 (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x155))) (and $x136 $x957))))
(let ((@x959 (rewrite (= (= (v_b_SP_G_0$ ?1) (+ (v_b_SP_G_0$ ?0) ?x155)) $x957))))
(let ((@x968 (monotonicity (rewrite (= (< (v_b_SP_G_0$ ?0) (v_b_SP_G_0$ ?1)) $x960)) (monotonicity @x959 $x964) (= $x167 (and $x960 (and $x136 $x957))))))
(let ((@x973 (trans @x968 (rewrite (= (and $x960 (and $x136 $x957)) $x969)) (= $x167 $x969))))
(let (($x949 (= (< (v_b_SP_G_0$ ?0) b_Infinity$) (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?0))) 0)))))
(let ((@x953 (monotonicity (rewrite $x949) (= (and $x132 (< (v_b_SP_G_0$ ?0) b_Infinity$)) $x951))))
(let ((@x956 (monotonicity @x953 (= (not (and $x132 (< (v_b_SP_G_0$ ?0) b_Infinity$))) $x954))))
(let ((@x982 (quant-intro (monotonicity @x956 (quant-intro @x973 (= $x168 $x974)) (= $x397 $x977)) (= $x400 $x980))))
(let ((@x1076 (monotonicity (trans (monotonicity @x982 @x1065 $x1067) (rewrite $x1070) (= $x482 $x1069)) (= (not $x482) $x1074))))
(let ((@x1376 (monotonicity @x1076 (monotonicity @x1166 @x1370 (= $x815 $x1371)) (= $x822 $x1374))))
(let (($x933 (>= (+ (v_b_SP_G_0$ ?0) (* (- 1) (v_b_SP_G_0$ ?1)) ?x155) 0)))
(let (($x926 (and $x136 $x923)))
(let (($x929 (not $x926)))
(let (($x936 (or $x929 $x933)))
(let ((?x150 (v_b_SP_G_0$ ?1)))
(let (($x159 (<= ?x150 (+ (v_b_SP_G_0$ ?0) ?x155))))
(let (($x390 (or (not (and $x136 (< ?x155 b_Infinity$))) $x159)))
(let ((@x931 (monotonicity (monotonicity @x925 (= (and $x136 (< ?x155 b_Infinity$)) $x926)) (= (not (and $x136 (< ?x155 b_Infinity$))) $x929))))
(let ((@x941 (quant-intro (monotonicity @x931 (rewrite (= $x159 $x933)) (= $x390 $x936)) (= $x393 $x939))))
(let ((@x1382 (monotonicity (monotonicity @x941 (= (not $x393) $x942)) (monotonicity @x982 @x1376 (= $x827 $x1377)) (= $x834 $x1380))))
(let (($x148 (v_b_Visited_G_0$ ?1)))
(let (($x137 (not $x136)))
(let (($x149 (and $x137 $x148)))
(let (($x382 (not $x149)))
(let (($x911 (or $x382 $x907)))
(let ((?x128 (v_b_SP_G_0$ ?0)))
(let (($x151 (<= ?x150 ?x128)))
(let (($x383 (or $x382 $x151)))
(let ((@x916 (quant-intro (monotonicity (rewrite (= $x151 $x907)) (= $x383 $x911)) (= $x386 $x914))))
(let ((@x1388 (monotonicity (monotonicity @x916 (= (not $x386) $x917)) (monotonicity @x941 @x1382 (= $x839 $x1383)) (= $x846 $x1386))))
(let ((@x901 (quant-intro (rewrite (= (<= 0 ?x128) (>= ?x128 0))) (= $x147 $x899))))
(let ((@x1394 (monotonicity (monotonicity @x901 (= (not $x147) $x902)) (monotonicity @x916 @x1388 (= $x851 $x1389)) (= $x858 $x1392))))
(let ((@x1400 (monotonicity (monotonicity @x901 @x1394 (= $x863 $x1395)) (= $x870 $x1398))))
(let ((@x895 (monotonicity (rewrite (= (and $x354 (and $x360 $x138)) $x890)) (= (not (and $x354 (and $x360 $x138))) (not $x890)))))
(let ((@x1406 (monotonicity @x895 (monotonicity @x1400 (= $x875 $x1401)) (= $x882 (or (not $x890) $x1401)))))
(let (($x318 (exists ((?v1 B_Vertex$) )(! (let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x316 (and $x291 (= (v_b_SP_G_2$ ?0) (+ (v_b_SP_G_2$ ?v1) (b_G$ (pair$ ?v1 ?0)))))))
(let ((?x303 (v_b_SP_G_2$ ?0)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x314 (< ?x273 ?x303)))
(and $x314 $x316)))))) :qid k!42))
))
(let (($x313 (and $x132 (< ?x273 b_Infinity$))))
(let (($x319 (=> $x313 $x318)))
(let ((@x691 (monotonicity (rewrite (= (+ ?x273 ?x155) ?x671)) (= (= ?x303 (+ ?x273 ?x155)) $x689))))
(let ((@x697 (monotonicity (monotonicity @x691 (= (and $x291 (= ?x303 (+ ?x273 ?x155))) $x692)) (= (and $x314 (and $x291 (= ?x303 (+ ?x273 ?x155)))) $x695))))
(let ((@x703 (monotonicity (quant-intro @x697 (= $x318 $x698)) (= $x319 (=> $x313 $x698)))))
(let ((@x712 (quant-intro (trans @x703 (rewrite (= (=> $x313 $x698) $x705)) (= $x319 $x705)) (= $x320 $x710))))
(let ((@x719 (trans (monotonicity @x712 (= $x321 (and $x710 false))) (rewrite (= (and $x710 false) false)) (= $x321 false))))
(let ((@x726 (trans (monotonicity @x719 (= $x322 (=> false true))) (rewrite (= (=> false true) true)) (= $x322 true))))
(let ((@x733 (trans (monotonicity @x712 @x726 (= $x323 (and $x710 true))) (rewrite (= (and $x710 true) $x710)) (= $x323 $x710))))
(let (($x156 (< ?x155 b_Infinity$)))
(let (($x307 (and $x291 $x156)))
(let (($x310 (=> $x307 (<= ?x303 (+ ?x273 ?x155)))))
(let ((@x676 (monotonicity (rewrite (= (+ ?x273 ?x155) ?x671)) (= (<= ?x303 (+ ?x273 ?x155)) $x674))))
(let ((@x685 (trans (monotonicity @x676 (= $x310 (=> $x307 $x674))) (rewrite (= (=> $x307 $x674) $x681)) (= $x310 $x681))))
(let ((@x736 (monotonicity (quant-intro @x685 (= $x311 $x686)) @x733 (= $x324 (=> $x686 $x710)))))
(let ((@x745 (monotonicity (quant-intro @x685 (= $x311 $x686)) (trans @x736 (rewrite (= (=> $x686 $x710) $x738)) (= $x324 $x738)) (= (and $x311 $x324) $x743))))
(let ((@x748 (monotonicity (quant-intro (rewrite (= (=> $x302 $x304) $x665)) (= $x306 $x668)) @x745 (= $x326 (=> $x668 $x743)))))
(let ((@x757 (monotonicity (quant-intro (rewrite (= (=> $x302 $x304) $x665)) (= $x306 $x668)) (trans @x748 (rewrite (= (=> $x668 $x743) $x750)) (= $x326 $x750)) (= (and $x306 $x326) $x755))))
(let ((@x766 (trans (monotonicity @x757 (= $x328 (=> $x299 $x755))) (rewrite (= (=> $x299 $x755) $x762)) (= $x328 $x762))))
(let ((@x772 (monotonicity (monotonicity @x766 (= (and $x299 $x328) $x767)) (= $x330 (=> $x297 $x767)))))
(let ((@x781 (monotonicity (trans @x772 (rewrite (= (=> $x297 $x767) $x774)) (= $x330 $x774)) (= (and $x297 $x330) $x779))))
(let ((@x654 (quant-intro (rewrite (= (=> $x291 $x278) (or $x300 $x278))) (= $x293 $x652))))
(let ((@x659 (monotonicity @x654 (rewrite (= (and true true) true)) (= $x295 (and $x652 true)))))
(let ((@x784 (monotonicity (trans @x659 (rewrite (= (and $x652 true) $x652)) (= $x295 $x652)) @x781 (= $x332 (=> $x652 $x779)))))
(let ((@x793 (monotonicity @x654 (trans @x784 (rewrite (= (=> $x652 $x779) $x786)) (= $x332 $x786)) (= (and $x293 $x332) $x791))))
(let ((@x802 (trans (monotonicity @x793 (= $x334 (=> $x290 $x791))) (rewrite (= (=> $x290 $x791) $x798)) (= $x334 $x798))))
(let (($x633 (= (and $x256 (and $x258 (and $x261 (and $x266 (and $x276 $x280))))) $x632)))
(let ((@x622 (monotonicity (quant-intro (rewrite (= (=> $x272 $x274) $x608)) (= $x276 $x611)) (quant-intro (rewrite (= (=> $x277 $x278) $x614)) (= $x280 $x617)) (= (and $x276 $x280) $x620))))
(let ((@x628 (monotonicity (quant-intro (rewrite (= (=> $x179 $x259) $x602)) (= $x261 $x605)) (monotonicity @x622 (= (and $x266 (and $x276 $x280)) $x623)) (= (and $x261 (and $x266 (and $x276 $x280))) $x626))))
(let ((@x631 (monotonicity @x628 (= (and $x258 (and $x261 (and $x266 (and $x276 $x280)))) $x629))))
(let ((@x640 (monotonicity (monotonicity (monotonicity @x631 $x633) (= $x286 $x635)) (= $x287 (and true $x635)))))
(let ((@x646 (monotonicity (trans @x640 (rewrite (= (and true $x635) $x635)) (= $x287 $x635)) (= $x288 (and true $x635)))))
(let ((@x808 (monotonicity (trans @x646 (rewrite (= (and true $x635) $x635)) (= $x288 $x635)) (monotonicity @x802 (= (and $x290 $x334) $x803)) (= $x336 (=> $x635 $x803)))))
(let ((@x564 (monotonicity (rewrite (= (=> $x246 true) true)) (= $x248 (and $x246 true)))))
(let (($x231 (< ?x230 b_Infinity$)))
(let (($x241 (and $x231 $x156)))
(let (($x243 (=> $x241 (<= ?x233 (+ ?x230 ?x155)))))
(let ((@x547 (monotonicity (rewrite (= (+ ?x230 ?x155) ?x521)) (= (<= ?x233 (+ ?x230 ?x155)) $x545))))
(let ((@x556 (trans (monotonicity @x547 (= $x243 (=> $x241 $x545))) (rewrite (= (=> $x241 $x545) $x552)) (= $x243 $x552))))
(let ((@x571 (monotonicity (quant-intro @x556 (= $x244 $x557)) (trans @x564 (rewrite (= (and $x246 true) $x246)) (= $x248 $x246)) (= $x249 (=> $x557 $x246)))))
(let ((@x580 (monotonicity (quant-intro @x556 (= $x244 $x557)) (trans @x571 (rewrite (= (=> $x557 $x246) $x573)) (= $x249 $x573)) (= (and $x244 $x249) $x578))))
(let (($x238 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x235 (+ ?x230 ?x155)))
(let ((?x233 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x234 (< ?x230 ?x233)))
(and $x234 (= ?x233 ?x235))))))) :qid k!42))
))
(let (($x232 (and $x132 $x231)))
(let (($x239 (=> $x232 $x238)))
(let ((@x526 (monotonicity (rewrite (= (+ ?x230 ?x155) ?x521)) (= (= ?x233 (+ ?x230 ?x155)) $x524))))
(let ((@x532 (quant-intro (monotonicity @x526 (= (and $x234 (= ?x233 (+ ?x230 ?x155))) $x527)) (= $x238 $x530))))
(let ((@x541 (trans (monotonicity @x532 (= $x239 (=> $x232 $x530))) (rewrite (= (=> $x232 $x530) $x537)) (= $x239 $x537))))
(let ((@x583 (monotonicity (quant-intro @x541 (= $x240 $x542)) @x580 (= $x251 (=> $x542 $x578)))))
(let ((@x592 (monotonicity (quant-intro @x541 (= $x240 $x542)) (trans @x583 (rewrite (= (=> $x542 $x578) $x585)) (= $x251 $x585)) (= (and $x240 $x251) $x590))))
(let (($x491 (= (and $x215 (and $x217 (and $x220 true))) (and $x215 (and $x217 $x220)))))
(let ((@x489 (monotonicity (rewrite (= (and $x220 true) $x220)) (= (and $x217 (and $x220 true)) (and $x217 $x220)))))
(let ((@x495 (monotonicity (monotonicity @x489 $x491) (= (and $x212 (and $x215 (and $x217 (and $x220 true)))) $x493))))
(let ((@x502 (trans (monotonicity @x495 (= $x225 (and true $x493))) (rewrite (= (and true $x493) $x493)) (= $x225 $x493))))
(let ((@x506 (trans (monotonicity @x502 (= $x226 (and true $x493))) (rewrite (= (and true $x493) $x493)) (= $x226 $x493))))
(let ((@x512 (monotonicity (monotonicity @x506 (= (and $x210 $x226) $x507)) (= $x228 (and true $x507)))))
(let ((@x518 (monotonicity (trans @x512 (rewrite (= (and true $x507) $x507)) (= $x228 $x507)) (= $x229 (and true $x507)))))
(let ((@x595 (monotonicity (trans @x518 (rewrite (= (and true $x507) $x507)) (= $x229 $x507)) @x592 (= $x253 (=> $x507 $x590)))))
(let ((@x817 (monotonicity (trans @x595 (rewrite (= (=> $x507 $x590) $x597)) (= $x253 $x597)) (trans @x808 (rewrite (= (=> $x635 $x803) $x810)) (= $x336 $x810)) (= (and $x253 $x336) $x815))))
(let (($x197 (exists ((?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?0))))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x187 (+ ?x174 ?x155)))
(let ((?x182 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x193 (< ?x174 ?x182)))
(and $x193 (and $x178 (= ?x182 ?x187))))))))) :qid k!42))
))
(let (($x191 (< ?x174 b_Infinity$)))
(let (($x192 (and $x132 $x191)))
(let (($x198 (=> $x192 $x197)))
(let ((@x430 (monotonicity (rewrite (= (+ ?x174 ?x155) ?x410)) (= (= ?x182 (+ ?x174 ?x155)) $x428))))
(let ((@x436 (monotonicity (monotonicity @x430 (= (and $x178 (= ?x182 (+ ?x174 ?x155))) $x431)) (= (and $x193 (and $x178 (= ?x182 (+ ?x174 ?x155)))) $x434))))
(let ((@x442 (monotonicity (quant-intro @x436 (= $x197 $x437)) (= $x198 (=> $x192 $x437)))))
(let ((@x451 (quant-intro (trans @x442 (rewrite (= (=> $x192 $x437) $x444)) (= $x198 $x444)) (= $x199 $x449))))
(let ((@x458 (trans (monotonicity @x451 (= $x200 (and $x449 true))) (rewrite (= (and $x449 true) $x449)) (= $x200 $x449))))
(let (($x186 (and $x178 $x156)))
(let (($x189 (=> $x186 (<= ?x182 (+ ?x174 ?x155)))))
(let ((@x415 (monotonicity (rewrite (= (+ ?x174 ?x155) ?x410)) (= (<= ?x182 (+ ?x174 ?x155)) $x413))))
(let ((@x424 (trans (monotonicity @x415 (= $x189 (=> $x186 $x413))) (rewrite (= (=> $x186 $x413) $x420)) (= $x189 $x420))))
(let ((@x461 (monotonicity (quant-intro @x424 (= $x190 $x425)) @x458 (= (and $x190 $x200) $x459))))
(let ((@x464 (monotonicity (quant-intro (rewrite (= (=> $x181 $x183) $x404)) (= $x185 $x407)) @x461 (= (and $x185 (and $x190 $x200)) $x462))))
(let ((@x470 (monotonicity (monotonicity @x464 (= (and $x176 (and $x185 (and $x190 $x200))) $x465)) (= (and $x173 (and $x176 (and $x185 (and $x190 $x200)))) $x468))))
(let ((@x477 (trans (monotonicity @x470 (= $x205 (and true $x468))) (rewrite (= (and true $x468) $x468)) (= $x205 $x468))))
(let ((@x481 (trans (monotonicity @x477 (= $x206 (and true $x468))) (rewrite (= (and true $x468) $x468)) (= $x206 $x468))))
(let ((@x402 (quant-intro (rewrite (= (=> (and $x132 (< ?x128 b_Infinity$)) $x168) $x397)) (= $x170 $x400))))
(let ((@x820 (monotonicity (monotonicity @x402 @x481 (= (and $x170 $x206) $x482)) @x817 (= $x338 (=> $x482 $x815)))))
(let ((@x829 (monotonicity @x402 (trans @x820 (rewrite (= (=> $x482 $x815) $x822)) (= $x338 $x822)) (= (and $x170 $x338) $x827))))
(let ((@x395 (quant-intro (rewrite (= (=> (and $x136 $x156) $x159) $x390)) (= $x161 $x393))))
(let ((@x838 (trans (monotonicity @x395 @x829 (= $x340 (=> $x393 $x827))) (rewrite (= (=> $x393 $x827) $x834)) (= $x340 $x834))))
(let ((@x844 (monotonicity (quant-intro (rewrite (= (=> $x149 $x151) $x383)) (= $x153 $x386)) (monotonicity @x395 @x838 (= (and $x161 $x340) $x839)) (= $x342 (=> $x386 $x839)))))
(let ((@x853 (monotonicity (quant-intro (rewrite (= (=> $x149 $x151) $x383)) (= $x153 $x386)) (trans @x844 (rewrite (= (=> $x386 $x839) $x846)) (= $x342 $x846)) (= (and $x153 $x342) $x851))))
(let ((@x862 (trans (monotonicity @x853 (= $x344 (=> $x147 $x851))) (rewrite (= (=> $x147 $x851) $x858)) (= $x344 $x858))))
(let ((@x868 (monotonicity (monotonicity @x862 (= (and $x147 $x344) $x863)) (= $x346 (=> $x145 $x863)))))
(let ((@x877 (monotonicity (trans @x868 (rewrite (= (=> $x145 $x863) $x870)) (= $x346 $x870)) (= (and $x145 $x346) $x875))))
(let (($x368 (and $x354 (and $x360 $x138))))
(let (($x371 (and true $x368)))
(let ((@x362 (quant-intro (rewrite (= (=> $x132 (= ?x128 b_Infinity$)) $x357)) (= $x135 $x360))))
(let ((@x367 (monotonicity @x362 (rewrite (= (and $x138 true) $x138)) (= (and $x135 (and $x138 true)) (and $x360 $x138)))))
(let ((@x356 (quant-intro (rewrite (= (=> $x127 (= ?x128 0)) (or $x132 (= ?x128 0)))) (= $x131 $x354))))
(let ((@x370 (monotonicity @x356 @x367 (= (and $x131 (and $x135 (and $x138 true))) $x368))))
(let ((@x377 (trans (monotonicity @x370 (= $x142 $x371)) (rewrite (= $x371 $x368)) (= $x142 $x368))))
(let ((@x381 (trans (monotonicity @x377 (= $x143 $x371)) (rewrite (= $x371 $x368)) (= $x143 $x368))))
(let ((@x886 (trans (monotonicity @x381 @x877 (= $x348 (=> $x368 $x875))) (rewrite (= (=> $x368 $x875) $x882)) (= $x348 $x882))))
(let ((@x1411 (trans (monotonicity @x886 (= $x349 (not $x882))) (monotonicity @x1406 (= (not $x882) $x1407)) (= $x349 $x1407))))
(let ((@x1413 (not-or-elim (mp (asserted $x349) @x1411 $x1407) $x890)))
(let ((@x1463 (mp~ (and-elim @x1413 $x360) (nnf-pos (refl (~ $x357 $x357)) (~ $x360 $x360)) $x360)))
(let ((@x3498 (mp @x1463 (quant-intro (refl (= $x357 $x357)) (= $x360 $x3493)) $x3493)))
(let ((@x6489 (rewrite (= (or (not $x3493) (or $x1538 $x5616)) (or (not $x3493) $x1538 $x5616)))))
(let ((@x5602 (mp ((_ quant-inst ?v0!5) (or (not $x3493) (or $x1538 $x5616))) @x6489 (or (not $x3493) $x1538 $x5616))))
(let ((@x5777 (unit-resolution (hypothesis $x6457) (mp (unit-resolution @x5602 @x3498 (hypothesis $x1539) $x5616) @x5778 $x5625) false)))
(let ((@x5735 (unit-resolution (lemma @x5777 (or $x5625 $x1538)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x6457 $x1543)) @x6514 $x6457) @x6246 false)))
(let (($x3544 (not $x3541)))
(let (($x3827 (or $x3544 $x3824)))
(let (($x3830 (not $x3827)))
(let (($x3524 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x933 (>= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x155) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(or $x137 $x922 $x933))))))) :pattern ( (pair$ ?v1 ?v0) ) :qid k!42))
))
(let (($x3529 (not $x3524)))
(let (($x3833 (or $x3529 $x3830)))
(let (($x3836 (not $x3833)))
(let ((?x1522 (v_b_SP_G_0$ ?v0!4)))
(let ((?x1523 (* (- 1) ?x1522)))
(let ((?x1521 (v_b_SP_G_0$ ?v1!3)))
(let ((?x1513 (pair$ ?v1!3 ?v0!4)))
(let ((?x1514 (b_G$ ?x1513)))
(let ((?x2045 (+ ?x1514 ?x1521 ?x1523)))
(let (($x2048 (>= ?x2045 0)))
(let (($x1517 (<= (+ b_Infinity$ (* (- 1) ?x1514)) 0)))
(let (($x1512 (v_b_Visited_G_0$ ?v1!3)))
(let (($x2394 (not $x1512)))
(let (($x2409 (or $x2394 $x1517 $x2048)))
(let (($x3500 (forall ((?v0 B_Vertex$) )(! (let (($x136 (v_b_Visited_G_0$ ?v0)))
(not $x136)) :pattern ( (v_b_Visited_G_0$ ?v0) ) :qid k!42))
))
(let ((@x1468 (mp~ (and-elim @x1413 $x138) (nnf-pos (refl (~ $x137 $x137)) (~ $x138 $x138)) $x138)))
(let ((@x3505 (mp @x1468 (quant-intro (refl (= $x137 $x137)) (= $x138 $x3500)) $x3500)))
(let ((@x3073 (unit-resolution ((_ quant-inst ?v1!3) (or (not $x3500) $x2394)) @x3505 (hypothesis $x1512) false)))
(let (($x2414 (not $x2409)))
(let (($x3839 (or $x2414 $x3836)))
(let (($x3842 (not $x3839)))
(let (($x3515 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x907 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(or $x136 (not (v_b_Visited_G_0$ ?v0)) $x907))) :pattern ( (v_b_Visited_G_0$ ?v1) (v_b_Visited_G_0$ ?v0) ) :qid k!42))
))
(let (($x3520 (not $x3515)))
(let (($x3845 (or $x3520 $x3842)))
(let (($x3848 (not $x3845)))
(let (($x1498 (>= (+ (v_b_SP_G_0$ ?v1!1) (* (- 1) (v_b_SP_G_0$ ?v0!2))) 0)))
(let (($x1491 (v_b_Visited_G_0$ ?v0!2)))
(let (($x2348 (not $x1491)))
(let (($x1489 (v_b_Visited_G_0$ ?v1!1)))
(let (($x2363 (or $x1489 $x2348 $x1498)))
(let (($x2368 (not $x2363)))
(let (($x3851 (or $x2368 $x3848)))
(let (($x3854 (not $x3851)))
(let (($x3506 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(>= ?x128 0)) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!42))
))
(let (($x3511 (not $x3506)))
(let (($x3857 (or $x3511 $x3854)))
(let (($x3860 (not $x3857)))
(let ((?x1475 (v_b_SP_G_0$ ?v0!0)))
(let (($x1476 (>= ?x1475 0)))
(let (($x1477 (not $x1476)))
(let ((@x5848 (hypothesis $x1477)))
(let (($x5440 (<= ?x1475 0)))
(let (($x86 (<= b_Infinity$ 0)))
(let (($x87 (not $x86)))
(let ((@x90 (mp (asserted (< 0 b_Infinity$)) (rewrite (= (< 0 b_Infinity$) $x87)) $x87)))
(let (($x5734 (= b_Infinity$ ?x1475)))
(let ((@x4994 (symm (commutativity (= $x5734 (= ?x1475 b_Infinity$))) (= (= ?x1475 b_Infinity$) $x5734))))
(let (($x5461 (= ?x1475 b_Infinity$)))
(let (($x5589 (= ?v0!0 b_Source$)))
(let (($x4695 (not $x5589)))
(let ((@x5096 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1475 0)) $x1476)) @x5848 (not (= ?x1475 0)))))
(let (($x3487 (forall ((?v0 B_Vertex$) )(! (let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(or $x132 (= (v_b_SP_G_0$ ?v0) 0)))) :pattern ( (v_b_SP_G_0$ ?v0) ) :qid k!42))
))
(let ((@x3491 (quant-intro (refl (= (or $x132 (= ?x128 0)) (or $x132 (= ?x128 0)))) (= $x354 $x3487))))
(let ((@x1457 (nnf-pos (refl (~ (or $x132 (= ?x128 0)) (or $x132 (= ?x128 0)))) (~ $x354 $x354))))
(let ((@x3492 (mp (mp~ (and-elim @x1413 $x354) @x1457 $x354) @x3491 $x3487)))
(let (($x5571 (= (or (not $x3487) (or $x4695 (= ?x1475 0))) (or (not $x3487) $x4695 (= ?x1475 0)))))
(let ((@x5058 (mp ((_ quant-inst ?v0!0) (or (not $x3487) (or $x4695 (= ?x1475 0)))) (rewrite $x5571) (or (not $x3487) $x4695 (= ?x1475 0)))))
(let ((@x5156 (rewrite (= (or (not $x3493) (or $x5589 $x5461)) (or (not $x3493) $x5589 $x5461)))))
(let ((@x5542 (mp ((_ quant-inst ?v0!0) (or (not $x3493) (or $x5589 $x5461))) @x5156 (or (not $x3493) $x5589 $x5461))))
(let ((@x5003 (mp (unit-resolution @x5542 @x3498 (unit-resolution @x5058 @x3492 @x5096 $x4695) $x5461) @x4994 $x5734)))
(let ((@x5457 ((_ th-lemma arith triangle-eq) (or (not $x5734) (<= (+ b_Infinity$ (* (- 1) ?x1475)) 0)))))
(let ((@x5462 (unit-resolution @x5457 @x5003 (<= (+ b_Infinity$ (* (- 1) ?x1475)) 0))))
(let ((@x5446 (lemma ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x5440) @x5462 @x90 false) (or (not $x5440) $x1476))))
(let ((@x6353 (unit-resolution @x5446 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x5440 $x1476)) @x5848 $x5440) @x5848 false)))
(let (($x3863 (or $x1477 $x3860)))
(let (($x3866 (not $x3863)))
(let (($x3869 (or $x869 $x3866)))
(let (($x3872 (not $x3869)))
(let (($x5983 (not $x3487)))
(let (($x3194 (or $x5983 $x145)))
(let ((@x5448 (monotonicity (rewrite (= (= b_Source$ b_Source$) true)) (= (not (= b_Source$ b_Source$)) (not true)))))
(let ((@x5820 (trans @x5448 (rewrite (= (not true) false)) (= (not (= b_Source$ b_Source$)) false))))
(let ((@x5657 (monotonicity @x5820 (= (or (not (= b_Source$ b_Source$)) $x145) (or false $x145)))))
(let ((@x5707 (trans @x5657 (rewrite (= (or false $x145) $x145)) (= (or (not (= b_Source$ b_Source$)) $x145) $x145))))
(let ((@x5373 (monotonicity @x5707 (= (or $x5983 (or (not (= b_Source$ b_Source$)) $x145)) $x3194))))
(let ((@x5431 (trans @x5373 (rewrite (= $x3194 $x3194)) (= (or $x5983 (or (not (= b_Source$ b_Source$)) $x145)) $x3194))))
(let ((@x5763 (mp ((_ quant-inst b_Source$) (or $x5983 (or (not (= b_Source$ b_Source$)) $x145))) @x5431 $x3194)))
(let (($x3875 (or $x869 $x3872)))
(let (($x2848 (forall ((?v1 B_Vertex$) )(! (let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x2242 (= (+ ?x273 ?x1912 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(or (>= (+ ?x273 ?x1912) 0) $x300 (not $x2242)))))))) :qid k!42))
))
(let (($x2833 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1282 (>= (+ ?x155 ?x273 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x300 (not $x291)))
(or $x300 $x922 $x1282))))))) :qid k!42))
))
(let (($x2857 (not (or (not $x2833) $x1909 $x1914 (not $x2848)))))
(let (($x2862 (or $x2811 $x2857)))
(let (($x2788 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x1262 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x2768 (not (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x291 $x2768 $x1262)))) :qid k!42))
))
(let (($x2871 (not (or (not $x2788) (not $x2862)))))
(let (($x2876 (or $x2765 $x2871)))
(let (($x2884 (not (or $x1259 (not $x2876)))))
(let (($x2889 (or $x1848 $x2884)))
(let (($x2897 (not (or $x773 (not $x2889)))))
(let (($x2902 (or $x773 $x2897)))
(let (($x2910 (not (or $x785 (not $x2902)))))
(let (($x2915 (or $x1830 $x2910)))
(let (($x2923 (not (or $x1250 (not $x2915)))))
(let (($x2928 (or $x1813 $x2923)))
(let (($x2742 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x273 (v_b_SP_G_2$ ?v0)))
(let (($x278 (= ?x273 ?x174)))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1173 (* (- 1) ?x257)))
(let (($x1175 (<= (+ ?x174 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2717 (or $x1169 $x1175)))
(let (($x2718 (not $x2717)))
(or $x2718 $x278)))))))))) :qid k!42))
))
(let (($x2736 (forall ((?v0 B_Vertex$) )(! (let ((?x273 (v_b_SP_G_2$ ?v0)))
(let ((?x1186 (* (- 1) ?x273)))
(let ((?x268 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x257 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1185 (= (+ ?x257 ?x268 ?x1186) 0)))
(let (($x1175 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x257) (* (- 1) ?x268)) 0)))
(let (($x1169 (<= (+ b_Infinity$ (* (- 1) ?x268)) 0)))
(or $x1169 $x1175 $x1185)))))))) :qid k!42))
))
(let (($x2939 (or $x1773 $x1778 $x255 $x1213 (not $x1209) $x2935 (not $x2736) (not $x2742) (not $x2928))))
(let (($x2940 (not $x2939)))
(let (($x2672 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1140 (>= (+ ?x155 ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(or $x1099 $x922 $x1140)))))) :qid k!42))
))
(let (($x2680 (not (or (not $x2672) $x246))))
(let (($x2685 (or $x2650 $x2680)))
(let (($x2628 (forall ((?v0 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2191 (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2192 (= ?x2191 0)))
(let (($x2176 (<= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2617 (not (or $x2176 (not $x2192)))))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x1099 $x2617)))))))) :qid k!42))
))
(let (($x2694 (not (or (not $x2628) (not $x2685)))))
(let (($x2591 (forall ((?v1 B_Vertex$) )(! (let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2148 (= (+ ?x230 ?x1662 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x230 ?x1662) 0) (not $x2148)))))) :qid k!42))
))
(let (($x2599 (not (or $x1659 $x1664 (not $x2591)))))
(let (($x2699 (or $x2599 $x2694)))
(let (($x2576 (forall ((?v0 B_Vertex$) )(! (let (($x1002 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x178 $x1002))) :qid k!42))
))
(let (($x2712 (not (or (not $x2576) $x2706 $x2707 $x2708 $x2709 (not $x2699)))))
(let (($x2945 (or $x2712 $x2940)))
(let (($x2562 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2128 (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2129 (= ?x2128 0)))
(let (($x2113 (<= (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2551 (not (or $x2113 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2129)))))
(let (($x1002 (<= (+ b_Infinity$ (* (- 1) ?x174)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x1002 $x2551)))))))) :qid k!42))
))
(let (($x2534 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let (($x990 (>= (+ ?x155 ?x174 ?x991) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x179 (not $x178)))
(or $x179 $x922 $x990))))))))) :qid k!42))
))
(let (($x2512 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x182 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x991 (* (- 1) ?x182)))
(let ((?x174 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1015 (>= (+ ?x174 ?x991) 0)))
(let (($x180 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x2492 (not $x180)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x178 $x2492 $x1015)))))))) :qid k!42))
))
(let (($x2489 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(let ((?x2090 (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2091 (= ?x2090 0)))
(let (($x2075 (<= (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2478 (not (or $x2075 (not (v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2091)))))
(let (($x947 (<= (+ b_Infinity$ (* (- 1) ?x128)) 0)))
(let (($x127 (= ?v0 b_Source$)))
(or $x127 $x947 $x2478)))))))) :qid k!42))
))
(let (($x2958 (or (not $x2489) $x2952 (not $x1051) (not $x2512) (not $x2534) (not $x2562) (not $x2945))))
(let (($x2959 (not $x2958)))
(let (($x2451 (forall ((?v1 B_Vertex$) )(! (let ((?x1540 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1541 (* (- 1) ?x1540)))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(or (>= (+ ?x128 ?x1541) 0) $x137 (not (= (+ ?x128 ?x1541 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))) :qid k!42))
))
(let (($x2459 (not (or $x1538 $x1543 (not $x2451)))))
(let (($x2964 (or $x2459 $x2959)))
(let (($x2436 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x155 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x933 (>= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x155) 0)))
(let (($x922 (<= (+ b_Infinity$ (* (- 1) ?x155)) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x137 (not $x136)))
(or $x137 $x922 $x933))))))) :qid k!42))
))
(let (($x2973 (not (or (not $x2436) (not $x2964)))))
(let (($x2978 (or $x2414 $x2973)))
(let (($x2391 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x907 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(or $x136 (not (v_b_Visited_G_0$ ?v0)) $x907))) :qid k!42))
))
(let (($x2987 (not (or (not $x2391) (not $x2978)))))
(let (($x2992 (or $x2368 $x2987)))
(let (($x3000 (not (or $x902 (not $x2992)))))
(let (($x3005 (or $x1477 $x3000)))
(let (($x3013 (not (or $x869 (not $x3005)))))
(let (($x3018 (or $x869 $x3013)))
(let (($x2837 (or (>= (+ ?x273 (* (- 1) ?x1911)) 0) $x300 (not (= (+ ?x273 (* (- 1) ?x1911) (b_G$ (pair$ ?0 ?v0!20))) 0)))))
(let ((@x3736 (monotonicity (quant-intro (refl (= $x2837 $x2837)) (= $x2848 $x3729)) (= (not $x2848) $x3734))))
(let ((@x3724 (quant-intro (refl (= (or $x300 $x922 $x1282) (or $x300 $x922 $x1282))) (= $x2833 $x3720))))
(let ((@x3739 (monotonicity (monotonicity @x3724 (= (not $x2833) $x3725)) @x3736 (= (or (not $x2833) $x1909 $x1914 (not $x2848)) $x3737))))
(let ((@x3748 (monotonicity (monotonicity (monotonicity @x3739 (= $x2857 $x3740)) (= $x2862 $x3743)) (= (not $x2862) $x3746))))
(let (($x2768 (not (fun_app$ v_b_Visited_G_2$ ?1))))
(let (($x2783 (or $x291 $x2768 $x1262)))
(let ((@x3719 (monotonicity (quant-intro (refl (= $x2783 $x2783)) (= $x2788 $x3712)) (= (not $x2788) $x3717))))
(let ((@x3754 (monotonicity (monotonicity @x3719 @x3748 (= (or (not $x2788) (not $x2862)) $x3749)) (= $x2871 $x3752))))
(let ((@x3760 (monotonicity (monotonicity @x3754 (= $x2876 $x3755)) (= (not $x2876) $x3758))))
(let ((@x3707 (quant-intro (refl (= (>= ?x273 0) (>= ?x273 0))) (= $x1256 $x3703))))
(let ((@x3763 (monotonicity (monotonicity @x3707 (= $x1259 $x3708)) @x3760 (= (or $x1259 (not $x2876)) $x3761))))
(let ((@x3772 (monotonicity (monotonicity (monotonicity @x3763 (= $x2884 $x3764)) (= $x2889 $x3767)) (= (not $x2889) $x3770))))
(let ((@x3778 (monotonicity (monotonicity @x3772 (= (or $x773 (not $x2889)) $x3773)) (= $x2897 $x3776))))
(let ((@x3784 (monotonicity (monotonicity @x3778 (= $x2902 $x3779)) (= (not $x2902) $x3782))))
(let ((@x3699 (quant-intro (refl (= (or $x300 $x278) (or $x300 $x278))) (= $x652 $x3695))))
(let ((@x3787 (monotonicity (monotonicity @x3699 (= $x785 $x3700)) @x3784 (= (or $x785 (not $x2902)) $x3785))))
(let ((@x3796 (monotonicity (monotonicity (monotonicity @x3787 (= $x2910 $x3788)) (= $x2915 $x3791)) (= (not $x2915) $x3794))))
(let ((@x3693 (monotonicity (quant-intro (refl (= $x1243 $x1243)) (= $x1247 $x3686)) (= $x1250 $x3691))))
(let ((@x3802 (monotonicity (monotonicity @x3693 @x3796 (= (or $x1250 (not $x2915)) $x3797)) (= $x2923 $x3800))))
(let ((@x3808 (monotonicity (monotonicity @x3802 (= $x2928 $x3803)) (= (not $x2928) $x3806))))
(let ((@x3680 (refl (= (or (not (or $x1169 $x1175)) $x278) (or (not (or $x1169 $x1175)) $x278)))))
(let ((@x3685 (monotonicity (quant-intro @x3680 (= $x2742 $x3678)) (= (not $x2742) $x3683))))
(let ((@x3674 (quant-intro (refl (= (or $x1169 $x1175 $x1185) (or $x1169 $x1175 $x1185))) (= $x2736 $x3670))))
(let ((@x3667 (monotonicity (quant-intro (refl (= $x1206 $x1206)) (= $x1209 $x3660)) (= (not $x1209) $x3665))))
(let ((@x3811 (monotonicity @x3667 (monotonicity @x3674 (= (not $x2736) $x3675)) @x3685 @x3808 (= $x2939 $x3809))))
(let ((@x3626 (quant-intro (refl (= (or $x1099 $x922 $x1140) (or $x1099 $x922 $x1140))) (= $x2672 $x3622))))
(let ((@x3632 (monotonicity (monotonicity @x3626 (= (not $x2672) $x3627)) (= (or (not $x2672) $x246) $x3630))))
(let ((@x3641 (monotonicity (monotonicity (monotonicity @x3632 (= $x2680 $x3633)) (= $x2685 $x3636)) (= (not $x2685) $x3639))))
(let ((?x2191 (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?0) ?0))))))
(let (($x2192 (= ?x2191 0)))
(let (($x2176 (<= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?0)))) 0)))
(let (($x2617 (not (or $x2176 (not $x2192)))))
(let (($x2623 (or $x127 $x1099 $x2617)))
(let ((@x3621 (monotonicity (quant-intro (refl (= $x2623 $x2623)) (= $x2628 $x3614)) (= (not $x2628) $x3619))))
(let ((@x3647 (monotonicity (monotonicity @x3621 @x3641 (= (or (not $x2628) (not $x2685)) $x3642)) (= $x2694 $x3645))))
(let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let (($x2148 (= (+ ?x230 ?x1662 (b_G$ (pair$ ?0 ?v0!8))) 0)))
(let (($x2580 (or (>= (+ ?x230 ?x1662) 0) (not $x2148))))
(let ((@x3607 (monotonicity (quant-intro (refl (= $x2580 $x2580)) (= $x2591 $x3600)) (= (not $x2591) $x3605))))
(let ((@x3613 (monotonicity (monotonicity @x3607 (= (or $x1659 $x1664 (not $x2591)) $x3608)) (= $x2599 $x3611))))
(let ((@x3653 (monotonicity (monotonicity @x3613 @x3647 (= $x2699 $x3648)) (= (not $x2699) $x3651))))
(let ((@x3594 (quant-intro (refl (= (or $x178 $x1002) (or $x178 $x1002))) (= $x2576 $x3590))))
(let ((@x3656 (monotonicity (monotonicity @x3594 (= (not $x2576) $x3595)) @x3653 (= (or (not $x2576) $x2706 $x2707 $x2708 $x2709 (not $x2699)) $x3654))))
(let ((@x3817 (monotonicity (monotonicity @x3656 (= $x2712 $x3657)) (monotonicity @x3811 (= $x2940 $x3812)) (= $x2945 $x3815))))
(let ((?x2128 (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?0) ?0))))))
(let (($x2129 (= ?x2128 0)))
(let (($x2113 (<= (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?0)))) 0)))
(let (($x2551 (not (or $x2113 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?0))) (not $x2129)))))
(let (($x2557 (or $x127 $x1002 $x2551)))
(let ((@x3588 (monotonicity (quant-intro (refl (= $x2557 $x2557)) (= $x2562 $x3581)) (= (not $x2562) $x3586))))
(let ((@x3577 (quant-intro (refl (= (or $x179 $x922 $x990) (or $x179 $x922 $x990))) (= $x2534 $x3573))))
(let ((@x3569 (quant-intro (refl (= (or $x178 (not $x180) $x1015) (or $x178 (not $x180) $x1015))) (= $x2512 $x3565))))
(let ((@x3560 (quant-intro (refl (= (>= ?x174 0) (>= ?x174 0))) (= $x1051 $x3556))))
(let ((?x2090 (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?0) ?0))))))
(let (($x2091 (= ?x2090 0)))
(let (($x2075 (<= (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0)))) 0)))
(let (($x2478 (not (or $x2075 (not (v_b_Visited_G_0$ (?v1!6 ?0))) (not $x2091)))))
(let (($x947 (<= (+ b_Infinity$ (* (- 1) ?x128)) 0)))
(let (($x2484 (or $x127 $x947 $x2478)))
(let ((@x3554 (monotonicity (quant-intro (refl (= $x2484 $x2484)) (= $x2489 $x3547)) (= (not $x2489) $x3552))))
(let ((@x3823 (monotonicity @x3554 (monotonicity @x3560 (= (not $x1051) $x3561)) (monotonicity @x3569 (= (not $x2512) $x3570)) (monotonicity @x3577 (= (not $x2534) $x3578)) @x3588 (monotonicity @x3817 (= (not $x2945) $x3818)) (= $x2958 $x3821))))
(let (($x2440 (or (>= (+ ?x128 ?x1541) 0) $x137 (not (= (+ ?x128 ?x1541 (b_G$ (pair$ ?0 ?v0!5))) 0)))))
(let ((@x3540 (monotonicity (quant-intro (refl (= $x2440 $x2440)) (= $x2451 $x3533)) (= (not $x2451) $x3538))))
(let ((@x3546 (monotonicity (monotonicity @x3540 (= (or $x1538 $x1543 (not $x2451)) $x3541)) (= $x2459 $x3544))))
(let ((@x3829 (monotonicity @x3546 (monotonicity @x3823 (= $x2959 $x3824)) (= $x2964 $x3827))))
(let ((@x3528 (quant-intro (refl (= (or $x137 $x922 $x933) (or $x137 $x922 $x933))) (= $x2436 $x3524))))
(let ((@x3835 (monotonicity (monotonicity @x3528 (= (not $x2436) $x3529)) (monotonicity @x3829 (= (not $x2964) $x3830)) (= (or (not $x2436) (not $x2964)) $x3833))))
(let ((@x3844 (monotonicity (monotonicity (monotonicity @x3835 (= $x2973 $x3836)) (= $x2978 $x3839)) (= (not $x2978) $x3842))))
(let ((@x3519 (quant-intro (refl (= (or $x136 (not $x148) $x907) (or $x136 (not $x148) $x907))) (= $x2391 $x3515))))
(let ((@x3847 (monotonicity (monotonicity @x3519 (= (not $x2391) $x3520)) @x3844 (= (or (not $x2391) (not $x2978)) $x3845))))
(let ((@x3856 (monotonicity (monotonicity (monotonicity @x3847 (= $x2987 $x3848)) (= $x2992 $x3851)) (= (not $x2992) $x3854))))
(let ((@x3510 (quant-intro (refl (= (>= ?x128 0) (>= ?x128 0))) (= $x899 $x3506))))
(let ((@x3859 (monotonicity (monotonicity @x3510 (= $x902 $x3511)) @x3856 (= (or $x902 (not $x2992)) $x3857))))
(let ((@x3868 (monotonicity (monotonicity (monotonicity @x3859 (= $x3000 $x3860)) (= $x3005 $x3863)) (= (not $x3005) $x3866))))
(let ((@x3874 (monotonicity (monotonicity @x3868 (= (or $x869 (not $x3005)) $x3869)) (= $x3013 $x3872))))
(let (($x2251 (forall ((?v1 B_Vertex$) )(! (let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x2242 (= (+ ?x273 ?x1912 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x2245 (and (not (>= (+ ?x273 ?x1912) 0)) $x291 $x2242)))
(not $x2245))))))) :qid k!42))
))
(let (($x1915 (not $x1914)))
(let (($x1910 (not $x1909)))
(let (($x2260 (and $x1289 $x1910 $x1915 $x2251)))
(let (($x1891 (not (and $x1883 (not $x1888)))))
(let (($x1897 (or $x1891 $x1896)))
(let (($x1898 (not $x1897)))
(let (($x2265 (or $x1898 $x2260)))
(let (($x2268 (and $x1270 $x2265)))
(let (($x1864 (not (and (not $x1860) $x1862))))
(let (($x1870 (or $x1864 $x1869)))
(let (($x1871 (not $x1870)))
(let (($x2271 (or $x1871 $x2268)))
(let (($x2274 (and $x1256 $x2271)))
(let (($x2277 (or $x1848 $x2274)))
(let (($x2280 (and $x297 $x2277)))
(let (($x2283 (or $x773 $x2280)))
(let (($x2286 (and $x652 $x2283)))
(let (($x2289 (or $x1830 $x2286)))
(let (($x2292 (and $x1247 $x2289)))
(let (($x2295 (or $x1813 $x2292)))
(let (($x1779 (not $x1778)))
(let (($x1774 (not $x1773)))
(let (($x2301 (and $x1774 $x1779 $x256 $x1214 $x1209 $x266 $x1193 $x1199 $x2295)))
(let (($x1749 (not $x246)))
(let (($x1752 (and $x1146 $x1749)))
(let (($x1733 (not (and (not $x1724) (not $x1730)))))
(let (($x2212 (or $x1733 $x2209)))
(let (($x2215 (not $x2212)))
(let (($x2218 (or $x2215 $x1752)))
(let (($x2203 (forall ((?v0 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2191 (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2192 (= ?x2191 0)))
(let (($x2176 (<= (+ ?x230 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2197 (and (not $x2176) $x2192)))
(let (($x1099 (<= (+ b_Infinity$ (* (- 1) ?x230)) 0)))
(let (($x1100 (not $x1099)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1103 (and $x132 $x1100)))
(let (($x1106 (not $x1103)))
(or $x1106 $x2197)))))))))))) :qid k!42))
))
(let (($x2221 (and $x2203 $x2218)))
(let (($x2157 (forall ((?v1 B_Vertex$) )(! (let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2148 (= (+ ?x230 ?x1662 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(let (($x2151 (and (not (>= (+ ?x230 ?x1662) 0)) $x2148)))
(not $x2151)))))) :qid k!42))
))
(let (($x1665 (not $x1664)))
(let (($x1660 (not $x1659)))
(let (($x2163 (and $x1660 $x1665 $x2157)))
(let (($x2224 (or $x2163 $x2221)))
(let (($x1641 (forall ((?v0 B_Vertex$) )(! (let (($x1002 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1003 (not $x1002)))
(let (($x178 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x179 (not $x178)))
(let (($x1077 (and $x179 $x1003)))
(not $x1077)))))) :qid k!42))
))
(let (($x2230 (and $x1641 $x212 $x215 $x217 $x220 $x2224)))
(let (($x2306 (or $x2230 $x2301)))
(let (($x2140 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2128 (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2129 (= ?x2128 0)))
(let ((?x1613 (?v1!7 ?v0)))
(let (($x1618 (fun_app$ v_b_Visited_G_1$ ?x1613)))
(let (($x2134 (and (not (<= (+ ?x174 (* (- 1) (fun_app$c v_b_SP_G_1$ ?x1613))) 0)) $x1618 $x2129)))
(let (($x1002 (<= (+ b_Infinity$ (* (- 1) ?x174)) 0)))
(let (($x1003 (not $x1002)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1006 (and $x132 $x1003)))
(let (($x1009 (not $x1006)))
(or $x1009 $x2134))))))))))))) :qid k!42))
))
(let (($x2102 (forall ((?v0 B_Vertex$) )(! (let ((?x128 (v_b_SP_G_0$ ?v0)))
(let ((?x2090 (+ ?x128 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2091 (= ?x2090 0)))
(let ((?x1578 (?v1!6 ?v0)))
(let (($x1583 (v_b_Visited_G_0$ ?x1578)))
(let (($x2096 (and (not (<= (+ ?x128 (* (- 1) (v_b_SP_G_0$ ?x1578))) 0)) $x1583 $x2091)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x951 (and $x132 (not (<= (+ b_Infinity$ (* (- 1) ?x128)) 0)))))
(let (($x954 (not $x951)))
(or $x954 $x2096))))))))))) :qid k!42))
))
(let (($x2315 (and $x2102 $x173 $x1051 $x1045 $x997 $x2140 $x2306)))
(let (($x1567 (forall ((?v1 B_Vertex$) )(! (let ((?x1540 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1541 (* (- 1) ?x1540)))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(let (($x1554 (and (not (>= (+ ?x128 ?x1541) 0)) $x136 (= (+ ?x128 ?x1541 (b_G$ (pair$ ?v1 ?v0!5))) 0))))
(not $x1554)))))) :qid k!42))
))
(let (($x2062 (and $x1539 $x1544 $x1567)))
(let (($x2320 (or $x2062 $x2315)))
(let (($x2323 (and $x939 $x2320)))
(let (($x1520 (not (and $x1512 (not $x1517)))))
(let (($x2051 (or $x1520 $x2048)))
(let (($x2054 (not $x2051)))
(let (($x2326 (or $x2054 $x2323)))
(let (($x2329 (and $x914 $x2326)))
(let (($x1493 (not (and (not $x1489) $x1491))))
(let (($x1499 (or $x1493 $x1498)))
(let (($x1500 (not $x1499)))
(let (($x2332 (or $x1500 $x2329)))
(let (($x2335 (and $x899 $x2332)))
(let (($x2338 (or $x1477 $x2335)))
(let (($x2341 (and $x145 $x2338)))
(let (($x2344 (or $x869 $x2341)))
(let ((@x2942 (rewrite (= (and $x1774 $x1779 $x256 $x1214 $x1209 $x266 $x2736 $x2742 $x2928) $x2940))))
(let (($x2242 (= (+ ?x273 (* (- 1) ?x1911) (b_G$ (pair$ ?0 ?v0!20))) 0)))
(let (($x2245 (and (not (>= (+ ?x273 (* (- 1) ?x1911)) 0)) $x291 $x2242)))
(let (($x2248 (not $x2245)))
(let ((@x2843 (monotonicity (rewrite (= $x2245 (not $x2837))) (= $x2248 (not (not $x2837))))))
(let ((@x2850 (quant-intro (trans @x2843 (rewrite (= (not (not $x2837)) $x2837)) (= $x2248 $x2837)) (= $x2251 $x2848))))
(let ((@x2820 (monotonicity (rewrite (= $x1276 (not (or $x300 $x922)))) (= $x1279 (not (not (or $x300 $x922)))))))
(let ((@x2824 (trans @x2820 (rewrite (= (not (not (or $x300 $x922))) (or $x300 $x922))) (= $x1279 (or $x300 $x922)))))
(let ((@x2832 (trans (monotonicity @x2824 (= $x1286 (or (or $x300 $x922) $x1282))) (rewrite (= (or (or $x300 $x922) $x1282) (or $x300 $x922 $x1282))) (= $x1286 (or $x300 $x922 $x1282)))))
(let ((@x2853 (monotonicity (quant-intro @x2832 (= $x1289 $x2833)) @x2850 (= $x2260 (and $x2833 $x1910 $x1915 $x2848)))))
(let ((@x2861 (trans @x2853 (rewrite (= (and $x2833 $x1910 $x1915 $x2848) $x2857)) (= $x2260 $x2857))))
(let ((@x2798 (monotonicity (rewrite (= (and $x1883 (not $x1888)) (not (or $x2791 $x1888)))) (= $x1891 (not (not (or $x2791 $x1888)))))))
(let ((@x2802 (trans @x2798 (rewrite (= (not (not (or $x2791 $x1888))) (or $x2791 $x1888))) (= $x1891 (or $x2791 $x1888)))))
(let ((@x2810 (trans (monotonicity @x2802 (= $x1897 (or (or $x2791 $x1888) $x1896))) (rewrite (= (or (or $x2791 $x1888) $x1896) $x2806)) (= $x1897 $x2806))))
(let ((@x2864 (monotonicity (monotonicity @x2810 (= $x1898 $x2811)) @x2861 (= $x2265 $x2862))))
(let ((@x2775 (monotonicity (rewrite (= $x302 (not (or $x291 $x2768)))) (= $x664 (not (not (or $x291 $x2768)))))))
(let ((@x2779 (trans @x2775 (rewrite (= (not (not (or $x291 $x2768))) (or $x291 $x2768))) (= $x664 (or $x291 $x2768)))))
(let ((@x2787 (trans (monotonicity @x2779 (= $x1267 (or (or $x291 $x2768) $x1262))) (rewrite (= (or (or $x291 $x2768) $x1262) $x2783)) (= $x1267 $x2783))))
(let ((@x2867 (monotonicity (quant-intro @x2787 (= $x1270 $x2788)) @x2864 (= $x2268 (and $x2788 $x2862)))))
(let ((@x2752 (monotonicity (rewrite (= (and (not $x1860) $x1862) (not (or $x1860 $x2745)))) (= $x1864 (not (not (or $x1860 $x2745)))))))
(let ((@x2756 (trans @x2752 (rewrite (= (not (not (or $x1860 $x2745))) (or $x1860 $x2745))) (= $x1864 (or $x1860 $x2745)))))
(let ((@x2764 (trans (monotonicity @x2756 (= $x1870 (or (or $x1860 $x2745) $x1869))) (rewrite (= (or (or $x1860 $x2745) $x1869) $x2760)) (= $x1870 $x2760))))
(let ((@x2878 (monotonicity (monotonicity @x2764 (= $x1871 $x2765)) (trans @x2867 (rewrite (= (and $x2788 $x2862) $x2871)) (= $x2268 $x2871)) (= $x2271 $x2876))))
(let ((@x2888 (trans (monotonicity @x2878 (= $x2274 (and $x1256 $x2876))) (rewrite (= (and $x1256 $x2876) $x2884)) (= $x2274 $x2884))))
(let ((@x2894 (monotonicity (monotonicity @x2888 (= $x2277 $x2889)) (= $x2280 (and $x297 $x2889)))))
(let ((@x2904 (monotonicity (trans @x2894 (rewrite (= (and $x297 $x2889) $x2897)) (= $x2280 $x2897)) (= $x2283 $x2902))))
(let ((@x2914 (trans (monotonicity @x2904 (= $x2286 (and $x652 $x2902))) (rewrite (= (and $x652 $x2902) $x2910)) (= $x2286 $x2910))))
(let ((@x2920 (monotonicity (monotonicity @x2914 (= $x2289 $x2915)) (= $x2292 (and $x1247 $x2915)))))
(let ((@x2930 (monotonicity (trans @x2920 (rewrite (= (and $x1247 $x2915) $x2923)) (= $x2292 $x2923)) (= $x2295 $x2928))))
(let ((@x2741 (monotonicity (rewrite (= $x1179 (not (or $x1169 $x1175)))) (= $x1196 (or (not (or $x1169 $x1175)) $x278)))))
(let ((@x2723 (monotonicity (rewrite (= $x1179 (not (or $x1169 $x1175)))) (= $x1182 (not (not (or $x1169 $x1175)))))))
(let ((@x2727 (trans @x2723 (rewrite (= (not (not (or $x1169 $x1175))) (or $x1169 $x1175))) (= $x1182 (or $x1169 $x1175)))))
(let ((@x2735 (trans (monotonicity @x2727 (= $x1190 (or (or $x1169 $x1175) $x1185))) (rewrite (= (or (or $x1169 $x1175) $x1185) (or $x1169 $x1175 $x1185))) (= $x1190 (or $x1169 $x1175 $x1185)))))
(let ((@x2933 (monotonicity (quant-intro @x2735 (= $x1193 $x2736)) (quant-intro @x2741 (= $x1199 $x2742)) @x2930 (= $x2301 (and $x1774 $x1779 $x256 $x1214 $x1209 $x266 $x2736 $x2742 $x2928)))))
(let ((@x2659 (monotonicity (rewrite (= $x1134 (not (or $x1099 $x922)))) (= $x1137 (not (not (or $x1099 $x922)))))))
(let ((@x2663 (trans @x2659 (rewrite (= (not (not (or $x1099 $x922))) (or $x1099 $x922))) (= $x1137 (or $x1099 $x922)))))
(let ((@x2671 (trans (monotonicity @x2663 (= $x1143 (or (or $x1099 $x922) $x1140))) (rewrite (= (or (or $x1099 $x922) $x1140) (or $x1099 $x922 $x1140))) (= $x1143 (or $x1099 $x922 $x1140)))))
(let ((@x2677 (monotonicity (quant-intro @x2671 (= $x1146 $x2672)) (= $x1752 (and $x2672 $x1749)))))
(let ((@x2637 (monotonicity (rewrite (= (and (not $x1724) (not $x1730)) (not (or $x1724 $x1730)))) (= $x1733 (not (not (or $x1724 $x1730)))))))
(let ((@x2641 (trans @x2637 (rewrite (= (not (not (or $x1724 $x1730))) (or $x1724 $x1730))) (= $x1733 (or $x1724 $x1730)))))
(let ((@x2649 (trans (monotonicity @x2641 (= $x2212 (or (or $x1724 $x1730) $x2209))) (rewrite (= (or (or $x1724 $x1730) $x2209) $x2645)) (= $x2212 $x2645))))
(let ((@x2687 (monotonicity (monotonicity @x2649 (= $x2215 $x2650)) (trans @x2677 (rewrite (= (and $x2672 $x1749) $x2680)) (= $x1752 $x2680)) (= $x2218 $x2685))))
(let ((@x2610 (monotonicity (rewrite (= $x1103 (not (or $x127 $x1099)))) (= $x1106 (not (not (or $x127 $x1099)))))))
(let ((@x2614 (trans @x2610 (rewrite (= (not (not (or $x127 $x1099))) (or $x127 $x1099))) (= $x1106 (or $x127 $x1099)))))
(let ((@x2622 (monotonicity @x2614 (rewrite (= (and (not $x2176) $x2192) $x2617)) (= (or $x1106 (and (not $x2176) $x2192)) (or (or $x127 $x1099) $x2617)))))
(let ((@x2627 (trans @x2622 (rewrite (= (or (or $x127 $x1099) $x2617) $x2623)) (= (or $x1106 (and (not $x2176) $x2192)) $x2623))))
(let ((@x2690 (monotonicity (quant-intro @x2627 (= $x2203 $x2628)) @x2687 (= $x2221 (and $x2628 $x2685)))))
(let (($x2151 (and (not (>= (+ ?x230 ?x1662) 0)) $x2148)))
(let (($x2154 (not $x2151)))
(let ((@x2586 (monotonicity (rewrite (= $x2151 (not $x2580))) (= $x2154 (not (not $x2580))))))
(let ((@x2593 (quant-intro (trans @x2586 (rewrite (= (not (not $x2580)) $x2580)) (= $x2154 $x2580)) (= $x2157 $x2591))))
(let ((@x2603 (trans (monotonicity @x2593 (= $x2163 (and $x1660 $x1665 $x2591))) (rewrite (= (and $x1660 $x1665 $x2591) $x2599)) (= $x2163 $x2599))))
(let ((@x2701 (monotonicity @x2603 (trans @x2690 (rewrite (= (and $x2628 $x2685) $x2694)) (= $x2221 $x2694)) (= $x2224 $x2699))))
(let ((@x2571 (monotonicity (rewrite (= $x1077 (not (or $x178 $x1002)))) (= (not $x1077) (not (not (or $x178 $x1002)))))))
(let ((@x2575 (trans @x2571 (rewrite (= (not (not (or $x178 $x1002))) (or $x178 $x1002))) (= (not $x1077) (or $x178 $x1002)))))
(let ((@x2704 (monotonicity (quant-intro @x2575 (= $x1641 $x2576)) @x2701 (= $x2230 (and $x2576 $x212 $x215 $x217 $x220 $x2699)))))
(let ((@x2716 (trans @x2704 (rewrite (= (and $x2576 $x212 $x215 $x217 $x220 $x2699) $x2712)) (= $x2230 $x2712))))
(let ((?x1613 (?v1!7 ?0)))
(let (($x1618 (fun_app$ v_b_Visited_G_1$ ?x1613)))
(let (($x2134 (and (not $x2113) $x1618 $x2129)))
(let (($x2137 (or $x1009 $x2134)))
(let ((@x2543 (monotonicity (rewrite (= $x1006 (not (or $x127 $x1002)))) (= $x1009 (not (not (or $x127 $x1002)))))))
(let ((@x2547 (trans @x2543 (rewrite (= (not (not (or $x127 $x1002))) (or $x127 $x1002))) (= $x1009 (or $x127 $x1002)))))
(let ((@x2556 (monotonicity @x2547 (rewrite (= $x2134 $x2551)) (= $x2137 (or (or $x127 $x1002) $x2551)))))
(let ((@x2561 (trans @x2556 (rewrite (= (or (or $x127 $x1002) $x2551) $x2557)) (= $x2137 $x2557))))
(let ((@x2521 (monotonicity (rewrite (= $x983 (not (or $x179 $x922)))) (= $x986 (not (not (or $x179 $x922)))))))
(let ((@x2525 (trans @x2521 (rewrite (= (not (not (or $x179 $x922))) (or $x179 $x922))) (= $x986 (or $x179 $x922)))))
(let ((@x2533 (trans (monotonicity @x2525 (= $x994 (or (or $x179 $x922) $x990))) (rewrite (= (or (or $x179 $x922) $x990) (or $x179 $x922 $x990))) (= $x994 (or $x179 $x922 $x990)))))
(let ((@x2509 (rewrite (= (or (or $x178 (not $x180)) $x1015) (or $x178 (not $x180) $x1015)))))
(let ((@x2501 (rewrite (= (not (not (or $x178 (not $x180)))) (or $x178 (not $x180))))))
(let ((@x2499 (monotonicity (rewrite (= $x181 (not (or $x178 (not $x180))))) (= $x403 (not (not (or $x178 (not $x180))))))))
(let ((@x2506 (monotonicity (trans @x2499 @x2501 (= $x403 (or $x178 (not $x180)))) (= $x1042 (or (or $x178 (not $x180)) $x1015)))))
(let ((@x2514 (quant-intro (trans @x2506 @x2509 (= $x1042 (or $x178 (not $x180) $x1015))) (= $x1045 $x2512))))
(let ((?x1578 (?v1!6 ?0)))
(let (($x1583 (v_b_Visited_G_0$ ?x1578)))
(let (($x2096 (and (not $x2075) $x1583 $x2091)))
(let (($x2099 (or $x954 $x2096)))
(let ((@x2470 (monotonicity (rewrite (= $x951 (not (or $x127 $x947)))) (= $x954 (not (not (or $x127 $x947)))))))
(let ((@x2474 (trans @x2470 (rewrite (= (not (not (or $x127 $x947))) (or $x127 $x947))) (= $x954 (or $x127 $x947)))))
(let ((@x2483 (monotonicity @x2474 (rewrite (= $x2096 $x2478)) (= $x2099 (or (or $x127 $x947) $x2478)))))
(let ((@x2488 (trans @x2483 (rewrite (= (or (or $x127 $x947) $x2478) $x2484)) (= $x2099 $x2484))))
(let ((@x2950 (monotonicity (quant-intro @x2488 (= $x2102 $x2489)) @x2514 (quant-intro @x2533 (= $x997 $x2534)) (quant-intro @x2561 (= $x2140 $x2562)) (monotonicity @x2716 (trans @x2933 @x2942 (= $x2301 $x2940)) (= $x2306 $x2945)) (= $x2315 (and $x2489 $x173 $x1051 $x2512 $x2534 $x2562 $x2945)))))
(let ((@x2963 (trans @x2950 (rewrite (= (and $x2489 $x173 $x1051 $x2512 $x2534 $x2562 $x2945) $x2959)) (= $x2315 $x2959))))
(let (($x1554 (and (not (>= (+ ?x128 ?x1541) 0)) $x136 (= (+ ?x128 ?x1541 (b_G$ (pair$ ?0 ?v0!5))) 0))))
(let (($x1564 (not $x1554)))
(let ((@x2446 (monotonicity (rewrite (= $x1554 (not $x2440))) (= $x1564 (not (not $x2440))))))
(let ((@x2453 (quant-intro (trans @x2446 (rewrite (= (not (not $x2440)) $x2440)) (= $x1564 $x2440)) (= $x1567 $x2451))))
(let ((@x2463 (trans (monotonicity @x2453 (= $x2062 (and $x1539 $x1544 $x2451))) (rewrite (= (and $x1539 $x1544 $x2451) $x2459)) (= $x2062 $x2459))))
(let ((@x2423 (monotonicity (rewrite (= $x926 (not (or $x137 $x922)))) (= $x929 (not (not (or $x137 $x922)))))))
(let ((@x2427 (trans @x2423 (rewrite (= (not (not (or $x137 $x922))) (or $x137 $x922))) (= $x929 (or $x137 $x922)))))
(let ((@x2435 (trans (monotonicity @x2427 (= $x936 (or (or $x137 $x922) $x933))) (rewrite (= (or (or $x137 $x922) $x933) (or $x137 $x922 $x933))) (= $x936 (or $x137 $x922 $x933)))))
(let ((@x2969 (monotonicity (quant-intro @x2435 (= $x939 $x2436)) (monotonicity @x2463 @x2963 (= $x2320 $x2964)) (= $x2323 (and $x2436 $x2964)))))
(let ((@x2401 (monotonicity (rewrite (= (and $x1512 (not $x1517)) (not (or $x2394 $x1517)))) (= $x1520 (not (not (or $x2394 $x1517)))))))
(let ((@x2405 (trans @x2401 (rewrite (= (not (not (or $x2394 $x1517))) (or $x2394 $x1517))) (= $x1520 (or $x2394 $x1517)))))
(let ((@x2413 (trans (monotonicity @x2405 (= $x2051 (or (or $x2394 $x1517) $x2048))) (rewrite (= (or (or $x2394 $x1517) $x2048) $x2409)) (= $x2051 $x2409))))
(let ((@x2980 (monotonicity (monotonicity @x2413 (= $x2054 $x2414)) (trans @x2969 (rewrite (= (and $x2436 $x2964) $x2973)) (= $x2323 $x2973)) (= $x2326 $x2978))))
(let ((@x2388 (rewrite (= (or (or $x136 (not $x148)) $x907) (or $x136 (not $x148) $x907)))))
(let ((@x2380 (rewrite (= (not (not (or $x136 (not $x148)))) (or $x136 (not $x148))))))
(let ((@x2378 (monotonicity (rewrite (= $x149 (not (or $x136 (not $x148))))) (= $x382 (not (not (or $x136 (not $x148))))))))
(let ((@x2385 (monotonicity (trans @x2378 @x2380 (= $x382 (or $x136 (not $x148)))) (= $x911 (or (or $x136 (not $x148)) $x907)))))
(let ((@x2393 (quant-intro (trans @x2385 @x2388 (= $x911 (or $x136 (not $x148) $x907))) (= $x914 $x2391))))
(let ((@x2991 (trans (monotonicity @x2393 @x2980 (= $x2329 (and $x2391 $x2978))) (rewrite (= (and $x2391 $x2978) $x2987)) (= $x2329 $x2987))))
(let ((@x2355 (monotonicity (rewrite (= (and (not $x1489) $x1491) (not (or $x1489 $x2348)))) (= $x1493 (not (not (or $x1489 $x2348)))))))
(let ((@x2359 (trans @x2355 (rewrite (= (not (not (or $x1489 $x2348))) (or $x1489 $x2348))) (= $x1493 (or $x1489 $x2348)))))
(let ((@x2367 (trans (monotonicity @x2359 (= $x1499 (or (or $x1489 $x2348) $x1498))) (rewrite (= (or (or $x1489 $x2348) $x1498) $x2363)) (= $x1499 $x2363))))
(let ((@x2994 (monotonicity (monotonicity @x2367 (= $x1500 $x2368)) @x2991 (= $x2332 $x2992))))
(let ((@x3004 (trans (monotonicity @x2994 (= $x2335 (and $x899 $x2992))) (rewrite (= (and $x899 $x2992) $x3000)) (= $x2335 $x3000))))
(let ((@x3010 (monotonicity (monotonicity @x3004 (= $x2338 $x3005)) (= $x2341 (and $x145 $x3005)))))
(let ((@x3020 (monotonicity (trans @x3010 (rewrite (= (and $x145 $x3005) $x3013)) (= $x2341 $x3013)) (= $x2344 $x3018))))
(let (($x1938 (forall ((?v1 B_Vertex$) )(! (let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1925 (and (not (>= (+ ?x273 ?x1912) 0)) $x291 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x273 ?x1912) 0))))
(not $x1925)))))) :qid k!42))
))
(let (($x1932 (not (not (and $x1910 $x1915)))))
(let (($x1942 (and $x1932 $x1938)))
(let (($x1947 (and $x1289 $x1942)))
(let (($x1951 (or $x1898 $x1947)))
(let (($x1955 (and $x1270 $x1951)))
(let (($x1959 (or $x1871 $x1955)))
(let (($x1963 (and $x1256 $x1959)))
(let (($x1967 (or $x1848 $x1963)))
(let (($x1842 (not $x773)))
(let (($x1971 (and $x1842 $x1967)))
(let (($x1975 (or $x773 $x1971)))
(let (($x1979 (and $x652 $x1975)))
(let (($x1983 (or $x1830 $x1979)))
(let (($x1987 (and $x1247 $x1983)))
(let (($x1991 (or $x1813 $x1987)))
(let (($x1801 (and (and $x1774 $x1779) $x256 $x1214 $x1209 $x266 $x1193 $x1199)))
(let (($x1995 (and $x1801 $x1991)))
(let (($x1739 (not (or $x1733 (>= (+ ?x1727 ?x1721 ?x1735) 0)))))
(let (($x1756 (or $x1739 $x1752)))
(let (($x1713 (forall ((?v0 B_Vertex$) )(! (let ((?x230 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x1097 (* (- 1) ?x230)))
(let ((?x1699 (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))))
(let ((?x1704 (b_G$ (pair$ (?v1!9 ?v0) ?v0))))
(let (($x1706 (= (+ ?x1704 ?x1699 ?x1097) 0)))
(let (($x1707 (and (not (>= (+ ?x1699 ?x1097) 0)) $x1706)))
(let (($x1099 (<= (+ b_Infinity$ ?x1097) 0)))
(let (($x1100 (not $x1099)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1103 (and $x132 $x1100)))
(let (($x1106 (not $x1103)))
(or $x1106 $x1707))))))))))))) :qid k!42))
))
(let (($x1760 (and $x1713 $x1756)))
(let (($x1687 (forall ((?v1 B_Vertex$) )(! (let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x1675 (and (not (>= (+ ?x230 ?x1662) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x230 ?x1662) 0))))
(not $x1675))))) :qid k!42))
))
(let (($x1681 (not (not (and $x1660 $x1665)))))
(let (($x1691 (and $x1681 $x1687)))
(let (($x1764 (or $x1691 $x1760)))
(let (($x1652 (and $x1641 $x212 $x215 $x217 $x220)))
(let (($x1768 (and $x1652 $x1764)))
(let (($x1999 (or $x1768 $x1995)))
(let (($x1629 (forall ((?v0 B_Vertex$) )(! (let ((?x174 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x1000 (* (- 1) ?x174)))
(let ((?x1613 (?v1!7 ?v0)))
(let ((?x1614 (fun_app$c v_b_SP_G_1$ ?x1613)))
(let ((?x1620 (b_G$ (pair$ ?x1613 ?v0))))
(let (($x1622 (= (+ ?x1620 ?x1614 ?x1000) 0)))
(let (($x1618 (fun_app$ v_b_Visited_G_1$ ?x1613)))
(let (($x1623 (and (not (>= (+ ?x1614 ?x1000) 0)) $x1618 $x1622)))
(let (($x1002 (<= (+ b_Infinity$ ?x1000) 0)))
(let (($x1003 (not $x1002)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x1006 (and $x132 $x1003)))
(let (($x1009 (not $x1006)))
(or $x1009 $x1623))))))))))))))) :qid k!42))
))
(let (($x1594 (forall ((?v0 B_Vertex$) )(! (let ((?x1585 (b_G$ (pair$ (?v1!6 ?v0) ?v0))))
(let ((?x128 (v_b_SP_G_0$ ?v0)))
(let ((?x945 (* (- 1) ?x128)))
(let ((?x1578 (?v1!6 ?v0)))
(let ((?x1579 (v_b_SP_G_0$ ?x1578)))
(let (($x1587 (= (+ ?x1579 ?x945 ?x1585) 0)))
(let (($x1583 (v_b_Visited_G_0$ ?x1578)))
(let (($x1588 (and (not (>= (+ ?x1579 ?x945) 0)) $x1583 $x1587)))
(let (($x127 (= ?v0 b_Source$)))
(let (($x132 (not $x127)))
(let (($x951 (and $x132 (not (<= (+ b_Infinity$ ?x945) 0)))))
(let (($x954 (not $x951)))
(or $x954 $x1588))))))))))))) :qid k!42))
))
(let (($x1632 (and $x1594 $x173 $x1051 $x1045 $x997 $x1629)))
(let (($x2003 (and $x1632 $x1999)))
(let (($x1561 (not (not (and $x1539 $x1544)))))
(let (($x1571 (and $x1561 $x1567)))
(let (($x2007 (or $x1571 $x2003)))
(let (($x2011 (and $x939 $x2007)))
(let (($x1527 (not (or $x1520 (>= (+ ?x1521 ?x1523 ?x1514) 0)))))
(let (($x2015 (or $x1527 $x2011)))
(let (($x2019 (and $x914 $x2015)))
(let (($x2023 (or $x1500 $x2019)))
(let (($x2027 (and $x899 $x2023)))
(let (($x2031 (or $x1477 $x2027)))
(let (($x1471 (not $x869)))
(let (($x2035 (and $x1471 $x2031)))
(let (($x2039 (or $x869 $x2035)))
(let (($x1925 (and (not (>= (+ ?x273 (* (- 1) ?x1911)) 0)) $x291 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x273 (* (- 1) ?x1911)) 0))))
(let (($x1935 (not $x1925)))
(let (($x2243 (= (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x273 (* (- 1) ?x1911)) 0) $x2242)))
(let (($x2240 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x273 (* (- 1) ?x1911)) (+ ?x273 (* (- 1) ?x1911) (b_G$ (pair$ ?0 ?v0!20))))))
(let ((@x2250 (monotonicity (monotonicity (monotonicity (rewrite $x2240) $x2243) (= $x1925 $x2245)) (= $x1935 $x2248))))
(let ((@x2256 (monotonicity (rewrite (= $x1932 (and $x1910 $x1915))) (quant-intro @x2250 (= $x1938 $x2251)) (= $x1942 (and (and $x1910 $x1915) $x2251)))))
(let ((@x2264 (trans (monotonicity @x2256 (= $x1947 (and $x1289 (and (and $x1910 $x1915) $x2251)))) (rewrite (= (and $x1289 (and (and $x1910 $x1915) $x2251)) $x2260)) (= $x1947 $x2260))))
(let ((@x2273 (monotonicity (monotonicity (monotonicity @x2264 (= $x1951 $x2265)) (= $x1955 $x2268)) (= $x1959 $x2271))))
(let ((@x2282 (monotonicity (rewrite (= $x1842 $x297)) (monotonicity (monotonicity @x2273 (= $x1963 $x2274)) (= $x1967 $x2277)) (= $x1971 $x2280))))
(let ((@x2291 (monotonicity (monotonicity (monotonicity @x2282 (= $x1975 $x2283)) (= $x1979 $x2286)) (= $x1983 $x2289))))
(let ((@x2300 (monotonicity (monotonicity (monotonicity @x2291 (= $x1987 $x2292)) (= $x1991 $x2295)) (= $x1995 (and $x1801 $x2295)))))
(let ((@x2211 (monotonicity (rewrite (= (+ ?x1727 ?x1721 ?x1735) ?x2206)) (= (>= (+ ?x1727 ?x1721 ?x1735) 0) $x2209))))
(let ((@x2214 (monotonicity @x2211 (= (or $x1733 (>= (+ ?x1727 ?x1721 ?x1735) 0)) $x2212))))
(let (($x2197 (and (not $x2176) $x2192)))
(let (($x2200 (or $x1106 $x2197)))
(let ((?x1097 (* (- 1) ?x230)))
(let ((?x1699 (fun_app$c v_b_SP_G_3$ (?v1!9 ?0))))
(let ((?x1704 (b_G$ (pair$ (?v1!9 ?0) ?0))))
(let (($x1706 (= (+ ?x1704 ?x1699 ?x1097) 0)))
(let (($x1707 (and (not (>= (+ ?x1699 ?x1097) 0)) $x1706)))
(let (($x1710 (or $x1106 $x1707)))
(let ((@x2189 (monotonicity (rewrite (= (+ ?x1704 ?x1699 ?x1097) (+ ?x1097 ?x1699 ?x1704))) (= $x1706 (= (+ ?x1097 ?x1699 ?x1704) 0)))))
(let ((@x2196 (trans @x2189 (rewrite (= (= (+ ?x1097 ?x1699 ?x1704) 0) $x2192)) (= $x1706 $x2192))))
(let ((@x2173 (monotonicity (rewrite (= (+ ?x1699 ?x1097) (+ ?x1097 ?x1699))) (= (>= (+ ?x1699 ?x1097) 0) (>= (+ ?x1097 ?x1699) 0)))))
(let ((@x2180 (trans @x2173 (rewrite (= (>= (+ ?x1097 ?x1699) 0) $x2176)) (= (>= (+ ?x1699 ?x1097) 0) $x2176))))
(let ((@x2199 (monotonicity (monotonicity @x2180 (= (not (>= (+ ?x1699 ?x1097) 0)) (not $x2176))) @x2196 (= $x1707 $x2197))))
(let ((@x2223 (monotonicity (quant-intro (monotonicity @x2199 (= $x1710 $x2200)) (= $x1713 $x2203)) (monotonicity (monotonicity @x2214 (= $x1739 $x2215)) (= $x1756 $x2218)) (= $x1760 $x2221))))
(let (($x1675 (and (not (>= (+ ?x230 ?x1662) 0)) (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x230 ?x1662) 0))))
(let (($x1684 (not $x1675)))
(let (($x2146 (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x230 ?x1662) (+ ?x230 ?x1662 (b_G$ (pair$ ?0 ?v0!8))))))
(let ((@x2150 (monotonicity (rewrite $x2146) (= (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x230 ?x1662) 0) $x2148))))
(let ((@x2159 (quant-intro (monotonicity (monotonicity @x2150 (= $x1675 $x2151)) (= $x1684 $x2154)) (= $x1687 $x2157))))
(let ((@x2162 (monotonicity (rewrite (= $x1681 (and $x1660 $x1665))) @x2159 (= $x1691 (and (and $x1660 $x1665) $x2157)))))
(let ((@x2167 (trans @x2162 (rewrite (= (and (and $x1660 $x1665) $x2157) $x2163)) (= $x1691 $x2163))))
(let ((@x2229 (monotonicity (monotonicity @x2167 @x2223 (= $x1764 $x2224)) (= $x1768 (and $x1652 $x2224)))))
(let ((@x2308 (monotonicity (trans @x2229 (rewrite (= (and $x1652 $x2224) $x2230)) (= $x1768 $x2230)) (trans @x2300 (rewrite (= (and $x1801 $x2295) $x2301)) (= $x1995 $x2301)) (= $x1999 $x2306))))
(let ((?x1000 (* (- 1) ?x174)))
(let ((?x1614 (fun_app$c v_b_SP_G_1$ ?x1613)))
(let ((?x1620 (b_G$ (pair$ ?x1613 ?0))))
(let (($x1622 (= (+ ?x1620 ?x1614 ?x1000) 0)))
(let (($x1623 (and (not (>= (+ ?x1614 ?x1000) 0)) $x1618 $x1622)))
(let (($x1626 (or $x1009 $x1623)))
(let ((@x2126 (monotonicity (rewrite (= (+ ?x1620 ?x1614 ?x1000) (+ ?x1000 ?x1614 ?x1620))) (= $x1622 (= (+ ?x1000 ?x1614 ?x1620) 0)))))
(let ((@x2133 (trans @x2126 (rewrite (= (= (+ ?x1000 ?x1614 ?x1620) 0) $x2129)) (= $x1622 $x2129))))
(let ((@x2110 (monotonicity (rewrite (= (+ ?x1614 ?x1000) (+ ?x1000 ?x1614))) (= (>= (+ ?x1614 ?x1000) 0) (>= (+ ?x1000 ?x1614) 0)))))
(let ((@x2117 (trans @x2110 (rewrite (= (>= (+ ?x1000 ?x1614) 0) $x2113)) (= (>= (+ ?x1614 ?x1000) 0) $x2113))))
(let ((@x2136 (monotonicity (monotonicity @x2117 (= (not (>= (+ ?x1614 ?x1000) 0)) (not $x2113))) @x2133 (= $x1623 $x2134))))
(let (($x1587 (= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128) (b_G$ (pair$ ?x1578 ?0))) 0)))
(let (($x1588 (and (not (>= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128)) 0)) $x1583 $x1587)))
(let (($x1591 (or $x954 $x1588)))
(let (($x2086 (= (+ (* (- 1) ?x128) (v_b_SP_G_0$ ?x1578) (b_G$ (pair$ ?x1578 ?0))) 0)))
(let (($x2084 (= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128) (b_G$ (pair$ ?x1578 ?0))) (+ (* (- 1) ?x128) (v_b_SP_G_0$ ?x1578) (b_G$ (pair$ ?x1578 ?0))))))
(let ((@x2095 (trans (monotonicity (rewrite $x2084) (= $x1587 $x2086)) (rewrite (= $x2086 $x2091)) (= $x1587 $x2091))))
(let (($x2081 (= (not (>= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128)) 0)) (not $x2075))))
(let (($x1581 (>= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128)) 0)))
(let (($x2068 (= (+ (v_b_SP_G_0$ ?x1578) (* (- 1) ?x128)) (+ (* (- 1) ?x128) (v_b_SP_G_0$ ?x1578)))))
(let ((@x2072 (monotonicity (rewrite $x2068) (= $x1581 (>= (+ (* (- 1) ?x128) (v_b_SP_G_0$ ?x1578)) 0)))))
(let ((@x2079 (trans @x2072 (rewrite (= (>= (+ (* (- 1) ?x128) (v_b_SP_G_0$ ?x1578)) 0) $x2075)) (= $x1581 $x2075))))
(let ((@x2101 (monotonicity (monotonicity (monotonicity @x2079 $x2081) @x2095 (= $x1588 $x2096)) (= $x1591 $x2099))))
(let ((@x2311 (monotonicity (quant-intro @x2101 (= $x1594 $x2102)) (quant-intro (monotonicity @x2136 (= $x1626 $x2137)) (= $x1629 $x2140)) (= $x1632 (and $x2102 $x173 $x1051 $x1045 $x997 $x2140)))))
(let ((@x2314 (monotonicity @x2311 @x2308 (= $x2003 (and (and $x2102 $x173 $x1051 $x1045 $x997 $x2140) $x2306)))))
(let ((@x2319 (trans @x2314 (rewrite (= (and (and $x2102 $x173 $x1051 $x1045 $x997 $x2140) $x2306) $x2315)) (= $x2003 $x2315))))
(let ((@x2061 (monotonicity (rewrite (= $x1561 (and $x1539 $x1544))) (= $x1571 (and (and $x1539 $x1544) $x1567)))))
(let ((@x2066 (trans @x2061 (rewrite (= (and (and $x1539 $x1544) $x1567) $x2062)) (= $x1571 $x2062))))
(let ((@x2325 (monotonicity (monotonicity @x2066 @x2319 (= $x2007 $x2320)) (= $x2011 $x2323))))
(let ((@x2050 (monotonicity (rewrite (= (+ ?x1521 ?x1523 ?x1514) ?x2045)) (= (>= (+ ?x1521 ?x1523 ?x1514) 0) $x2048))))
(let ((@x2053 (monotonicity @x2050 (= (or $x1520 (>= (+ ?x1521 ?x1523 ?x1514) 0)) $x2051))))
(let ((@x2328 (monotonicity (monotonicity @x2053 (= $x1527 $x2054)) @x2325 (= $x2015 $x2326))))
(let ((@x2337 (monotonicity (monotonicity (monotonicity @x2328 (= $x2019 $x2329)) (= $x2023 $x2332)) (= $x2027 $x2335))))
(let ((@x2343 (monotonicity (rewrite (= $x1471 $x145)) (monotonicity @x2337 (= $x2031 $x2338)) (= $x2035 $x2341))))
(let (($x1926 (exists ((?v1 B_Vertex$) )(! (let ((?x1911 (v_b_SP_G_2$ ?v0!20)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x273 (v_b_SP_G_2$ ?v1)))
(let (($x291 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (not (>= (+ ?x273 ?x1912) 0)) $x291 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x273 ?x1912) 0)))))) :qid k!42))
))
(let ((@x1944 (nnf-neg (refl (~ $x1932 $x1932)) (nnf-neg (refl (~ $x1935 $x1935)) (~ (not $x1926) $x1938)) (~ (not (or (not (and $x1910 $x1915)) $x1926)) $x1942))))
(let ((@x1946 (trans (sk (~ (not $x1329) (not (or (not (and $x1910 $x1915)) $x1926)))) @x1944 (~ (not $x1329) $x1942))))
(let ((@x1907 (nnf-neg (nnf-pos (refl (~ $x1286 $x1286)) (~ $x1289 $x1289)) (~ (not $x1292) $x1289))))
(let ((@x1954 (nnf-neg (sk (~ $x1292 $x1898)) (nnf-neg @x1907 @x1946 (~ (not $x1332) $x1947)) (~ (not $x1335) $x1951))))
(let ((@x1880 (nnf-neg (nnf-pos (refl (~ $x1267 $x1267)) (~ $x1270 $x1270)) (~ (not $x1273) $x1270))))
(let ((@x1962 (nnf-neg (sk (~ $x1273 $x1871)) (nnf-neg @x1880 @x1954 (~ (not $x1338) $x1955)) (~ (not $x1341) $x1959))))
(let ((@x1857 (nnf-neg (nnf-pos (refl (~ (>= ?x273 0) (>= ?x273 0))) (~ $x1256 $x1256)) (~ (not $x1259) $x1256))))
(let ((@x1970 (nnf-neg (sk (~ $x1259 $x1848)) (nnf-neg @x1857 @x1962 (~ (not $x1344) $x1963)) (~ (not $x1347) $x1967))))
(let ((@x1978 (nnf-neg (refl (~ $x773 $x773)) (nnf-neg (refl (~ $x1842 $x1842)) @x1970 (~ (not $x1350) $x1971)) (~ (not $x1353) $x1975))))
(let ((@x1839 (nnf-neg (nnf-pos (refl (~ (or $x300 $x278) (or $x300 $x278))) (~ $x652 $x652)) (~ (not $x785) $x652))))
(let ((@x1986 (nnf-neg (sk (~ $x785 $x1830)) (nnf-neg @x1839 @x1978 (~ (not $x1356) $x1979)) (~ (not $x1359) $x1983))))
(let ((@x1822 (nnf-neg (nnf-pos (refl (~ $x1243 $x1243)) (~ $x1247 $x1247)) (~ (not $x1250) $x1247))))
(let ((@x1994 (nnf-neg (sk (~ $x1250 $x1813)) (nnf-neg @x1822 @x1986 (~ (not $x1362) $x1987)) (~ (not $x1365) $x1991))))
(let ((@x1803 (monotonicity (sk (~ $x1080 (and $x1774 $x1779))) (refl (~ $x256 $x256)) (refl (~ $x1214 $x1214)) (nnf-pos (refl (~ $x1206 $x1206)) (~ $x1209 $x1209)) (refl (~ $x266 $x266)) (nnf-pos (refl (~ $x1190 $x1190)) (~ $x1193 $x1193)) (nnf-pos (refl (~ $x1196 $x1196)) (~ $x1199 $x1199)) (~ $x1235 $x1801))))
(let ((@x1998 (nnf-neg (nnf-neg @x1803 (~ (not $x1240) $x1801)) @x1994 (~ (not $x1368) $x1995))))
(let ((@x1748 (nnf-neg (nnf-pos (refl (~ $x1143 $x1143)) (~ $x1146 $x1146)) (~ (not $x1149) $x1146))))
(let ((@x1759 (nnf-neg (sk (~ $x1149 $x1739)) (nnf-neg @x1748 (refl (~ $x1749 $x1749)) (~ (not $x1152) $x1752)) (~ (not $x1155) $x1756))))
(let ((@x1715 (nnf-pos (monotonicity (refl (~ $x1106 $x1106)) (sk (~ $x1122 $x1707)) (~ $x1125 $x1710)) (~ $x1128 $x1713))))
(let ((@x1763 (nnf-neg (nnf-neg @x1715 (~ (not $x1131) $x1713)) @x1759 (~ (not $x1158) $x1760))))
(let (($x1676 (exists ((?v1 B_Vertex$) )(! (let ((?x1661 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1662 (* (- 1) ?x1661)))
(let ((?x230 (fun_app$c v_b_SP_G_3$ ?v1)))
(and (not (>= (+ ?x230 ?x1662) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x230 ?x1662) 0))))) :qid k!42))
))
(let ((@x1693 (nnf-neg (refl (~ $x1681 $x1681)) (nnf-neg (refl (~ $x1684 $x1684)) (~ (not $x1676) $x1687)) (~ (not (or (not (and $x1660 $x1665)) $x1676)) $x1691))))
(let ((@x1695 (trans (sk (~ $x1131 (not (or (not (and $x1660 $x1665)) $x1676)))) @x1693 (~ $x1131 $x1691))))
(let ((@x1654 (monotonicity (nnf-neg (refl (~ (not $x1077) (not $x1077))) (~ $x1083 $x1641)) (refl (~ $x212 $x212)) (refl (~ $x215 $x215)) (refl (~ $x217 $x217)) (refl (~ $x220 $x220)) (~ $x1089 $x1652))))
(let ((@x1771 (nnf-neg (nnf-neg @x1654 (~ (not $x1094) $x1652)) (nnf-neg @x1695 @x1763 (~ (not $x1161) $x1764)) (~ (not $x1164) $x1768))))
(let ((@x1631 (nnf-pos (monotonicity (refl (~ $x1009 $x1009)) (sk (~ $x1031 $x1623)) (~ $x1034 $x1626)) (~ $x1037 $x1629))))
(let ((@x1596 (nnf-pos (monotonicity (refl (~ $x954 $x954)) (sk (~ $x974 $x1588)) (~ $x977 $x1591)) (~ $x980 $x1594))))
(let ((@x1634 (monotonicity @x1596 (refl (~ $x173 $x173)) (nnf-pos (refl (~ (>= ?x174 0) (>= ?x174 0))) (~ $x1051 $x1051)) (nnf-pos (refl (~ $x1042 $x1042)) (~ $x1045 $x1045)) (nnf-pos (refl (~ $x994 $x994)) (~ $x997 $x997)) @x1631 (~ $x1069 $x1632))))
(let ((@x2006 (nnf-neg (nnf-neg @x1634 (~ (not $x1074) $x1632)) (nnf-neg @x1771 @x1998 (~ (not $x1371) $x1999)) (~ (not $x1374) $x2003))))
(let (($x1555 (exists ((?v1 B_Vertex$) )(! (let ((?x1540 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1541 (* (- 1) ?x1540)))
(let ((?x128 (v_b_SP_G_0$ ?v1)))
(let (($x136 (v_b_Visited_G_0$ ?v1)))
(and (not (>= (+ ?x128 ?x1541) 0)) $x136 (= (+ ?x128 ?x1541 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))) :qid k!42))
))
(let ((@x1573 (nnf-neg (refl (~ $x1561 $x1561)) (nnf-neg (refl (~ $x1564 $x1564)) (~ (not $x1555) $x1567)) (~ (not (or (not (and $x1539 $x1544)) $x1555)) $x1571))))
(let ((@x1575 (trans (sk (~ (not $x980) (not (or (not (and $x1539 $x1544)) $x1555)))) @x1573 (~ (not $x980) $x1571))))
(let ((@x1536 (nnf-neg (nnf-pos (refl (~ $x936 $x936)) (~ $x939 $x939)) (~ (not $x942) $x939))))
(let ((@x2014 (nnf-neg @x1536 (nnf-neg @x1575 @x2006 (~ (not $x1377) $x2007)) (~ (not $x1380) $x2011))))
(let ((@x1509 (nnf-neg (nnf-pos (refl (~ $x911 $x911)) (~ $x914 $x914)) (~ (not $x917) $x914))))
(let ((@x2022 (nnf-neg @x1509 (nnf-neg (sk (~ $x942 $x1527)) @x2014 (~ (not $x1383) $x2015)) (~ (not $x1386) $x2019))))
(let ((@x1486 (nnf-neg (nnf-pos (refl (~ (>= ?x128 0) (>= ?x128 0))) (~ $x899 $x899)) (~ (not $x902) $x899))))
(let ((@x2030 (nnf-neg @x1486 (nnf-neg (sk (~ $x917 $x1500)) @x2022 (~ (not $x1389) $x2023)) (~ (not $x1392) $x2027))))
(let ((@x2038 (nnf-neg (refl (~ $x1471 $x1471)) (nnf-neg (sk (~ $x902 $x1477)) @x2030 (~ (not $x1395) $x2031)) (~ (not $x1398) $x2035))))
(let ((@x2042 (mp~ (not-or-elim (mp (asserted $x349) @x1411 $x1407) (not $x1401)) (nnf-neg (refl (~ $x869 $x869)) @x2038 (~ (not $x1401) $x2039)) $x2039)))
(let ((@x3878 (mp (mp (mp @x2042 (monotonicity @x2343 (= $x2039 $x2344)) $x2344) @x3020 $x3018) (monotonicity @x3874 (= $x3018 $x3875)) $x3875)))
(let ((@x4209 (unit-resolution @x3878 (lemma (unit-resolution @x5763 @x3492 (hypothesis $x869) false) $x145) $x3872)))
(let ((@x4211 (unit-resolution (def-axiom (or $x3866 $x1477 $x3860)) (unit-resolution (def-axiom (or $x3869 $x3863)) @x4209 $x3863) (lemma @x6353 $x1476) $x3860)))
(let ((@x6165 (unit-resolution ((_ quant-inst ?v0!2) (or (not $x3500) $x2348)) @x3505 (hypothesis $x1491) false)))
(let ((@x4215 (unit-resolution (def-axiom (or $x3854 $x2368 $x3848)) (unit-resolution (def-axiom (or $x2363 $x1491)) (lemma @x6165 $x2348) $x2363) (unit-resolution (def-axiom (or $x3857 $x3851)) @x4211 $x3851) $x3848)))
(let ((@x4217 (unit-resolution (def-axiom (or $x3842 $x2414 $x3836)) (unit-resolution (def-axiom (or $x3845 $x3839)) @x4215 $x3839) (unit-resolution (def-axiom (or $x2409 $x1512)) (lemma @x3073 $x2394) $x2409) $x3836)))
(let ((@x4219 (unit-resolution (def-axiom (or $x3830 $x3544 $x3824)) (unit-resolution (def-axiom (or $x3833 $x3827)) @x4217 $x3827) (lemma @x5735 $x3541) $x3824)))
(let ((@x5955 (unit-resolution (def-axiom (or $x3821 $x3556)) @x4219 $x3556)))
(let (($x4373 (or $x3561 $x3904)))
(let ((@x4363 ((_ quant-inst v_b_v_G_1$) $x4373)))
(let ((@x5049 (unit-resolution @x4363 @x5955 $x3904)))
(let ((?x5210 (pair$ v_b_v_G_1$ ?v0!15)))
(let ((?x5018 (b_G$ ?x5210)))
(let ((?x4456 (* (- 1) ?x1846)))
(let ((?x6267 (+ ?x257 ?x4456 ?x5018)))
(let (($x5853 (<= ?x6267 0)))
(let (($x6128 (= ?x6267 0)))
(let (($x6822 (>= (+ ?x257 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!15)) ?x5018) 0)))
(let (($x4911 (<= (+ b_Infinity$ (* (- 1) ?x5018)) 0)))
(let (($x6706 (or $x4911 $x6822)))
(let (($x6711 (not $x6706)))
(let ((@x5703 (hypothesis $x1848)))
(let (($x5745 (or (not (>= (+ ?x1846 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!15))) 0)) $x1847)))
(let ((?x4480 (fun_app$c v_b_SP_G_1$ ?v0!15)))
(let (($x5850 (>= ?x4480 0)))
(let ((@x5698 ((_ th-lemma arith farkas -1 1 1) @x5703 (hypothesis (>= (+ ?x1846 (* (- 1) ?x4480)) 0)) (unit-resolution ((_ quant-inst ?v0!15) (or $x3561 $x5850)) @x5955 $x5850) false)))
(let ((@x6183 (unit-resolution (lemma @x5698 $x5745) @x5703 (not (>= (+ ?x1846 (* (- 1) ?x4480)) 0)))))
(let ((@x6242 ((_ th-lemma arith triangle-eq) (or (not (= ?x1846 ?x4480)) (>= (+ ?x1846 (* (- 1) ?x4480)) 0)))))
(let ((@x4529 (unit-resolution (def-axiom (or $x3821 $x173)) @x4219 $x173)))
(let ((@x5142 (hypothesis $x3657)))
(let ((@x4265 (unit-resolution (def-axiom (or $x3654 $x217)) @x5142 $x217)))
(let ((?x5667 (fun_app$c v_b_SP_G_1$ ?v1!10)))
(let ((?x5152 (fun_app$c v_b_SP_G_1$ ?v0!11)))
(let ((?x5630 (* (- 1) ?x5152)))
(let (($x4072 (>= (+ ?x1727 ?x5630 ?x5667) 0)))
(let (($x5699 (fun_app$ v_b_Visited_G_1$ ?v1!10)))
(let (($x1725 (not $x1724)))
(let ((@x4170 (hypothesis $x2650)))
(let (($x4150 (>= (+ ?x1721 (* (- 1) ?x5667)) 0)))
(let ((@x4195 (monotonicity (symm (hypothesis $x217) (= v_b_SP_G_1$ v_b_SP_G_3$)) (= ?x5667 ?x1721))))
(let ((@x4203 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1721 ?x5667)) $x4150)) (symm @x4195 (= ?x1721 ?x5667)) $x4150)))
(let (($x4167 (or (not (<= (+ b_Infinity$ (* (- 1) ?x5667)) 0)) (not $x4150) $x1724)))
(let ((@x4163 ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x4150) (hypothesis (<= (+ b_Infinity$ (* (- 1) ?x5667)) 0)) (hypothesis $x1725) false)))
(let ((@x4204 (unit-resolution (lemma @x4163 $x4167) @x4203 (unit-resolution (def-axiom (or $x2645 $x1725)) @x4170 $x1725) (not (<= (+ b_Infinity$ (* (- 1) ?x5667)) 0)))))
(let (($x6045 (<= (+ b_Infinity$ (* (- 1) ?x5667)) 0)))
(let (($x5247 (or $x5699 $x6045)))
(let ((@x3048 (mp ((_ quant-inst ?v1!10) (or $x3595 $x5247)) (rewrite (= (or $x3595 $x5247) (or $x3595 $x5699 $x6045))) (or $x3595 $x5699 $x6045))))
(let ((@x4206 (unit-resolution (unit-resolution @x3048 (hypothesis $x3590) $x5247) @x4204 $x5699)))
(let ((@x4223 (unit-resolution (def-axiom (or $x3821 $x3573)) @x4219 $x3573)))
(let (($x5758 (not $x5699)))
(let (($x4064 (or $x3578 $x5758 $x1730 $x4072)))
(let (($x5845 (or $x5758 $x1730 (>= (+ ?x1727 ?x5667 ?x5630) 0))))
(let (($x4065 (or $x3578 $x5845)))
(let ((@x4061 (monotonicity (rewrite (= (+ ?x1727 ?x5667 ?x5630) (+ ?x1727 ?x5630 ?x5667))) (= (>= (+ ?x1727 ?x5667 ?x5630) 0) $x4072))))
(let ((@x4102 (monotonicity (monotonicity @x4061 (= $x5845 (or $x5758 $x1730 $x4072))) (= $x4065 (or $x3578 (or $x5758 $x1730 $x4072))))))
(let ((@x4106 (trans @x4102 (rewrite (= (or $x3578 (or $x5758 $x1730 $x4072)) $x4064)) (= $x4065 $x4064))))
(let ((@x4225 (unit-resolution (mp ((_ quant-inst ?v0!11 ?v1!10) $x4065) @x4106 $x4064) @x4223 (unit-resolution (def-axiom (or $x2645 (not $x1730))) @x4170 (not $x1730)) (or $x5758 $x4072))))
(let ((@x4228 (monotonicity (symm (hypothesis $x217) (= v_b_SP_G_1$ v_b_SP_G_3$)) (= ?x5152 ?x1734))))
(let ((@x4234 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1734 ?x5152)) (<= (+ ?x1734 ?x5630) 0))) (symm @x4228 (= ?x1734 ?x5152)) (<= (+ ?x1734 ?x5630) 0))))
(let ((@x4235 ((_ th-lemma arith farkas -1 -1 1 1) @x4234 (unit-resolution (def-axiom (or $x2645 (not $x2209))) @x4170 (not $x2209)) @x4203 (unit-resolution @x4225 @x4206 $x4072) false)))
(let ((@x4885 (unit-resolution (lemma @x4235 (or $x2645 $x3595 $x2708)) @x4265 (unit-resolution (def-axiom (or $x3654 $x3590)) @x5142 $x3590) $x2645)))
(let (($x4595 (<= (+ ?x1661 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!7 ?v0!8)))) 0)))
(let ((?x3922 (?v1!7 ?v0!8)))
(let ((?x3910 (fun_app$c v_b_SP_G_1$ ?x3922)))
(let ((?x3989 (* (- 1) ?x3910)))
(let ((?x3142 (fun_app$c v_b_SP_G_1$ ?v0!8)))
(let (($x3936 (<= (+ ?x3142 ?x3989) 0)))
(let (($x4266 (not $x3936)))
(let ((?x3945 (pair$ ?x3922 ?v0!8)))
(let ((?x3946 (b_G$ ?x3945)))
(let ((?x3031 (* (- 1) ?x3946)))
(let ((?x3056 (+ ?x3142 ?x3989 ?x3031)))
(let (($x3032 (= ?x3056 0)))
(let (($x3033 (not $x3032)))
(let (($x3034 (or $x3936 (not (fun_app$ v_b_Visited_G_1$ ?x3922)) $x3033)))
(let (($x3049 (not $x3034)))
(let ((@x3978 (hypothesis $x1665)))
(let ((?x3144 (* (- 1) ?x3142)))
(let ((?x3984 (+ ?x1661 ?x3144)))
(let (($x3969 (>= ?x3984 0)))
(let ((@x4544 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1661 ?x3142)) $x3969)) (monotonicity @x4265 (= ?x1661 ?x3142)) $x3969)))
(let ((@x3973 ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x3969) (hypothesis (<= (+ b_Infinity$ ?x3144) 0)) @x3978 false)))
(let ((@x4027 (lemma @x3973 (or (not (<= (+ b_Infinity$ ?x3144) 0)) (not $x3969) $x1664))))
(let ((@x4552 (unit-resolution @x4027 @x4544 @x3978 (not (<= (+ b_Infinity$ ?x3144) 0)))))
(let ((@x3425 (def-axiom (or $x3630 $x1749))))
(let ((@x4543 (unit-resolution @x3425 (trans (monotonicity @x4265 (= ?x245 ?x172)) @x4529 $x246) $x3630)))
(let ((@x3134 (def-axiom (or $x3639 $x2650 $x3633))))
(let ((@x3138 (def-axiom (or $x3642 $x3636))))
(let ((@x3120 (def-axiom (or $x3651 $x3611 $x3645))))
(let ((@x4905 (unit-resolution @x3120 (unit-resolution @x3138 (unit-resolution @x3134 @x4543 @x4885 $x3639) $x3642) (unit-resolution (def-axiom (or $x3654 $x3648)) @x5142 $x3648) $x3611)))
(let ((@x4545 (unit-resolution (def-axiom (or $x3821 $x3581)) @x4219 $x3581)))
(let (($x4738 (= (or $x3586 (or $x1659 (<= (+ b_Infinity$ ?x3144) 0) $x3049)) (or $x3586 $x1659 (<= (+ b_Infinity$ ?x3144) 0) $x3049))))
(let ((@x4737 ((_ quant-inst ?v0!8) (or $x3586 (or $x1659 (<= (+ b_Infinity$ ?x3144) 0) $x3049)))))
(let ((@x5209 (mp @x4737 (rewrite $x4738) (or $x3586 $x1659 (<= (+ b_Infinity$ ?x3144) 0) $x3049))))
(let ((@x4406 (unit-resolution @x5209 @x4545 (unit-resolution (def-axiom (or $x3608 $x1660)) @x4905 $x1660) @x4552 $x3049)))
(let ((?x3126 (fun_app$c v_b_SP_G_3$ ?x3922)))
(let ((?x4327 (+ ?x3126 ?x3989)))
(let (($x4402 (<= ?x4327 0)))
(let ((@x4541 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3126 ?x3910)) $x4402)) (monotonicity @x4265 (= ?x3126 ?x3910)) $x4402)))
(let ((@x4852 ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis $x3969) (hypothesis $x4595) (hypothesis $x4402) (hypothesis $x4266) false)))
(let ((@x4542 (unit-resolution (lemma @x4852 (or (not $x4595) (not $x3969) (not $x4402) $x3936)) @x4544 @x4541 (unit-resolution (def-axiom (or $x3034 $x4266)) @x4406 $x4266) (not $x4595))))
(let ((?x5182 (* (- 1) ?x3126)))
(let ((?x4179 (+ ?x1661 ?x5182 ?x3031)))
(let (($x5089 (= ?x4179 0)))
(let (($x3918 (>= ?x4179 0)))
(let (($x5284 (>= ?x3056 0)))
(let ((@x4264 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3033 $x5284)) (unit-resolution (def-axiom (or $x3034 $x3032)) @x4406 $x3032) $x5284)))
(let ((@x5267 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 1) (or $x3918 (not $x5284) (not $x3969) (not $x4402))) @x4264 @x4544 @x4541 $x3918)))
(let (($x3917 (<= ?x4179 0)))
(let (($x4407 (>= ?x4327 0)))
(let ((@x4549 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3126 ?x3910)) $x4407)) (monotonicity @x4265 (= ?x3126 ?x3910)) $x4407)))
(let (($x3979 (<= ?x3984 0)))
(let ((@x6239 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1661 ?x3142)) $x3979)) (monotonicity @x4265 (= ?x1661 ?x3142)) $x3979)))
(let (($x5179 (<= ?x3056 0)))
(let ((@x3960 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3033 $x5179)) (unit-resolution (def-axiom (or $x3034 $x3032)) @x4406 $x3032) $x5179)))
(let ((@x4631 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 1) (or $x3917 (not $x5179) (not $x3979) (not $x4407))) @x3960 @x6239 @x4549 $x3917)))
(let ((@x4760 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5089 (not $x3917) (not $x3918))) @x4631 @x5267 $x5089)))
(let (($x4746 (not $x5089)))
(let (($x4181 (or $x4595 $x4746)))
(let (($x3184 (or $x3605 $x4595 $x4746)))
(let (($x5980 (>= (+ ?x3126 ?x1662) 0)))
(let (($x5913 (or $x5980 (not (= (+ ?x3126 ?x1662 ?x3946) 0)))))
(let (($x3976 (or $x3605 $x5913)))
(let ((@x4178 (monotonicity (rewrite (= (+ ?x3126 ?x1662 ?x3946) (+ ?x1662 ?x3126 ?x3946))) (= (= (+ ?x3126 ?x1662 ?x3946) 0) (= (+ ?x1662 ?x3126 ?x3946) 0)))))
(let ((@x4745 (trans @x4178 (rewrite (= (= (+ ?x1662 ?x3126 ?x3946) 0) $x5089)) (= (= (+ ?x3126 ?x1662 ?x3946) 0) $x5089))))
(let ((@x5181 (monotonicity (rewrite (= (+ ?x3126 ?x1662) (+ ?x1662 ?x3126))) (= $x5980 (>= (+ ?x1662 ?x3126) 0)))))
(let ((@x4634 (trans @x5181 (rewrite (= (>= (+ ?x1662 ?x3126) 0) $x4595)) (= $x5980 $x4595))))
(let ((@x4184 (monotonicity @x4634 (monotonicity @x4745 (= (not (= (+ ?x3126 ?x1662 ?x3946) 0)) $x4746)) (= $x5913 $x4181))))
(let ((@x3916 (trans (monotonicity @x4184 (= $x3976 (or $x3605 $x4181))) (rewrite (= (or $x3605 $x4181) $x3184)) (= $x3976 $x3184))))
(let ((@x5060 (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!8)) $x3976) @x3916 $x3184) (unit-resolution (def-axiom (or $x3608 $x3600)) @x4905 $x3600) $x4181)))
(let ((@x6153 (unit-resolution (lemma (unit-resolution @x5060 @x4760 @x4542 false) (or $x3654 $x1664)) @x5142 $x1664)))
(let ((@x6273 (unit-resolution @x3120 (unit-resolution (def-axiom (or $x3608 $x1665)) @x6153 $x3608) (unit-resolution (def-axiom (or $x3654 $x3648)) @x5142 $x3648) $x3645)))
(let ((@x5939 (unit-resolution @x3425 (unit-resolution @x3134 (unit-resolution @x3138 @x6273 $x3636) @x4885 $x3633) $x1749)))
(let ((@x5914 (unit-resolution @x5939 (trans (monotonicity @x4265 (= ?x245 ?x172)) @x4529 $x246) false)))
(let ((@x6386 (unit-resolution (def-axiom (or $x3818 $x3657 $x3812)) (unit-resolution (def-axiom (or $x3821 $x3815)) @x4219 $x3815) $x3815)))
(let ((@x6181 (unit-resolution @x6386 (lemma @x5914 $x3654) $x3812)))
(let ((@x5944 (unit-resolution (def-axiom (or $x3809 $x3678)) @x6181 $x3678)))
(let (($x4481 (= ?x1846 ?x4480)))
(let (($x3188 (or $x3683 $x6711 $x4481)))
(let (($x5285 (or (not (or $x4911 (<= (+ ?x4480 ?x1173 (* (- 1) ?x5018)) 0))) $x4481)))
(let (($x6363 (or $x3683 $x5285)))
(let (($x5370 (<= (+ ?x4480 ?x1173 (* (- 1) ?x5018)) 0)))
(let ((@x4465 (rewrite (= (+ ?x4480 ?x1173 (* (- 1) ?x5018)) (+ ?x1173 ?x4480 (* (- 1) ?x5018))))))
(let ((@x6818 (monotonicity @x4465 (= $x5370 (<= (+ ?x1173 ?x4480 (* (- 1) ?x5018)) 0)))))
(let ((@x6705 (trans @x6818 (rewrite (= (<= (+ ?x1173 ?x4480 (* (- 1) ?x5018)) 0) $x6822)) (= $x5370 $x6822))))
(let ((@x5840 (monotonicity (monotonicity @x6705 (= (or $x4911 $x5370) $x6706)) (= (not (or $x4911 $x5370)) $x6711))))
(let ((@x6545 (monotonicity (monotonicity @x5840 (= $x5285 (or $x6711 $x4481))) (= $x6363 (or $x3683 (or $x6711 $x4481))))))
(let ((@x4811 (trans @x6545 (rewrite (= (or $x3683 (or $x6711 $x4481)) $x3188)) (= $x6363 $x3188))))
(let ((@x6726 (unit-resolution (mp ((_ quant-inst ?v0!15) $x6363) @x4811 $x3188) @x5944 (unit-resolution @x6242 @x6183 (not $x4481)) $x6711)))
(let ((@x6470 (unit-resolution (def-axiom (or $x6706 (not $x4911))) (hypothesis $x6711) (not $x4911))))
(let ((@x6494 (unit-resolution (def-axiom (or $x6706 (not $x6822))) (hypothesis $x6711) (not $x6822))))
(let (($x6511 (or $x4911 $x6822 $x6128)))
(let ((@x6588 (unit-resolution (def-axiom (or $x3809 $x3670)) @x6181 $x3670)))
(let (($x6235 (or $x3675 $x4911 $x6822 $x6128)))
(let (($x6510 (or $x4911 $x5370 (= (+ ?x257 ?x5018 ?x4456) 0))))
(let (($x6263 (or $x3675 $x6510)))
(let ((@x6480 (monotonicity (rewrite (= (+ ?x257 ?x5018 ?x4456) ?x6267)) (= (= (+ ?x257 ?x5018 ?x4456) 0) $x6128))))
(let ((@x4472 (monotonicity (monotonicity @x6705 @x6480 (= $x6510 $x6511)) (= $x6263 (or $x3675 $x6511)))))
(let ((@x5852 (mp ((_ quant-inst ?v0!15) $x6263) (trans @x4472 (rewrite (= (or $x3675 $x6511) $x6235)) (= $x6263 $x6235)) $x6235)))
(let ((@x6501 (unit-resolution (unit-resolution @x5852 @x6588 $x6511) @x6494 @x6470 (hypothesis (not $x6128)) false)))
(let ((@x4608 (lemma @x6501 (or $x6706 $x6128))))
(let ((@x6959 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6128) $x5853)) (unit-resolution @x4608 @x6726 $x6128) $x5853)))
(let (($x6603 (>= ?x5018 0)))
(let (($x6582 (<= ?x5018 0)))
(let (($x6583 (not $x6582)))
(let (($x6156 (= v_b_v_G_1$ ?v0!15)))
(let (($x5538 (not $x6156)))
(let ((@x7337 (symm (commutativity (= $x6156 (= ?v0!15 v_b_v_G_1$))) (= (= ?v0!15 v_b_v_G_1$) $x6156))))
(let (($x6631 (= ?v0!15 v_b_v_G_1$)))
(let (($x7452 (not $x6631)))
(let (($x6269 (fun_app$ v_b_Visited_G_1$ ?v0!15)))
(let (($x7698 (or $x6631 $x6269)))
(let (($x6630 (fun_app$ ?x265 ?v0!15)))
(let (($x7702 (= $x6630 $x7698)))
(let (($x3468 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x67 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x67 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :pattern ( (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3) ) :qid k!38))
))
(let (($x77 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x67 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x67 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :qid k!38))
))
(let (($x67 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?3) ?2) ?1) ?0)))
(let (($x74 (= $x67 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0)))))
(let (($x72 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(! (let (($x67 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x67 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :qid k!38))
))
(let ((@x76 (rewrite (= (= $x67 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0))) $x74))))
(let ((@x1443 (mp~ (mp (asserted $x72) (quant-intro @x76 (= $x72 $x77)) $x77) (nnf-pos (refl (~ $x74 $x74)) (~ $x77 $x77)) $x77)))
(let ((@x3473 (mp @x1443 (quant-intro (refl (= $x74 $x74)) (= $x77 $x3468)) $x3468)))
(let (($x4114 (not $x3468)))
(let (($x6435 (or $x4114 $x7702)))
(let ((@x5925 (monotonicity (rewrite (= (ite $x6631 true $x6269) $x7698)) (= (= $x6630 (ite $x6631 true $x6269)) $x7702))))
(let ((@x6213 (monotonicity @x5925 (= (or $x4114 (= $x6630 (ite $x6631 true $x6269))) $x6435))))
(let ((@x7485 (trans @x6213 (rewrite (= $x6435 $x6435)) (= (or $x4114 (= $x6630 (ite $x6631 true $x6269))) $x6435))))
(let ((@x7486 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!15) (or $x4114 (= $x6630 (ite $x6631 true $x6269)))) @x7485 $x6435)))
(let ((@x5875 (symm (unit-resolution (def-axiom (or $x3809 $x266)) @x6181 $x266) (= ?x265 v_b_Visited_G_2$))))
(let ((@x7321 (symm (monotonicity @x5875 (= $x6630 (fun_app$ v_b_Visited_G_2$ ?v0!15))) (= (fun_app$ v_b_Visited_G_2$ ?v0!15) $x6630))))
(let ((@x7322 (monotonicity @x7321 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!15)) (not $x6630)))))
(let (($x4415 (fun_app$ v_b_Visited_G_2$ ?v0!15)))
(let (($x4479 (not $x4415)))
(let ((?x5054 (b_G$ (pair$ v_b_v_G_1$ ?v0!13))))
(let ((?x4706 (+ ?x257 ?x1810 ?x5054)))
(let (($x4687 (= ?x4706 0)))
(let (($x5187 (>= (+ ?x257 (* (- 1) ?x1808) ?x5054) 0)))
(let (($x5051 (<= (+ b_Infinity$ (* (- 1) ?x5054)) 0)))
(let (($x5186 (or $x5051 $x5187)))
(let (($x5221 (not $x5186)))
(let ((@x5744 (monotonicity (commutativity (= (= ?x1808 ?x1809) (= ?x1809 ?x1808))) (= (not (= ?x1808 ?x1809)) (not (= ?x1809 ?x1808))))))
(let (($x5690 (not (= ?x1808 ?x1809))))
(let ((@x5726 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5690 $x1812)) (hypothesis $x1813) $x5690) @x5744 (not (= ?x1809 ?x1808)))))
(let (($x5270 (= ?x1809 ?x1808)))
(let (($x5230 (or $x5221 $x5270)))
(let ((@x4739 (hypothesis $x3678)))
(let (($x5327 (or $x3683 $x5221 $x5270)))
(let (($x5333 (or (not (or $x5051 (<= (+ ?x1808 ?x1173 (* (- 1) ?x5054)) 0))) $x5270)))
(let (($x5268 (or $x3683 $x5333)))
(let (($x5095 (<= (+ ?x1808 ?x1173 (* (- 1) ?x5054)) 0)))
(let ((@x5120 (rewrite (= (+ ?x1808 ?x1173 (* (- 1) ?x5054)) (+ ?x1173 ?x1808 (* (- 1) ?x5054))))))
(let ((@x5127 (monotonicity @x5120 (= $x5095 (<= (+ ?x1173 ?x1808 (* (- 1) ?x5054)) 0)))))
(let ((@x4705 (trans @x5127 (rewrite (= (<= (+ ?x1173 ?x1808 (* (- 1) ?x5054)) 0) $x5187)) (= $x5095 $x5187))))
(let ((@x5229 (monotonicity (monotonicity @x4705 (= (or $x5051 $x5095) $x5186)) (= (not (or $x5051 $x5095)) $x5221))))
(let ((@x5269 (monotonicity (monotonicity @x5229 (= $x5333 $x5230)) (= $x5268 (or $x3683 $x5230)))))
(let ((@x5432 (mp ((_ quant-inst ?v0!13) $x5268) (trans @x5269 (rewrite (= (or $x3683 $x5230) $x5327)) (= $x5268 $x5327)) $x5327)))
(let ((@x5729 (unit-resolution (def-axiom (or $x5186 (not $x5051))) (unit-resolution (unit-resolution @x5432 @x4739 $x5230) @x5726 $x5221) (not $x5051))))
(let ((@x5749 (unit-resolution (def-axiom (or $x5186 (not $x5187))) (unit-resolution (unit-resolution @x5432 @x4739 $x5230) @x5726 $x5221) (not $x5187))))
(let (($x5211 (or $x5051 $x5187 $x4687)))
(let ((@x5807 (hypothesis $x3670)))
(let (($x5189 (or $x3675 $x5051 $x5187 $x4687)))
(let (($x5102 (or $x5051 $x5095 (= (+ ?x257 ?x5054 ?x1810) 0))))
(let (($x5163 (or $x3675 $x5102)))
(let ((@x5164 (monotonicity (rewrite (= (+ ?x257 ?x5054 ?x1810) ?x4706)) (= (= (+ ?x257 ?x5054 ?x1810) 0) $x4687))))
(let ((@x5215 (monotonicity (monotonicity @x4705 @x5164 (= $x5102 $x5211)) (= $x5163 (or $x3675 $x5211)))))
(let ((@x5376 (mp ((_ quant-inst ?v0!13) $x5163) (trans @x5215 (rewrite (= (or $x3675 $x5211) $x5189)) (= $x5163 $x5189)) $x5189)))
(let ((@x5714 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4687) (>= ?x4706 0))) (unit-resolution (unit-resolution @x5376 @x5807 $x5211) @x5749 @x5729 $x4687) (>= ?x4706 0))))
(let ((@x5723 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (<= ?x1811 0) $x1812)) (hypothesis $x1813) (<= ?x1811 0))))
(let ((@x6888 (unit-resolution (lemma ((_ th-lemma arith farkas 1 -1 1) @x5723 @x5749 @x5714 false) (or $x1812 $x3675 $x3683)) @x6588 @x5944 $x1812)))
(let ((@x6891 (unit-resolution (def-axiom (or $x3806 $x1813 $x3800)) @x6888 (unit-resolution (def-axiom (or $x3809 $x3803)) @x6181 $x3803) $x3800)))
(let (($x6050 (= ?v0!14 v_b_v_G_1$)))
(let (($x5678 (fun_app$ v_b_Visited_G_1$ ?v0!14)))
(let (($x4963 (or $x6050 $x5678)))
(let (($x6049 (fun_app$ ?x265 ?v0!14)))
(let (($x6452 (= $x6049 $x4963)))
(let (($x5869 (or $x4114 $x6452)))
(let ((@x6355 (monotonicity (rewrite (= (ite $x6050 true $x5678) $x4963)) (= (= $x6049 (ite $x6050 true $x5678)) $x6452))))
(let ((@x5854 (monotonicity @x6355 (= (or $x4114 (= $x6049 (ite $x6050 true $x5678))) $x5869))))
(let ((@x6366 (trans @x5854 (rewrite (= $x5869 $x5869)) (= (or $x4114 (= $x6049 (ite $x6050 true $x5678))) $x5869))))
(let ((@x6233 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!14) (or $x4114 (= $x6049 (ite $x6050 true $x5678)))) @x6366 $x5869)))
(let ((@x6372 (symm (monotonicity @x5875 (= $x6049 (fun_app$ v_b_Visited_G_2$ ?v0!14))) (= (fun_app$ v_b_Visited_G_2$ ?v0!14) $x6049))))
(let (($x1824 (fun_app$ v_b_Visited_G_2$ ?v0!14)))
(let ((@x4837 (mp (unit-resolution (def-axiom (or $x1829 $x1824)) (hypothesis $x1830) $x1824) @x6372 $x6049)))
(let ((@x5037 (unit-resolution (def-axiom (or (not $x6452) (not $x6049) $x4963)) @x4837 (unit-resolution @x6233 @x3473 $x6452) $x4963)))
(let (($x4290 (not $x5678)))
(let ((?x5658 (* (- 1) ?x1827)))
(let ((?x4907 (+ ?x257 ?x5658)))
(let (($x6523 (>= ?x4907 0)))
(let (($x6556 (not $x6523)))
(let (($x4887 (>= (+ ?x257 ?x5658 (b_G$ (pair$ v_b_v_G_1$ ?v0!14))) 0)))
(let (($x4812 (not $x4887)))
(let (($x4783 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5110 (or $x4783 $x4887)))
(let (($x5079 (not $x5110)))
(let ((@x5065 (unit-resolution (def-axiom (or $x1829 (not $x1828))) (hypothesis $x1830) (not $x1828))))
(let (($x4844 (or $x3683 $x5079 $x1828)))
(let (($x4891 (<= (+ ?x1827 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5552 (or (not (or $x4783 $x4891)) $x1828)))
(let (($x4766 (or $x3683 $x5552)))
(let (($x4493 (<= (+ ?x1173 ?x1827 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5019 (= (+ ?x1827 ?x1173 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) (+ ?x1173 ?x1827 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))))))
(let ((@x5288 (trans (monotonicity (rewrite $x5019) (= $x4891 $x4493)) (rewrite (= $x4493 $x4887)) (= $x4891 $x4887))))
(let ((@x5082 (monotonicity (monotonicity @x5288 (= (or $x4783 $x4891) $x5110)) (= (not (or $x4783 $x4891)) $x5079))))
(let ((@x5868 (monotonicity (monotonicity @x5082 (= $x5552 (or $x5079 $x1828))) (= $x4766 (or $x3683 (or $x5079 $x1828))))))
(let ((@x5811 (trans @x5868 (rewrite (= (or $x3683 (or $x5079 $x1828)) $x4844)) (= $x4766 $x4844))))
(let ((@x6433 (unit-resolution (def-axiom (or $x5110 $x4812)) (unit-resolution (mp ((_ quant-inst ?v0!14) $x4766) @x5811 $x4844) @x5944 @x5065 $x5079) $x4812)))
(let ((?x6047 (pair$ v_b_v_G_1$ ?v0!14)))
(let ((?x6491 (b_G$ ?x6047)))
(let (($x5826 (>= ?x6491 0)))
(let ((@x6283 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x6491 0)) $x5826)) (hypothesis (not $x5826)) (not (= ?x6491 0)))))
(let (($x5742 (= v_b_v_G_1$ ?v0!14)))
(let (($x5751 (<= ?x6491 0)))
(let ((@x6302 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x5826 $x5751)) (hypothesis (not $x5826)) $x5751)))
(let (($x5738 (or $x5742 (not $x5751))))
(let (($x3480 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x84 (= ?v0 ?v1)))
(or $x84 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0)))) :pattern ( (pair$ ?v0 ?v1) ) :qid k!41))
))
(let (($x120 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x84 (= ?v0 ?v1)))
(or $x84 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0)))) :qid k!41))
))
(let (($x84 (= ?1 ?0)))
(let (($x117 (or $x84 (not (<= (b_G$ (pair$ ?1 ?0)) 0)))))
(let (($x105 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x29 (pair$ ?v0 ?v1)))
(let ((?x85 (b_G$ ?x29)))
(let (($x102 (< 0 ?x85)))
(=> (not (= ?v0 ?v1)) $x102)))) :qid k!41))
))
(let (($x110 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let ((?x29 (pair$ ?v0 ?v1)))
(let ((?x85 (b_G$ ?x29)))
(let (($x102 (< 0 ?x85)))
(let (($x84 (= ?v0 ?v1)))
(or $x84 $x102))))) :qid k!41))
))
(let ((?x29 (pair$ ?1 ?0)))
(let ((?x85 (b_G$ ?x29)))
(let (($x102 (< 0 ?x85)))
(let ((@x119 (monotonicity (rewrite (= $x102 (not (<= ?x85 0)))) (= (or $x84 $x102) $x117))))
(let ((@x112 (quant-intro (rewrite (= (=> (not $x84) $x102) (or $x84 $x102))) (= $x105 $x110))))
(let ((@x125 (mp (asserted $x105) (trans @x112 (quant-intro @x119 (= $x110 $x120)) (= $x105 $x120)) $x120)))
(let ((@x3485 (mp (mp~ @x125 (nnf-pos (refl (~ $x117 $x117)) (~ $x120 $x120)) $x120) (quant-intro (refl (= $x117 $x117)) (= $x120 $x3480)) $x3480)))
(let ((@x5780 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or (not $x3480) $x5738)) (rewrite (= (or (not $x3480) $x5738) (or (not $x3480) $x5742 (not $x5751)))) (or (not $x3480) $x5742 (not $x5751)))))
(let (($x5739 (= ?x6491 0)))
(let (($x5781 (or (not $x5742) $x5739)))
(let (($x3474 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (or (not (= ?v0 ?v1)) (= (b_G$ (pair$ ?v0 ?v1)) 0)) :pattern ( (pair$ ?v0 ?v1) ) :qid k!40))
))
(let (($x99 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (or (not (= ?v0 ?v1)) (= (b_G$ (pair$ ?v0 ?v1)) 0)) :qid k!40))
))
(let ((@x3476 (refl (= (or (not $x84) (= ?x85 0)) (or (not $x84) (= ?x85 0))))))
(let ((@x1447 (refl (~ (or (not $x84) (= ?x85 0)) (or (not $x84) (= ?x85 0))))))
(let (($x93 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(! (let (($x84 (= ?v0 ?v1)))
(=> $x84 (= (b_G$ (pair$ ?v0 ?v1)) 0))) :qid k!40))
))
(let ((@x98 (rewrite (= (=> $x84 (= ?x85 0)) (or (not $x84) (= ?x85 0))))))
(let ((@x1448 (mp~ (mp (asserted $x93) (quant-intro @x98 (= $x93 $x99)) $x99) (nnf-pos @x1447 (~ $x99 $x99)) $x99)))
(let ((@x3479 (mp @x1448 (quant-intro @x3476 (= $x99 $x3474)) $x3474)))
(let ((@x5817 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or (not $x3474) $x5781)) (rewrite (= (or (not $x3474) $x5781) (or (not $x3474) (not $x5742) $x5739))) (or (not $x3474) (not $x5742) $x5739))))
(let ((@x6306 (unit-resolution (unit-resolution @x5817 @x3479 $x5781) (unit-resolution (unit-resolution @x5780 @x3485 $x5738) @x6302 $x5742) @x6283 false)))
(let ((@x6555 ((_ th-lemma arith farkas 1 -1 1) (lemma @x6306 $x5826) (hypothesis $x4812) (hypothesis $x6523) false)))
(let ((@x6225 (unit-resolution (def-axiom (or $x3809 $x256)) @x6181 $x256)))
(let ((@x5748 (unit-resolution (def-axiom (or $x3821 $x3565)) @x4219 $x3565)))
(let ((@x6018 (rewrite (= (or $x3570 (or $x255 $x4290 $x6523)) (or $x3570 $x255 $x4290 $x6523)))))
(let ((@x6055 (mp ((_ quant-inst ?v0!14 v_b_v_G_1$) (or $x3570 (or $x255 $x4290 $x6523))) @x6018 (or $x3570 $x255 $x4290 $x6523))))
(let ((@x6222 (unit-resolution @x6055 @x5748 @x6225 (hypothesis $x5678) (hypothesis $x6556) false)))
(let ((@x5057 (unit-resolution (lemma @x6222 (or $x4290 $x6523)) (unit-resolution (lemma @x6555 (or $x6556 $x4887)) @x6433 $x6556) $x4290)))
(let ((@x6293 (monotonicity (unit-resolution (def-axiom (or (not $x4963) $x6050 $x5678)) @x5057 @x5037 $x6050) (= ?x1827 ?x257))))
(let (($x3052 (= ?x3104 ?x257)))
(let ((?x3130 (pair$ v_b_v_G_1$ v_b_v_G_1$)))
(let ((?x3096 (b_G$ ?x3130)))
(let (($x3079 (>= ?x3096 0)))
(let (($x3088 (<= (+ b_Infinity$ (* (- 1) ?x3096)) 0)))
(let (($x4242 (or $x3088 $x3079)))
(let (($x4785 (= ?x3096 0)))
(let (($x3151 (not $x3474)))
(let (($x4816 (or $x3151 $x4785)))
(let ((@x4770 (monotonicity (rewrite (= (= v_b_v_G_1$ v_b_v_G_1$) true)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) (not true)))))
(let ((@x4775 (trans @x4770 (rewrite (= (not true) false)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) false))))
(let ((@x4767 (monotonicity @x4775 (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4785) (or false $x4785)))))
(let ((@x4773 (trans @x4767 (rewrite (= (or false $x4785) $x4785)) (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4785) $x4785))))
(let ((@x4820 (monotonicity @x4773 (= (or $x3151 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4785)) $x4816))))
(let ((@x4821 (trans @x4820 (rewrite (= $x4816 $x4816)) (= (or $x3151 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4785)) $x4816))))
(let ((@x4822 (mp ((_ quant-inst v_b_v_G_1$ v_b_v_G_1$) (or $x3151 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4785))) @x4821 $x4816)))
(let ((@x4849 (lemma (unit-resolution @x4822 @x3479 (hypothesis (not $x4785)) false) $x4785)))
(let ((@x6019 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4785) $x3079)) @x4849 $x3079)))
(let ((@x4316 (def-axiom (or $x4242 (not $x3079)))))
(let (($x4245 (not $x4242)))
(let (($x3975 (or $x3683 $x4245 $x3052)))
(let (($x3053 (or (not (or $x3088 (<= (+ ?x257 ?x1173 (* (- 1) ?x3096)) 0))) $x3052)))
(let (($x3958 (or $x3683 $x3053)))
(let (($x3103 (<= (+ ?x257 ?x1173 (* (- 1) ?x3096)) 0)))
(let ((@x4023 (monotonicity (rewrite (= (+ ?x257 ?x1173 (* (- 1) ?x3096)) (* (- 1) ?x3096))) (= $x3103 (<= (* (- 1) ?x3096) 0)))))
(let ((@x4044 (trans @x4023 (rewrite (= (<= (* (- 1) ?x3096) 0) $x3079)) (= $x3103 $x3079))))
(let ((@x4247 (monotonicity (monotonicity @x4044 (= (or $x3088 $x3103) $x4242)) (= (not (or $x3088 $x3103)) $x4245))))
(let ((@x4254 (monotonicity (monotonicity @x4247 (= $x3053 (or $x4245 $x3052))) (= $x3958 (or $x3683 (or $x4245 $x3052))))))
(let ((@x4258 (trans @x4254 (rewrite (= (or $x3683 (or $x4245 $x3052)) $x3975)) (= $x3958 $x3975))))
(let ((@x4259 (mp ((_ quant-inst v_b_v_G_1$) $x3958) @x4258 $x3975)))
(let ((@x6268 (monotonicity (unit-resolution (def-axiom (or (not $x4963) $x6050 $x5678)) @x5057 @x5037 $x6050) (= ?x1826 ?x3104))))
(let ((@x6107 (trans @x6268 (unit-resolution @x4259 @x5944 (unit-resolution @x4316 @x6019 $x4242) $x3052) (= ?x1826 ?x257))))
(let ((@x6162 (unit-resolution @x5065 (trans @x6107 (symm @x6293 (= ?x257 ?x1827)) $x1828) false)))
(let ((@x7617 (unit-resolution (def-axiom (or $x3794 $x1830 $x3788)) (lemma @x6162 $x1829) (unit-resolution (def-axiom (or $x3797 $x3791)) @x6891 $x3791) $x3788)))
(let ((@x7618 (unit-resolution (def-axiom (or $x3785 $x3695)) @x7617 $x3695)))
(let ((@x7447 (mp ((_ quant-inst ?v0!15) (or $x3700 (or $x4479 $x4481))) (rewrite (= (or $x3700 (or $x4479 $x4481)) (or $x3700 $x4479 $x4481))) (or $x3700 $x4479 $x4481))))
(let ((@x7323 (mp (unit-resolution @x7447 @x7618 (unit-resolution @x6242 @x6183 (not $x4481)) $x4479) @x7322 (not $x6630))))
(let ((@x7334 (unit-resolution (def-axiom (or (not $x7702) $x6630 (not $x7698))) @x7323 (unit-resolution @x7486 @x3473 $x7702) (not $x7698))))
(let ((@x7344 (mp (unit-resolution (def-axiom (or $x7698 $x7452)) @x7334 $x7452) (monotonicity @x7337 (= $x7452 $x5538)) $x5538)))
(let (($x5470 (or $x6156 $x6583)))
(let ((@x6577 (mp ((_ quant-inst v_b_v_G_1$ ?v0!15) (or (not $x3480) $x5470)) (rewrite (= (or (not $x3480) $x5470) (or (not $x3480) $x6156 $x6583))) (or (not $x3480) $x6156 $x6583))))
(let ((@x7345 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x6603 $x6582)) (unit-resolution (unit-resolution @x6577 @x3485 $x5470) @x7344 $x6583) $x6603)))
(let (($x4153 (<= ?x296 0)))
(let ((?x4058 (* (- 1) ?x296)))
(let ((?x4124 (+ ?x172 ?x4058)))
(let (($x4125 (>= ?x4124 0)))
(let ((@x6892 (unit-resolution (def-axiom (or $x3797 $x3686)) @x6891 $x3686)))
(let (($x4878 (or $x3691 $x4125)))
(let ((@x4880 ((_ quant-inst b_Source$) $x4878)))
(let (($x3198 (<= ?x172 0)))
(let ((@x4532 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2952 $x3198)) @x4529 $x3198)))
(let ((@x6899 (unit-resolution ((_ th-lemma arith assign-bounds -1 1) (or $x4153 (not $x3198) (not $x4125))) @x4532 (or $x4153 (not $x4125)))))
(let ((@x6900 (unit-resolution @x6899 (unit-resolution @x4880 @x6892 $x4125) $x4153)))
(let (($x3887 (= v_b_v_G_1$ b_Source$)))
(let (($x5313 (not $x3887)))
(let ((@x5202 (hypothesis $x773)))
(let ((?x4565 (pair$ b_Source$ b_Source$)))
(let ((?x4566 (b_G$ ?x4565)))
(let ((?x4567 (* (- 1) ?x4566)))
(let ((?x4041 (pair$ v_b_v_G_1$ b_Source$)))
(let ((?x4042 (b_G$ ?x4041)))
(let ((@x4671 (monotonicity (symm (hypothesis $x3887) (= b_Source$ v_b_v_G_1$)) (= ?x4565 ?x4041))))
(let ((@x4659 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x4042 ?x4566)) (>= (+ ?x4042 ?x4567) 0))) (monotonicity (symm @x4671 (= ?x4041 ?x4565)) (= ?x4042 ?x4566)) (>= (+ ?x4042 ?x4567) 0))))
(let ((?x4049 (* (- 1) ?x4042)))
(let ((?x5672 (+ ?x3096 ?x4049)))
(let (($x5674 (>= ?x5672 0)))
(let ((@x4664 (monotonicity (monotonicity (hypothesis $x3887) (= ?x3130 ?x4041)) (= ?x3096 ?x4042))))
(let (($x4315 (not $x3079)))
(let ((@x4728 (trans (monotonicity (hypothesis $x3887) (= ?x257 ?x172)) @x4529 (= ?x257 0))))
(let ((@x4830 (monotonicity (monotonicity (hypothesis $x3887) (= ?x3104 ?x296)) @x4728 (= $x3052 $x297))))
(let ((@x4736 (mp @x5202 (monotonicity (symm @x4830 (= $x297 $x3052)) (= $x773 (not $x3052))) (not $x3052))))
(let ((@x5369 (unit-resolution @x4316 (unit-resolution (unit-resolution @x4259 @x4739 (or $x4245 $x3052)) @x4736 $x4245) $x4315)))
(let (($x4601 (= ?x4566 0)))
(let (($x4613 (or $x3151 $x4601)))
(let ((@x4604 (monotonicity @x5820 (= (or (not (= b_Source$ b_Source$)) $x4601) (or false $x4601)))))
(let ((@x4630 (trans @x4604 (rewrite (= (or false $x4601) $x4601)) (= (or (not (= b_Source$ b_Source$)) $x4601) $x4601))))
(let ((@x4617 (monotonicity @x4630 (= (or $x3151 (or (not (= b_Source$ b_Source$)) $x4601)) $x4613))))
(let ((@x4620 (trans @x4617 (rewrite (= $x4613 $x4613)) (= (or $x3151 (or (not (= b_Source$ b_Source$)) $x4601)) $x4613))))
(let ((@x4621 (mp ((_ quant-inst b_Source$ b_Source$) (or $x3151 (or (not (= b_Source$ b_Source$)) $x4601))) @x4620 $x4613)))
(let ((@x5180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4601) (>= ?x4566 0))) (unit-resolution @x4621 @x3479 $x4601) (>= ?x4566 0))))
(let ((@x5283 ((_ th-lemma arith farkas 1 -1 1 1) @x5180 @x5369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3096 ?x4042)) $x5674)) @x4664 $x5674) @x4659 false)))
(let (($x5310 (<= ?x4042 0)))
(let ((?x4076 (+ ?x257 ?x4058 ?x4042)))
(let (($x4096 (<= ?x4076 0)))
(let (($x4079 (= ?x4076 0)))
(let (($x4053 (<= (+ ?x172 ?x1173 ?x4049) 0)))
(let (($x4051 (<= (+ b_Infinity$ ?x4049) 0)))
(let (($x4054 (or $x4051 $x4053)))
(let (($x4055 (not $x4054)))
(let ((@x5609 (symm (monotonicity @x4529 (= (= ?x296 ?x172) $x297)) (= $x297 (= ?x296 ?x172)))))
(let ((@x5618 (mp @x5202 (monotonicity @x5609 (= $x773 (not (= ?x296 ?x172)))) (not (= ?x296 ?x172)))))
(let (($x4056 (= ?x296 ?x172)))
(let (($x4057 (or $x4055 $x4056)))
(let (($x4295 (or $x3683 $x4055 $x4056)))
(let ((@x4884 (mp ((_ quant-inst b_Source$) (or $x3683 $x4057)) (rewrite (= (or $x3683 $x4057) $x4295)) $x4295)))
(let ((@x5791 (unit-resolution (def-axiom (or $x4054 (not $x4051))) (hypothesis $x4055) (not $x4051))))
(let ((@x5806 (unit-resolution (def-axiom (or $x4054 (not $x4053))) (hypothesis $x4055) (not $x4053))))
(let (($x4082 (or $x4051 $x4053 $x4079)))
(let (($x4085 (or $x3675 $x4051 $x4053 $x4079)))
(let (($x4075 (or $x4051 $x4053 (= (+ ?x257 ?x4042 ?x4058) 0))))
(let (($x4086 (or $x3675 $x4075)))
(let ((@x4081 (monotonicity (rewrite (= (+ ?x257 ?x4042 ?x4058) ?x4076)) (= (= (+ ?x257 ?x4042 ?x4058) 0) $x4079))))
(let ((@x4090 (monotonicity (monotonicity @x4081 (= $x4075 $x4082)) (= $x4086 (or $x3675 $x4082)))))
(let ((@x4095 (mp ((_ quant-inst b_Source$) $x4086) (trans @x4090 (rewrite (= (or $x3675 $x4082) $x4085)) (= $x4086 $x4085)) $x4085)))
(let ((@x5789 (unit-resolution (unit-resolution @x4095 @x5807 $x4082) @x5806 @x5791 (hypothesis (not $x4079)) false)))
(let ((@x5623 (unit-resolution (lemma @x5789 (or $x4054 $x4079 $x3675)) (unit-resolution (unit-resolution @x4884 @x4739 $x4057) @x5618 $x4055) @x5807 $x4079)))
(let ((@x5923 (hypothesis $x4096)))
(let ((@x5933 ((_ th-lemma arith farkas -1 1 -1 1) (hypothesis $x3904) (hypothesis $x4153) (hypothesis (not $x5310)) @x5923 false)))
(let ((@x5938 (lemma @x5933 (or $x5310 (not $x3904) (not $x4153) (not $x4096)))))
(let ((@x5596 (unit-resolution @x5938 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4079) $x4096)) @x5623 $x4096) (hypothesis $x4153) @x5049 $x5310)))
(let (($x5886 (= (or (not $x3480) (or $x3887 (not $x5310))) (or (not $x3480) $x3887 (not $x5310)))))
(let ((@x5952 (mp ((_ quant-inst v_b_v_G_1$ b_Source$) (or (not $x3480) (or $x3887 (not $x5310)))) (rewrite $x5886) (or (not $x3480) $x3887 (not $x5310)))))
(let ((@x5597 (unit-resolution @x5952 @x3485 @x5596 (unit-resolution (lemma @x5283 (or $x5313 $x3683 $x297)) @x5202 @x4739 $x5313) false)))
(let ((@x6788 (unit-resolution (lemma @x5597 (or $x297 (not $x4153) $x3675 $x3683)) @x6900 @x6588 @x5944 $x297)))
(let ((@x7810 (unit-resolution (def-axiom (or $x3782 $x773 $x3776)) (unit-resolution (def-axiom (or $x3785 $x3779)) @x7617 $x3779) @x6788 $x3776)))
(let ((@x3347 (def-axiom (or $x3770 $x1848 $x3764))))
(let ((@x9303 (unit-resolution @x3347 (unit-resolution (def-axiom (or $x3773 $x3767)) @x7810 $x3767) $x3767)))
(let ((@x9304 (unit-resolution @x9303 (lemma ((_ th-lemma arith farkas 1 1 -1 1) @x5703 @x7345 @x6959 @x5049 false) $x1847) $x3764)))
(let ((@x3367 (def-axiom (or $x3761 $x3703))))
(let (($x4335 (or $x3708 $x4161)))
(let ((@x4337 ((_ quant-inst v_b_v_G_1$) $x4335)))
(let (($x4126 (fun_app$ v_b_Visited_G_2$ v_b_v_G_1$)))
(let (($x3136 (fun_app$ ?x265 v_b_v_G_1$)))
(let (($x3461 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2) :pattern ( (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ) :qid k!37))
))
(let (($x57 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2) :qid k!37))
))
(let (($x54 (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?2) ?1) ?0) ?1) ?0)))
(let (($x52 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(! (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2) :qid k!37))
))
(let (($x51 (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?2) ?1) ?0) ?1) ?0)))
(let ((@x62 (mp (asserted $x52) (quant-intro (rewrite (= $x51 $x54)) (= $x52 $x57)) $x57)))
(let ((@x3466 (mp (mp~ @x62 (nnf-pos (refl (~ $x54 $x54)) (~ $x57 $x57)) $x57) (quant-intro (refl (= $x54 $x54)) (= $x57 $x3461)) $x3461)))
(let (($x6140 (or (not $x3461) $x3136)))
(let ((@x6106 (monotonicity (rewrite (= (= $x3136 true) $x3136)) (= (or (not $x3461) (= $x3136 true)) $x6140))))
(let ((@x5837 (trans @x6106 (rewrite (= $x6140 $x6140)) (= (or (not $x3461) (= $x3136 true)) $x6140))))
(let ((@x5928 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true) (or (not $x3461) (= $x3136 true))) @x5837 $x6140)))
(let ((@x7413 (mp (unit-resolution @x5928 @x3466 $x3136) (monotonicity @x5875 (= $x3136 $x4126)) $x4126)))
(let (($x4570 (>= ?x4546 0)))
(let ((@x5420 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x4570 $x4569)) (hypothesis (not $x4569)) $x4570)))
(let (($x4438 (<= (+ b_Infinity$ ?x4436) 0)))
(let (($x4127 (not $x4126)))
(let (($x5352 (or $x3725 $x4127 $x4438 $x4569)))
(let (($x5336 (>= (+ ?x4435 ?x3104 (* (- 1) ?x1911)) 0)))
(let (($x5339 (or $x4127 $x4438 $x5336)))
(let (($x5353 (or $x3725 $x5339)))
(let ((@x5341 (rewrite (= (+ ?x4435 ?x3104 (* (- 1) ?x1911)) (+ (* (- 1) ?x1911) ?x3104 ?x4435)))))
(let ((@x5344 (monotonicity @x5341 (= $x5336 (>= (+ (* (- 1) ?x1911) ?x3104 ?x4435) 0)))))
(let ((@x5348 (trans @x5344 (rewrite (= (>= (+ (* (- 1) ?x1911) ?x3104 ?x4435) 0) $x4569)) (= $x5336 $x4569))))
(let ((@x5357 (monotonicity (monotonicity @x5348 (= $x5339 (or $x4127 $x4438 $x4569))) (= $x5353 (or $x3725 (or $x4127 $x4438 $x4569))))))
(let ((@x5361 (trans @x5357 (rewrite (= (or $x3725 (or $x4127 $x4438 $x4569)) $x5352)) (= $x5353 $x5352))))
(let ((@x5424 (unit-resolution (mp ((_ quant-inst ?v0!20 v_b_v_G_1$) $x5353) @x5361 $x5352) (hypothesis $x3720) (hypothesis $x4126) (hypothesis (not $x4569)) $x4438)))
(let ((@x5428 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x5424 (hypothesis $x4161) @x5420 (hypothesis $x1915) false) (or $x4569 (not $x4161) $x1914 $x3725 $x4127))))
(let ((@x7705 (unit-resolution (unit-resolution @x5428 @x7413 (or $x4569 (not $x4161) $x1914 $x3725)) (unit-resolution @x4337 (unit-resolution @x3367 @x9304 $x3703) $x4161) (or $x4569 $x1914 $x3725))))
(let ((@x4467 (unit-resolution @x7705 (unit-resolution (def-axiom (or $x3737 $x1915)) @x4391 $x1915) (unit-resolution @x3222 @x4391 $x3720) $x4569)))
(let (($x5386 (= v_b_v_G_1$ ?v0!20)))
(let (($x5390 (not $x5386)))
(let ((@x9335 (symm (commutativity (= $x5386 (= ?v0!20 v_b_v_G_1$))) (= (= ?v0!20 v_b_v_G_1$) $x5386))))
(let (($x5240 (= ?v0!20 v_b_v_G_1$)))
(let (($x9098 (not $x5240)))
(let (($x4609 (fun_app$ v_b_Visited_G_1$ ?v0!20)))
(let (($x9110 (or $x5240 $x4609)))
(let (($x5237 (fun_app$ ?x265 ?v0!20)))
(let (($x9115 (= $x5237 $x9110)))
(let (($x9118 (or $x4114 $x9115)))
(let ((@x9117 (monotonicity (rewrite (= (ite $x5240 true $x4609) $x9110)) (= (= $x5237 (ite $x5240 true $x4609)) $x9115))))
(let ((@x9122 (monotonicity @x9117 (= (or $x4114 (= $x5237 (ite $x5240 true $x4609))) $x9118))))
(let ((@x9099 (trans @x9122 (rewrite (= $x9118 $x9118)) (= (or $x4114 (= $x5237 (ite $x5240 true $x4609))) $x9118))))
(let ((@x9100 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!20) (or $x4114 (= $x5237 (ite $x5240 true $x4609)))) @x9099 $x9118)))
(let ((@x9326 (symm (monotonicity @x5875 (= $x5237 (fun_app$ v_b_Visited_G_2$ ?v0!20))) (= (fun_app$ v_b_Visited_G_2$ ?v0!20) $x5237))))
(let ((@x9328 (monotonicity @x9326 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!20)) (not $x5237)))))
(let (($x4278 (fun_app$ v_b_Visited_G_2$ ?v0!20)))
(let (($x4279 (not $x4278)))
(let (($x4403 (or $x4279 $x4400)))
(let ((@x7926 (mp ((_ quant-inst ?v0!20) (or $x3700 $x4403)) (rewrite (= (or $x3700 $x4403) (or $x3700 $x4279 $x4400))) (or $x3700 $x4279 $x4400))))
(let ((@x9302 (unit-resolution (unit-resolution @x7926 @x7618 $x4403) (hypothesis (not $x4400)) $x4279)))
(let ((@x9330 (unit-resolution (def-axiom (or (not $x9115) $x5237 (not $x9110))) (mp @x9302 @x9328 (not $x5237)) (unit-resolution @x9100 @x3473 $x9115) (not $x9110))))
(let ((@x9338 (mp (unit-resolution (def-axiom (or $x9110 $x9098)) @x9330 $x9098) (monotonicity @x9335 (= $x9098 $x5390)) $x5390)))
(let (($x5387 (<= ?x4435 0)))
(let (($x5391 (= ?x4435 0)))
(let ((?x3106 (+ ?x257 ?x3096 ?x3105)))
(let (($x4239 (<= ?x3106 0)))
(let ((?x3884 (+ ?x257 ?x3105)))
(let (($x3885 (<= ?x3884 0)))
(let (($x6004 (= ?x257 ?x3104)))
(let ((@x7828 (mp (unit-resolution @x4259 @x5944 (unit-resolution @x4316 @x6019 $x4242) $x3052) (symm (commutativity (= $x6004 $x3052)) (= $x3052 $x6004)) $x6004)))
(let (($x4177 (<= ?x3096 0)))
(let ((@x6933 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4785) $x4177)) @x4849 $x4177)))
(let ((@x7838 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x4239 (not $x3885) (not $x4177))) @x6933 (or $x4239 (not $x3885)))))
(let ((@x7839 (unit-resolution @x7838 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6004) $x3885)) @x7828 $x3885) $x4239)))
(let (($x3044 (>= ?x3106 0)))
(let (($x3886 (>= ?x3884 0)))
(let (($x5927 (or $x3691 $x3886)))
(let ((@x5941 ((_ quant-inst v_b_v_G_1$) $x5927)))
(let ((@x6925 (unit-resolution @x5941 @x6892 $x3886)))
(let ((@x6929 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x3044 $x4315 (not $x3886))) @x6019 (or $x3044 (not $x3886)))))
(let ((@x6930 (unit-resolution @x6929 @x6925 $x3044)))
(let ((?x4381 (+ ?x1911 ?x3105)))
(let (($x7049 (<= ?x4381 0)))
(let (($x7135 (= ?x4546 0)))
(let ((?x1912 (* (- 1) ?x1911)))
(let ((?x4487 (+ ?x257 ?x1912 ?x4435)))
(let (($x4507 (<= ?x4487 0)))
(let (($x5673 (= ?x4487 0)))
(let (($x6827 (>= (+ ?x257 ?x4418 ?x4435) 0)))
(let (($x6723 (or $x4438 $x6827)))
(let (($x6684 (not $x6723)))
(let (($x6831 (or $x6684 $x4400)))
(let (($x6789 (or $x3683 $x6684 $x4400)))
(let (($x4443 (or (not (or $x4438 (<= (+ ?x4393 ?x1173 ?x4436) 0))) $x4400)))
(let (($x6790 (or $x3683 $x4443)))
(let ((@x6945 (monotonicity (rewrite (= (+ ?x4393 ?x1173 ?x4436) (+ ?x1173 ?x4393 ?x4436))) (= (<= (+ ?x4393 ?x1173 ?x4436) 0) (<= (+ ?x1173 ?x4393 ?x4436) 0)))))
(let ((@x6725 (trans @x6945 (rewrite (= (<= (+ ?x1173 ?x4393 ?x4436) 0) $x6827)) (= (<= (+ ?x4393 ?x1173 ?x4436) 0) $x6827))))
(let ((@x6730 (monotonicity @x6725 (= (or $x4438 (<= (+ ?x4393 ?x1173 ?x4436) 0)) $x6723))))
(let ((@x6830 (monotonicity @x6730 (= (not (or $x4438 (<= (+ ?x4393 ?x1173 ?x4436) 0))) $x6684))))
(let ((@x6829 (monotonicity (monotonicity @x6830 (= $x4443 $x6831)) (= $x6790 (or $x3683 $x6831)))))
(let ((@x6824 (mp ((_ quant-inst ?v0!20) $x6790) (trans @x6829 (rewrite (= (or $x3683 $x6831) $x6789)) (= $x6790 $x6789)) $x6789)))
(let ((@x9291 (unit-resolution (unit-resolution @x6824 @x5944 $x6831) (hypothesis (not $x4400)) $x6684)))
(let ((@x7434 (unit-resolution (def-axiom (or $x6723 (not $x4438))) (hypothesis $x6684) (not $x4438))))
(let ((@x7480 (unit-resolution (def-axiom (or $x6723 (not $x6827))) (hypothesis $x6684) (not $x6827))))
(let (($x6621 (or $x4438 $x6827 $x5673)))
(let (($x6987 (or $x3675 $x4438 $x6827 $x5673)))
(let (($x4440 (<= (+ ?x4393 ?x1173 ?x4436) 0)))
(let (($x4486 (or $x4438 $x4440 (= (+ ?x257 ?x4435 ?x1912) 0))))
(let (($x6624 (or $x3675 $x4486)))
(let ((@x5324 (monotonicity (rewrite (= (+ ?x257 ?x4435 ?x1912) ?x4487)) (= (= (+ ?x257 ?x4435 ?x1912) 0) $x5673))))
(let ((@x6996 (monotonicity (monotonicity @x6725 @x5324 (= $x4486 $x6621)) (= $x6624 (or $x3675 $x6621)))))
(let ((@x7057 (mp ((_ quant-inst ?v0!20) $x6624) (trans @x6996 (rewrite (= (or $x3675 $x6621) $x6987)) (= $x6624 $x6987)) $x6987)))
(let ((@x7649 (unit-resolution (unit-resolution @x7057 @x6588 $x6621) @x7480 @x7434 (hypothesis (not $x5673)) false)))
(let ((@x7699 (lemma @x7649 (or $x6723 $x5673))))
(let ((@x9295 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5673) $x4507)) (unit-resolution @x7699 @x9291 $x5673) $x4507)))
(let ((@x9297 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or (not $x4507) $x4570 (not $x3886))) @x6925 (or (not $x4507) $x4570))))
(let ((@x7017 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7135 (not $x4569) (not $x4570))) (hypothesis $x4569) (or $x7135 (not $x4570)))))
(let (($x7151 (not $x7135)))
(let (($x7157 (or $x3734 $x7049 $x4127 $x7151)))
(let (($x4516 (>= (+ ?x3104 ?x1912) 0)))
(let (($x4528 (or $x4516 $x4127 (not (= (+ ?x3104 ?x1912 ?x4435) 0)))))
(let (($x7317 (or $x3734 $x4528)))
(let ((@x7137 (monotonicity (rewrite (= (+ ?x3104 ?x1912 ?x4435) (+ ?x1912 ?x3104 ?x4435))) (= (= (+ ?x3104 ?x1912 ?x4435) 0) (= (+ ?x1912 ?x3104 ?x4435) 0)))))
(let ((@x7149 (trans @x7137 (rewrite (= (= (+ ?x1912 ?x3104 ?x4435) 0) $x7135)) (= (= (+ ?x3104 ?x1912 ?x4435) 0) $x7135))))
(let ((@x7063 (monotonicity (rewrite (= (+ ?x3104 ?x1912) (+ ?x1912 ?x3104))) (= $x4516 (>= (+ ?x1912 ?x3104) 0)))))
(let ((@x7144 (trans @x7063 (rewrite (= (>= (+ ?x1912 ?x3104) 0) $x7049)) (= $x4516 $x7049))))
(let ((@x7156 (monotonicity @x7144 (monotonicity @x7149 (= (not (= (+ ?x3104 ?x1912 ?x4435) 0)) $x7151)) (= $x4528 (or $x7049 $x4127 $x7151)))))
(let ((@x7313 (trans (monotonicity @x7156 (= $x7317 (or $x3734 (or $x7049 $x4127 $x7151)))) (rewrite (= (or $x3734 (or $x7049 $x4127 $x7151)) $x7157)) (= $x7317 $x7157))))
(let ((@x7506 (unit-resolution (mp ((_ quant-inst v_b_v_G_1$) $x7317) @x7313 $x7157) (hypothesis $x3729) @x7413 (or $x7049 $x7151))))
(let ((@x9300 (unit-resolution @x7506 (unit-resolution @x7017 (unit-resolution @x9297 @x9295 $x4570) $x7135) $x7049)))
(let (($x4382 (>= ?x4381 0)))
(let ((?x6481 (pair$ v_b_v_G_1$ ?v1!16)))
(let ((?x6374 (b_G$ ?x6481)))
(let (($x7203 (<= ?x6374 0)))
(let (($x7206 (not $x7203)))
(let (($x7202 (= v_b_v_G_1$ ?v1!16)))
(let (($x7265 (not $x7202)))
(let (($x6813 (= ?v1!16 v_b_v_G_1$)))
(let (($x6712 (not $x6813)))
(let (($x6814 (fun_app$ v_b_Visited_G_1$ ?v1!16)))
(let (($x8313 (or $x6813 $x6814)))
(let (($x6812 (fun_app$ ?x265 ?v1!16)))
(let (($x4356 (= $x6812 $x8313)))
(let (($x6492 (or $x4114 $x4356)))
(let ((@x6175 (monotonicity (rewrite (= (ite $x6813 true $x6814) $x8313)) (= (= $x6812 (ite $x6813 true $x6814)) $x4356))))
(let ((@x7654 (monotonicity @x6175 (= (or $x4114 (= $x6812 (ite $x6813 true $x6814))) $x6492))))
(let ((@x7598 (trans @x7654 (rewrite (= $x6492 $x6492)) (= (or $x4114 (= $x6812 (ite $x6813 true $x6814))) $x6492))))
(let ((@x7600 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!16) (or $x4114 (= $x6812 (ite $x6813 true $x6814)))) @x7598 $x6492)))
(let ((@x8661 (monotonicity (symm (monotonicity @x5875 (= $x6812 $x1860)) (= $x1860 $x6812)) (= (not $x1860) (not $x6812)))))
(let (($x1861 (not $x1860)))
(let ((@x8145 (hypothesis $x2765)))
(let ((@x8181 (mp (unit-resolution (def-axiom (or $x2760 $x1861)) @x8145 $x1861) @x8661 (not $x6812))))
(let ((@x8616 (unit-resolution (def-axiom (or (not $x4356) $x6812 (not $x8313))) @x8181 (unit-resolution @x7600 @x3473 $x4356) (not $x8313))))
(let ((@x8179 (unit-resolution (hypothesis $x6712) (symm (hypothesis $x7202) $x6813) false)))
(let ((@x8586 (unit-resolution (lemma @x8179 (or $x7265 $x6813)) (unit-resolution (def-axiom (or $x8313 $x6712)) @x8616 $x6712) $x7265)))
(let ((@x7214 (rewrite (= (or (not $x3480) (or $x7202 $x7206)) (or (not $x3480) $x7202 $x7206)))))
(let ((@x7215 (mp ((_ quant-inst v_b_v_G_1$ ?v1!16) (or (not $x3480) (or $x7202 $x7206))) @x7214 (or (not $x3480) $x7202 $x7206))))
(let ((@x8872 (lemma (unit-resolution @x7215 @x3485 (hypothesis $x7203) (hypothesis $x7265) false) (or $x7206 $x7202))))
(let ((?x1865 (v_b_SP_G_2$ ?v1!16)))
(let ((?x6126 (* (- 1) ?x1865)))
(let ((?x6400 (+ ?x257 ?x6126 ?x6374)))
(let (($x6319 (<= ?x6400 0)))
(let (($x7408 (= ?x6400 0)))
(let (($x6238 (<= (+ b_Infinity$ (* (- 1) ?x6374)) 0)))
(let (($x7360 (not $x6238)))
(let (($x7540 (>= (+ ?x257 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!16)) ?x6374) 0)))
(let (($x4492 (or $x6238 $x7540)))
(let (($x4445 (not $x4492)))
(let ((?x6234 (fun_app$c v_b_SP_G_1$ ?v1!16)))
(let (($x6378 (= ?x1865 ?x6234)))
(let (($x8060 (not $x6378)))
(let (($x7372 (>= (+ ?x1865 (* (- 1) ?x6234)) 0)))
(let (($x8588 (not $x7372)))
(let (($x8639 (<= (+ ?x257 (* (- 1) ?x6234)) 0)))
(let (($x7946 (or $x6814 $x8639)))
(let (($x8076 (or $x3665 $x6814 $x8639)))
(let ((@x8377 (monotonicity (rewrite (= (+ ?x6234 ?x1173) (+ ?x1173 ?x6234))) (= (>= (+ ?x6234 ?x1173) 0) (>= (+ ?x1173 ?x6234) 0)))))
(let ((@x8401 (trans @x8377 (rewrite (= (>= (+ ?x1173 ?x6234) 0) $x8639)) (= (>= (+ ?x6234 ?x1173) 0) $x8639))))
(let ((@x8438 (monotonicity (monotonicity @x8401 (= (or $x6814 (>= (+ ?x6234 ?x1173) 0)) $x7946)) (= (or $x3665 (or $x6814 (>= (+ ?x6234 ?x1173) 0))) (or $x3665 $x7946)))))
(let ((@x8439 (trans @x8438 (rewrite (= (or $x3665 $x7946) $x8076)) (= (or $x3665 (or $x6814 (>= (+ ?x6234 ?x1173) 0))) $x8076))))
(let ((@x8127 (mp ((_ quant-inst ?v1!16) (or $x3665 (or $x6814 (>= (+ ?x6234 ?x1173) 0)))) @x8439 $x8076)))
(let ((@x8777 (unit-resolution @x8127 (unit-resolution (def-axiom (or $x3809 $x3660)) @x6181 $x3660) $x7946)))
(let ((@x8778 (unit-resolution @x8777 (unit-resolution (def-axiom (or $x8313 (not $x6814))) @x8616 (not $x6814)) $x8639)))
(let ((?x1866 (v_b_SP_G_2$ ?v0!17)))
(let ((?x6890 (+ ?x1866 ?x3105)))
(let (($x6886 (<= ?x6890 0)))
(let (($x3187 (fun_app$ v_b_Visited_G_1$ ?v0!17)))
(let (($x4478 (= ?v0!17 v_b_v_G_1$)))
(let (($x4499 (or $x4478 $x3187)))
(let (($x4471 (fun_app$ ?x265 ?v0!17)))
(let (($x4593 (= $x4471 $x4499)))
(let (($x4712 (or $x4114 $x4593)))
(let ((@x4495 (monotonicity (rewrite (= (ite $x4478 true $x3187) $x4499)) (= (= $x4471 (ite $x4478 true $x3187)) $x4593))))
(let ((@x5371 (monotonicity @x4495 (= (or $x4114 (= $x4471 (ite $x4478 true $x3187))) $x4712))))
(let ((@x5958 (trans @x5371 (rewrite (= $x4712 $x4712)) (= (or $x4114 (= $x4471 (ite $x4478 true $x3187))) $x4712))))
(let ((@x6125 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!17) (or $x4114 (= $x4471 (ite $x4478 true $x3187)))) @x5958 $x4712)))
(let ((@x8749 (mp (unit-resolution (def-axiom (or $x2760 $x1862)) @x8145 $x1862) (symm (monotonicity @x5875 (= $x4471 $x1862)) (= $x1862 $x4471)) $x4471)))
(let ((@x8750 (unit-resolution (def-axiom (or (not $x4593) (not $x4471) $x4499)) @x8749 (unit-resolution @x6125 @x3473 $x4593) $x4499)))
(let ((?x4496 (fun_app$c v_b_SP_G_1$ ?v0!17)))
(let ((?x6307 (* (- 1) ?x4496)))
(let ((?x5972 (+ ?x257 ?x6307)))
(let (($x7220 (>= ?x5972 0)))
(let (($x7299 (not $x7220)))
(let ((?x5902 (+ ?x1866 ?x6307)))
(let (($x6327 (<= ?x5902 0)))
(let (($x6088 (or $x3691 $x6327)))
(let (($x6436 (>= (+ ?x4496 (* (- 1) ?x1866)) 0)))
(let ((@x6464 (monotonicity (rewrite (= (+ ?x4496 (* (- 1) ?x1866)) (+ (* (- 1) ?x1866) ?x4496))) (= $x6436 (>= (+ (* (- 1) ?x1866) ?x4496) 0)))))
(let ((@x5905 (trans @x6464 (rewrite (= (>= (+ (* (- 1) ?x1866) ?x4496) 0) $x6327)) (= $x6436 $x6327))))
(let ((@x5843 (trans (monotonicity @x5905 (= (or $x3691 $x6436) $x6088)) (rewrite (= $x6088 $x6088)) (= (or $x3691 $x6436) $x6088))))
(let ((@x7292 (unit-resolution (mp ((_ quant-inst ?v0!17) (or $x3691 $x6436)) @x5843 $x6088) @x6892 $x6327)))
(let (($x6936 (not $x6886)))
(let ((@x6513 (hypothesis $x6936)))
(let ((@x8452 (unit-resolution ((_ th-lemma arith assign-bounds -1 1 1 -1) (or $x7299 (not $x6327) $x6886 $x4315 (not $x4239))) @x6513 @x7292 @x6019 @x7839 $x7299)))
(let (($x6485 (not $x4478)))
(let (($x6889 (= ?x1866 ?x3104)))
(let (($x6250 (not $x6889)))
(let ((@x6214 ((_ th-lemma arith triangle-eq) (or $x6250 $x6886))))
(let ((@x6921 (unit-resolution (hypothesis $x6250) (monotonicity (hypothesis $x4478) $x6889) false)))
(let ((@x6939 (lemma @x6921 (or $x6485 $x6889))))
(let ((@x5812 (def-axiom (or (not $x4499) $x4478 $x3187))))
(let ((@x8341 (unit-resolution @x5812 (unit-resolution @x6939 (unit-resolution @x6214 @x6513 $x6250) $x6485) (hypothesis $x4499) $x3187)))
(let (($x7229 (= (or $x3570 (or $x255 (not $x3187) $x7220)) (or $x3570 $x255 (not $x3187) $x7220))))
(let ((@x7231 (mp ((_ quant-inst ?v0!17 v_b_v_G_1$) (or $x3570 (or $x255 (not $x3187) $x7220))) (rewrite $x7229) (or $x3570 $x255 (not $x3187) $x7220))))
(let ((@x8111 (lemma (unit-resolution @x7231 @x5748 @x6225 @x8341 @x8452 false) (or $x6886 (not $x4499)))))
(let ((@x8747 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 -1 1) (or $x8588 (not $x8639) $x1869 $x6936 (not $x4177) (not $x3044))) (unit-resolution @x8111 @x8750 $x6886) @x6933 @x6930 (unit-resolution (def-axiom (or $x2760 (not $x1869))) @x8145 (not $x1869)) @x8778 $x8588)))
(let (($x6079 (or $x4445 $x6378)))
(let (($x6188 (or $x3683 $x4445 $x6378)))
(let (($x6219 (or (not (or $x6238 (<= (+ ?x6234 ?x1173 (* (- 1) ?x6374)) 0))) $x6378)))
(let (($x6365 (or $x3683 $x6219)))
(let (($x6539 (<= (+ ?x6234 ?x1173 (* (- 1) ?x6374)) 0)))
(let ((@x6817 (rewrite (= (+ ?x6234 ?x1173 (* (- 1) ?x6374)) (+ ?x1173 ?x6234 (* (- 1) ?x6374))))))
(let ((@x7239 (monotonicity @x6817 (= $x6539 (<= (+ ?x1173 ?x6234 (* (- 1) ?x6374)) 0)))))
(let ((@x4408 (trans @x7239 (rewrite (= (<= (+ ?x1173 ?x6234 (* (- 1) ?x6374)) 0) $x7540)) (= $x6539 $x7540))))
(let ((@x6718 (monotonicity (monotonicity @x4408 (= (or $x6238 $x6539) $x4492)) (= (not (or $x6238 $x6539)) $x4445))))
(let ((@x7376 (monotonicity (monotonicity @x6718 (= $x6219 $x6079)) (= $x6365 (or $x3683 $x6079)))))
(let ((@x7375 (mp ((_ quant-inst ?v1!16) $x6365) (trans @x7376 (rewrite (= (or $x3683 $x6079) $x6188)) (= $x6365 $x6188)) $x6188)))
(let ((@x8141 (unit-resolution (unit-resolution @x7375 @x5944 $x6079) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8060 $x7372)) @x8747 $x8060) $x4445)))
(let (($x7378 (or $x6238 $x7540 $x7408)))
(let (($x7022 (or $x3675 $x6238 $x7540 $x7408)))
(let (($x6399 (or $x6238 $x6539 (= (+ ?x257 ?x6374 ?x6126) 0))))
(let (($x6139 (or $x3675 $x6399)))
(let ((@x7409 (monotonicity (rewrite (= (+ ?x257 ?x6374 ?x6126) ?x6400)) (= (= (+ ?x257 ?x6374 ?x6126) 0) $x7408))))
(let ((@x6535 (monotonicity (monotonicity @x4408 @x7409 (= $x6399 $x7378)) (= $x6139 (or $x3675 $x7378)))))
(let ((@x7425 (mp ((_ quant-inst ?v1!16) $x6139) (trans @x6535 (rewrite (= (or $x3675 $x7378) $x7022)) (= $x6139 $x7022)) $x7022)))
(let ((@x8177 (unit-resolution (unit-resolution @x7425 @x6588 $x7378) (unit-resolution (def-axiom (or $x4492 (not $x7540))) @x8141 (not $x7540)) (unit-resolution (def-axiom (or $x4492 $x7360)) @x8141 $x7360) $x7408)))
(let ((@x8386 ((_ th-lemma arith farkas 1 1 1 1 1 1) (unit-resolution (def-axiom (or $x2760 (not $x1869))) @x8145 (not $x1869)) (unit-resolution @x8111 @x8750 $x6886) @x6933 @x6930 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7408) $x6319)) @x8177 $x6319) (unit-resolution @x8872 @x8586 $x7206) false)))
(let ((@x3365 (def-axiom (or $x3758 $x2765 $x3752))))
(let ((@x9306 (unit-resolution @x3365 (lemma @x8386 $x2760) (unit-resolution (def-axiom (or $x3761 $x3755)) @x9304 $x3755) $x3752)))
(let ((@x8028 (rewrite (= (or $x3717 (or $x4278 $x4127 $x4382)) (or $x3717 $x4278 $x4127 $x4382)))))
(let ((@x7980 (mp ((_ quant-inst v_b_v_G_1$ ?v0!20) (or $x3717 (or $x4278 $x4127 $x4382))) @x8028 (or $x3717 $x4278 $x4127 $x4382))))
(let ((@x9309 (unit-resolution @x7980 (unit-resolution (def-axiom (or $x3749 $x3712)) @x9306 $x3712) @x7413 (or $x4278 $x4382))))
(let (($x4508 (>= ?x4487 0)))
(let ((@x9314 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or $x4508 (not $x4569) (not $x3886))) @x6925 (or $x4508 (not $x4569)))))
(let ((@x9316 ((_ th-lemma arith eq-propagate -1 -1 -1 -1 -1 -1 1 1) (unit-resolution @x9314 (hypothesis $x4569) $x4508) @x9295 (unit-resolution @x9309 @x9302 $x4382) @x9300 @x6019 @x6933 @x6930 @x7839 $x5391)))
(let (($x5388 (not $x5387)))
(let (($x5389 (or $x5386 $x5388)))
(let ((@x7596 (mp ((_ quant-inst v_b_v_G_1$ ?v0!20) (or (not $x3480) $x5389)) (rewrite (= (or (not $x3480) $x5389) (or (not $x3480) $x5386 $x5388))) (or (not $x3480) $x5386 $x5388))))
(let ((@x9321 (unit-resolution (unit-resolution @x7596 @x3485 $x5389) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5391) $x5387)) @x9316 $x5387) $x5386)))
(let ((@x8870 (unit-resolution (lemma (unit-resolution @x9321 @x9338 false) (or $x4400 $x3734 (not $x4569))) (unit-resolution (def-axiom (or $x3737 $x3729)) @x4391 $x3729) @x4467 $x4400)))
(let ((@x8892 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4400) $x5977)) @x8870 $x5977)))
(let ((?x4641 (?v1!7 ?v0!20)))
(let ((?x4648 (pair$ ?x4641 ?v0!20)))
(let ((?x4649 (b_G$ ?x4648)))
(let ((?x4650 (* (- 1) ?x4649)))
(let ((?x4642 (fun_app$c v_b_SP_G_1$ ?x4641)))
(let ((?x4643 (* (- 1) ?x4642)))
(let ((?x4651 (+ ?x4393 ?x4643 ?x4650)))
(let (($x8653 (>= ?x4651 0)))
(let (($x4652 (= ?x4651 0)))
(let (($x4653 (not $x4652)))
(let (($x4646 (fun_app$ v_b_Visited_G_1$ ?x4641)))
(let (($x4647 (not $x4646)))
(let ((?x4644 (+ ?x4393 ?x4643)))
(let (($x4645 (<= ?x4644 0)))
(let (($x4654 (or $x4645 $x4647 $x4653)))
(let (($x4655 (not $x4654)))
(let (($x4640 (<= (+ b_Infinity$ ?x4418) 0)))
(let (($x7886 (not $x4640)))
(let ((@x8893 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or (not $x5977) $x1914 $x7886)) @x8892 (unit-resolution (def-axiom (or $x3737 $x1915)) @x4391 $x1915) $x7886)))
(let ((@x7414 (rewrite (= (or $x3586 (or $x1909 $x4640 $x4655)) (or $x3586 $x1909 $x4640 $x4655)))))
(let ((@x7415 (mp ((_ quant-inst ?v0!20) (or $x3586 (or $x1909 $x4640 $x4655))) @x7414 (or $x3586 $x1909 $x4640 $x4655))))
(let ((@x8894 (unit-resolution @x7415 @x4545 (unit-resolution (def-axiom (or $x3737 $x1910)) @x4391 $x1910) (or $x4640 $x4655))))
(let ((@x8897 (unit-resolution @x8894 @x8893 $x4655)))
(let ((@x8280 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4653 $x8653)) (unit-resolution (def-axiom (or $x4654 $x4652)) @x8897 $x4652) $x8653)))
(let (($x8584 (<= ?x4651 0)))
(let ((@x7677 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4653 $x8584)) (unit-resolution (def-axiom (or $x4654 $x4652)) @x8897 $x4652) $x8584)))
(let (($x4689 (fun_app$ v_b_Visited_G_2$ ?x4641)))
(let ((@x6032 (monotonicity (symm (hypothesis $x266) (= ?x265 v_b_Visited_G_2$)) (= (fun_app$ ?x265 ?x4641) $x4689))))
(let ((@x6036 (monotonicity (symm @x6032 (= $x4689 (fun_app$ ?x265 ?x4641))) (= (not $x4689) (not (fun_app$ ?x265 ?x4641))))))
(let (($x5978 (fun_app$ ?x265 ?x4641)))
(let (($x5985 (= ?x4641 v_b_v_G_1$)))
(let (($x5988 (or $x5985 $x4646)))
(let (($x5991 (= $x5978 $x5988)))
(let (($x5994 (or $x4114 $x5991)))
(let ((@x5993 (monotonicity (rewrite (= (ite $x5985 true $x4646) $x5988)) (= (= $x5978 (ite $x5985 true $x4646)) $x5991))))
(let ((@x5998 (monotonicity @x5993 (= (or $x4114 (= $x5978 (ite $x5985 true $x4646))) $x5994))))
(let ((@x6001 (trans @x5998 (rewrite (= $x5994 $x5994)) (= (or $x4114 (= $x5978 (ite $x5985 true $x4646))) $x5994))))
(let ((@x6002 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true (?v1!7 ?v0!20)) (or $x4114 (= $x5978 (ite $x5985 true $x4646)))) @x6001 $x5994)))
(let ((@x6025 (unit-resolution (def-axiom (or (not $x5991) $x5978 (not $x5988))) (unit-resolution (def-axiom (or $x5988 $x4647)) (hypothesis $x4646) $x5988) (or (not $x5991) $x5978))))
(let ((@x6038 (unit-resolution (unit-resolution @x6025 (unit-resolution @x6002 @x3473 $x5991) $x5978) (mp (hypothesis (not $x4689)) @x6036 (not $x5978)) false)))
(let ((@x8188 (unit-resolution (lemma @x6038 (or $x4689 $x2935 $x4647)) (unit-resolution (def-axiom (or $x3809 $x266)) @x6181 $x266) (or $x4689 $x4647))))
(let ((@x8763 (unit-resolution @x8188 (unit-resolution (def-axiom (or $x4654 $x4646)) @x8897 $x4646) $x4689)))
(let ((?x4697 (v_b_SP_G_2$ ?x4641)))
(let ((?x4700 (* (- 1) ?x4697)))
(let ((?x4868 (+ ?x1911 ?x4700)))
(let (($x7732 (<= ?x4868 0)))
(let (($x9853 (not $x7732)))
(let ((?x4701 (+ ?x4642 ?x4700)))
(let (($x4708 (>= ?x4701 0)))
(let ((@x8509 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1) (or $x9853 $x4645 (not $x5977) (not $x4708))) @x8892 (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3691 $x4708)) @x6892 $x4708) (unit-resolution (def-axiom (or $x4654 (not $x4645))) @x8897 (not $x4645)) $x9853)))
(let ((?x7938 (+ ?x1911 ?x4650 ?x4700)))
(let (($x8292 (<= ?x7938 0)))
(let (($x5038 (<= ?x4701 0)))
(let (($x8272 (= ?x4642 ?x4697)))
(let ((@x9865 (symm (commutativity (= $x8272 (= ?x4697 ?x4642))) (= (= ?x4697 ?x4642) $x8272))))
(let (($x4698 (= ?x4697 ?x4642)))
(let ((@x8267 (rewrite (= (or $x3700 (or (not $x4689) $x4698)) (or $x3700 (not $x4689) $x4698)))))
(let ((@x8268 (mp ((_ quant-inst (?v1!7 ?v0!20)) (or $x3700 (or (not $x4689) $x4698))) @x8267 (or $x3700 (not $x4689) $x4698))))
(let ((@x9794 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8272) $x5038)) (mp (unit-resolution @x8268 @x7618 (hypothesis $x4689) $x4698) @x9865 $x8272) $x5038)))
(let (($x7927 (<= ?x4419 0)))
(let (($x8009 (or $x3691 $x7927)))
(let ((@x8030 (monotonicity (rewrite (= (+ ?x4393 ?x1912) (+ ?x1912 ?x4393))) (= (>= (+ ?x4393 ?x1912) 0) (>= (+ ?x1912 ?x4393) 0)))))
(let ((@x8091 (trans @x8030 (rewrite (= (>= (+ ?x1912 ?x4393) 0) $x7927)) (= (>= (+ ?x4393 ?x1912) 0) $x7927))))
(let ((@x8854 (trans (monotonicity @x8091 (= (or $x3691 (>= (+ ?x4393 ?x1912) 0)) $x8009)) (rewrite (= $x8009 $x8009)) (= (or $x3691 (>= (+ ?x4393 ?x1912) 0)) $x8009))))
(let ((@x9860 (unit-resolution (mp ((_ quant-inst ?v0!20) (or $x3691 (>= (+ ?x4393 ?x1912) 0))) @x8854 $x8009) @x6892 $x7927)))
(let ((@x10107 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1) (or $x8292 (not $x8584) (not $x7927) (not $x5038))) @x9860 (hypothesis $x8584) @x9794 $x8292)))
(let (($x8954 (>= ?x7938 0)))
(let ((@x10056 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1) (or $x8954 (not $x8653) (not $x5977) (not $x4708))) (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3691 $x4708)) @x6892 $x4708) (hypothesis $x8653) (hypothesis $x5977) $x8954)))
(let (($x8665 (= ?x7938 0)))
(let (($x9226 (not $x8665)))
(let (($x4690 (not $x4689)))
(let (($x6495 (or $x3734 $x7732 $x4690 $x9226)))
(let (($x4857 (>= (+ ?x4697 ?x1912) 0)))
(let (($x4861 (or $x4857 $x4690 (not (= (+ ?x4697 ?x1912 ?x4649) 0)))))
(let (($x9201 (or $x3734 $x4861)))
(let ((@x8630 (monotonicity (rewrite (= (+ ?x4697 ?x1912 ?x4649) (+ ?x1912 ?x4649 ?x4697))) (= (= (+ ?x4697 ?x1912 ?x4649) 0) (= (+ ?x1912 ?x4649 ?x4697) 0)))))
(let ((@x8460 (trans @x8630 (rewrite (= (= (+ ?x1912 ?x4649 ?x4697) 0) $x8665)) (= (= (+ ?x4697 ?x1912 ?x4649) 0) $x8665))))
(let ((@x7449 (monotonicity (rewrite (= (+ ?x4697 ?x1912) (+ ?x1912 ?x4697))) (= $x4857 (>= (+ ?x1912 ?x4697) 0)))))
(let ((@x7972 (trans @x7449 (rewrite (= (>= (+ ?x1912 ?x4697) 0) $x7732)) (= $x4857 $x7732))))
(let ((@x4476 (monotonicity @x7972 (monotonicity @x8460 (= (not (= (+ ?x4697 ?x1912 ?x4649) 0)) $x9226)) (= $x4861 (or $x7732 $x4690 $x9226)))))
(let ((@x8430 (trans (monotonicity @x4476 (= $x9201 (or $x3734 (or $x7732 $x4690 $x9226)))) (rewrite (= (or $x3734 (or $x7732 $x4690 $x9226)) $x6495)) (= $x9201 $x6495))))
(let ((@x10015 (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!20)) $x9201) @x8430 $x6495) (hypothesis $x3729) (hypothesis $x4689) (or $x7732 $x9226))))
(let ((@x10016 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8665 (not $x8292) (not $x8954))) (unit-resolution @x10015 (hypothesis $x9853) $x9226) @x10056 @x10107 false)))
(let ((@x8164 (unit-resolution (lemma @x10016 (or $x7732 $x3734 $x4690 (not $x8584) (not $x8653) (not $x5977))) @x8509 (unit-resolution (def-axiom (or $x3737 $x3729)) @x4391 $x3729) @x8763 @x7677 @x8280 @x8892 false)))
(let ((@x3278 (def-axiom (or $x3746 $x2811 $x3740))))
(let ((@x8072 (unit-resolution @x3278 (unit-resolution (def-axiom (or $x3749 $x3743)) @x9306 $x3743) $x3743)))
(let (($x3378 (not $x1896)))
(let ((@x3380 (def-axiom (or $x2806 $x3378))))
(let ((@x8073 (unit-resolution @x3380 (unit-resolution @x8072 (lemma @x8164 $x3737) $x2811) $x3378)))
(let ((?x6619 (fun_app$c v_b_SP_G_1$ ?v1!18)))
(let (($x6615 (= ?x1892 ?x6619)))
(let (($x7620 (not $x6615)))
(let ((@x7607 (hypothesis $x2811)))
(let ((@x7608 (unit-resolution (def-axiom (or $x2806 $x1883)) @x7607 $x1883)))
(let ((@x7570 (hypothesis $x3378)))
(let (($x1889 (not $x1888)))
(let ((@x7615 (unit-resolution (def-axiom (or $x2806 $x1889)) @x7607 $x1889)))
(let ((?x6721 (* (- 1) ?x6619)))
(let ((?x5600 (+ ?x1892 ?x6721)))
(let (($x7353 (>= ?x5600 0)))
(let ((@x9059 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7620 $x7353)) (hypothesis $x6615) $x7353)))
(let ((?x7110 (pair$ v_b_v_G_1$ ?v0!19)))
(let ((?x7111 (b_G$ ?x7110)))
(let ((?x7100 (* (- 1) ?x7111)))
(let ((?x7554 (+ ?x1885 ?x7100)))
(let (($x7556 (>= ?x7554 0)))
(let (($x7003 (= ?x1885 ?x7111)))
(let (($x7243 (= ?v1!18 v_b_v_G_1$)))
(let (($x7246 (fun_app$ v_b_Visited_G_1$ ?v1!18)))
(let (($x6211 (not $x7246)))
(let (($x7248 (>= (+ ?x1885 ?x6619 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!19))) 0)))
(let (($x7499 (not $x7248)))
(let ((@x7004 (hypothesis $x7353)))
(let ((?x7053 (fun_app$c v_b_SP_G_1$ ?v0!19)))
(let ((?x7074 (* (- 1) ?x7053)))
(let ((?x7075 (+ ?x1893 ?x7074)))
(let (($x7076 (<= ?x7075 0)))
(let (($x7084 (or $x3691 $x7076)))
(let ((@x7073 (monotonicity (rewrite (= (+ ?x7053 ?x1894) (+ ?x1894 ?x7053))) (= (>= (+ ?x7053 ?x1894) 0) (>= (+ ?x1894 ?x7053) 0)))))
(let ((@x7080 (trans @x7073 (rewrite (= (>= (+ ?x1894 ?x7053) 0) $x7076)) (= (>= (+ ?x7053 ?x1894) 0) $x7076))))
(let ((@x7090 (trans (monotonicity @x7080 (= (or $x3691 (>= (+ ?x7053 ?x1894) 0)) $x7084)) (rewrite (= $x7084 $x7084)) (= (or $x3691 (>= (+ ?x7053 ?x1894) 0)) $x7084))))
(let ((@x7496 (unit-resolution (mp ((_ quant-inst ?v0!19) (or $x3691 (>= (+ ?x7053 ?x1894) 0))) @x7090 $x7084) @x6892 $x7076)))
(let ((@x7501 (lemma ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis $x7248) @x7570 @x7496 @x7004 false) (or $x7499 $x1896 (not $x7353)))))
(let ((@x6992 (rewrite (= (or $x3578 (or $x6211 $x1888 $x7248)) (or $x3578 $x6211 $x1888 $x7248)))))
(let ((@x7051 (mp ((_ quant-inst ?v0!19 ?v1!18) (or $x3578 (or $x6211 $x1888 $x7248))) @x6992 (or $x3578 $x6211 $x1888 $x7248))))
(let ((@x9076 (unit-resolution (unit-resolution @x7051 @x4223 (hypothesis $x1889) (or $x6211 $x7248)) (unit-resolution @x7501 @x9059 @x7570 $x7499) $x6211)))
(let (($x7222 (or $x7243 $x7246)))
(let (($x6667 (fun_app$ ?x265 ?v1!18)))
(let (($x6740 (= $x6667 $x7222)))
(let (($x6746 (or $x4114 $x6740)))
(let ((@x6743 (monotonicity (rewrite (= (ite $x7243 true $x7246) $x7222)) (= (= $x6667 (ite $x7243 true $x7246)) $x6740))))
(let ((@x6845 (monotonicity @x6743 (= (or $x4114 (= $x6667 (ite $x7243 true $x7246))) $x6746))))
(let ((@x4954 (trans @x6845 (rewrite (= $x6746 $x6746)) (= (or $x4114 (= $x6667 (ite $x7243 true $x7246))) $x6746))))
(let ((@x6537 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!18) (or $x4114 (= $x6667 (ite $x7243 true $x7246)))) @x4954 $x6746)))
(let ((@x9160 (mp (hypothesis $x1883) (symm (monotonicity @x5875 (= $x6667 $x1883)) (= $x1883 $x6667)) $x6667)))
(let ((@x9163 (unit-resolution (def-axiom (or (not $x6740) (not $x6667) $x7222)) @x9160 (unit-resolution @x6537 @x3473 $x6740) $x7222)))
(let ((@x4955 (def-axiom (or (not $x7222) $x7243 $x7246))))
(let ((@x7000 (unit-resolution (hypothesis (not $x7003)) (monotonicity (monotonicity (hypothesis $x7243) (= ?x1884 ?x7110)) $x7003) false)))
(let ((@x7002 (lemma @x7000 (or (not $x7243) $x7003))))
(let ((@x7011 ((_ th-lemma arith triangle-eq) (or (not $x7003) $x7556))))
(let ((@x9060 (unit-resolution @x7011 (unit-resolution @x7002 (unit-resolution @x4955 @x9163 @x9076 $x7243) $x7003) $x7556)))
(let (($x7366 (<= (+ ?x257 ?x6721) 0)))
(let (($x8813 (or $x3665 $x7246 $x7366)))
(let (($x7357 (>= (+ ?x6619 ?x1173) 0)))
(let (($x7358 (or $x7246 $x7357)))
(let (($x8814 (or $x3665 $x7358)))
(let ((@x8805 (monotonicity (rewrite (= (+ ?x6619 ?x1173) (+ ?x1173 ?x6619))) (= $x7357 (>= (+ ?x1173 ?x6619) 0)))))
(let ((@x8809 (trans @x8805 (rewrite (= (>= (+ ?x1173 ?x6619) 0) $x7366)) (= $x7357 $x7366))))
(let ((@x8818 (monotonicity (monotonicity @x8809 (= $x7358 (or $x7246 $x7366))) (= $x8814 (or $x3665 (or $x7246 $x7366))))))
(let ((@x8822 (trans @x8818 (rewrite (= (or $x3665 (or $x7246 $x7366)) $x8813)) (= $x8814 $x8813))))
(let ((@x8620 (unit-resolution (mp ((_ quant-inst ?v1!18) $x8814) @x8822 $x8813) (unit-resolution (def-axiom (or $x3809 $x3660)) @x6181 $x3660) @x9076 $x7366)))
(let (($x7102 (<= (+ b_Infinity$ ?x7100) 0)))
(let (($x7158 (not $x7102)))
(let ((@x8621 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x7158 $x1888 (not $x7556))) @x9060 (hypothesis $x1889) $x7158)))
(let ((?x7171 (+ ?x257 ?x1894 ?x7111)))
(let (($x7252 (>= ?x7171 0)))
(let (($x7575 (not $x7252)))
(let ((@x8781 (unit-resolution ((_ th-lemma arith assign-bounds -1 1 -1 1) (or $x7575 $x1896 (not $x7353) (not $x7366) (not $x7556))) @x8620 @x9060 @x7570 @x9059 $x7575)))
(let (($x7117 (>= (+ ?x257 ?x7074 ?x7111) 0)))
(let (($x7161 (not $x7117)))
(let ((@x9234 ((_ th-lemma arith assign-bounds -1 -1 1 -1 1) (or $x7161 (not $x7076) $x1896 (not $x7353) (not $x7366) (not $x7556)))))
(let ((@x9235 (unit-resolution @x9234 (hypothesis $x7366) (hypothesis $x7556) @x7570 @x7004 @x7496 $x7161)))
(let ((@x9237 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x7171 0)) $x7252)) (hypothesis $x7575) (not (= ?x7171 0)))))
(let (($x7174 (= ?x7171 0)))
(let (($x7184 (or $x7102 $x7117 $x7174)))
(let (($x7186 (or $x3675 $x7102 $x7117 $x7174)))
(let (($x7104 (<= (+ ?x7053 ?x1173 ?x7100) 0)))
(let (($x7165 (or $x7102 $x7104 (= (+ ?x257 ?x7111 ?x1894) 0))))
(let (($x7187 (or $x3675 $x7165)))
(let ((@x7183 (monotonicity (rewrite (= (+ ?x257 ?x7111 ?x1894) ?x7171)) (= (= (+ ?x257 ?x7111 ?x1894) 0) $x7174))))
(let ((@x7115 (monotonicity (rewrite (= (+ ?x7053 ?x1173 ?x7100) (+ ?x1173 ?x7053 ?x7100))) (= $x7104 (<= (+ ?x1173 ?x7053 ?x7100) 0)))))
(let ((@x7128 (trans @x7115 (rewrite (= (<= (+ ?x1173 ?x7053 ?x7100) 0) $x7117)) (= $x7104 $x7117))))
(let ((@x7205 (monotonicity (monotonicity @x7128 @x7183 (= $x7165 $x7184)) (= $x7187 (or $x3675 $x7184)))))
(let ((@x7250 (mp ((_ quant-inst ?v0!19) $x7187) (trans @x7205 (rewrite (= (or $x3675 $x7184) $x7186)) (= $x7187 $x7186)) $x7186)))
(let ((@x9238 (unit-resolution (unit-resolution @x7250 @x6588 $x7184) @x9237 @x9235 (hypothesis $x7158) false)))
(let ((@x8782 (unit-resolution (lemma @x9238 (or $x7252 $x7102 (not $x7366) (not $x7556) $x1896 (not $x7353))) @x8781 @x8621 @x8620 @x9060 @x7570 @x9059 false)))
(let ((@x8908 (unit-resolution (lemma @x8782 (or $x7620 $x1896 $x1888 $x2791)) @x7615 @x7570 @x7608 $x7620)))
(let ((@x7245 (mp ((_ quant-inst ?v1!18) (or $x3700 (or $x2791 $x6615))) (rewrite (= (or $x3700 (or $x2791 $x6615)) (or $x3700 $x2791 $x6615))) (or $x3700 $x2791 $x6615))))
(unit-resolution (lemma (unit-resolution @x7245 @x7618 @x7608 @x8908 false) (or $x2806 $x1896)) @x8073 (unit-resolution @x8072 (lemma @x8164 $x3737) $x2811) false

